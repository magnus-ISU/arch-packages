// Title of Program "Mainsworthy Linux Terminal Chess Engine".
// you can use this engine in textmode on a Linux Terminal
// 
// Author "Mark Ainsworth" born 21061965 Location Near Manchester UK
//
// Copywrite Mark Ainsworth (c)2010 new version 2018
//
// you can compile it with g++ easily, it has one source file
// if you have root permission, in a terminal go to the directory with source file
// then at the terminal g++ mainsworthytc, a file named a.out will be created
// make sure its permissions are executabel, and rename it mwtc
// then run it

#include <time.h>

#include <stdio.h>
//#include <conio.h>
#include <string.h>
#include <stdlib.h>
//#include<io.h>
#include <math.h>
#include <time.h>
#include <fcntl.h>
//#include <iostream.h>
//#include <fstream.h>
//#include <windows.h>
struct bord {
  int boardval[65];
  int castlerule[4];
  int enpassrule[9];
  int movelist[250];
  int attackpos[65];
  int battackpos[65];
};


int ttxt = 0;


int newboard[65] = {0,499,299,324,949,4999,324,299,499,
                      99, 99, 99, 99, 99,  99, 99, 99,
                      0,  0,  0,  0,  0,   0,  0,  0,
                      0,  0,  0,  0,  0,   0,  0,  0,
                      0,  0,  0,  0,  0,   0,  0,  0,
                      0,  0,  0,  0,  0,   0,  0,  0,
                      100,100,100,100,100, 100,100,100,
                      500,300,325,950,5000,325,300,500};


int newboardtest[65] = {0,0,0,0,0,0,0,0,0,
                      0,0,0,0,0,0,0,0,
                      0,0,0,0,0,0,0,0,
                      0,0,0,0,0,0,0,0,
                      0,0,0,0,0,0,0,0,
                      0,0,0,0,324,0,0,0,
                      0,0,0,0,0,0,0,0,
                      500,0,0,0,5000,0,0,0};

int castlerule[4] = {1,1,1,1};

int enpassrule[9] = {0,0,0,0,0,0,0,0,0};

int blank[65] = {0,0,0,0,0,0,0,0,0,
                  0,0,0,0,0,0,0,0,
                  0,0,0,0,0,0,0,0,
                  0,0,0,0,0,0,0,0,
                  0,0,0,0,0,0,0,0,
                  0,0,0,0,0,0,0,0,
                  0,0,0,0,0,0,0,0,
                  0,0,0,0,0,0,0,0};

int empty[65]={0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};

int h1=64,h2=56,h3=48,h4=40,h5=32,h6=24,h7=16,h8=8;
int g1=63,g2=55,g3=47,g4=39,g5=31,g6=23,g7=15,g8=7;
int f1=62,f2=54,f3=46,f4=38,f5=30,f6=22,f7=14,f8=6;
int e1=61,e2=53,e3=45,e4=37,e5=29,e6=21,e7=13,e8=5;
int d1=60,d2=52,d3=44,d4=36,d5=28,d6=20,d7=12,d8=4;
int c1=59,c2=51,c3=43,c4=35,c5=27,c6=19,c7=11,c8=3;
int b8=2,b7=10,b6=18,b5=26,b4=34,b3=42,b2=50,b1=58;
int a8=1,a7=9,a6=17,a5=25,a4=33,a3=41,a2=49,a1=57;



int kingh8[20] = {16,0,15,0,7,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};
int kingh7[20] = {24,0,23,0,15,0,7,0,8,90,0,0,0,0,0,0,0,0,0,0,};
int kingh6[20] = {32,0,31,0,23,0,15,0,16,90,0,0,0,0,0,0,0,0,0,0,};
int kingh5[20] = {40,0,39,0,31,0,23,0,24,90,0,0,0,0,0,0,0,0,0,0,};
int kingh4[20] = {48,0,47,0,39,0,31,0,32,90,0,0,0,0,0,0,0,0,0,0,};
int kingh3[20] = {56,0,55,0,47,0,39,0,40,90,0,0,0,0,0,0,0,0,0,0,};
int kingh2[20] = {64,0,63,0,55,0,47,0,48,90,0,0,0,0,0,0,0,0,0,0,};
int kingh1[20] = {63,0,55,0,56,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};

int kingg8[20] = {6,0,14,0,15,0,16,0,8,90,0,0,0,0,0,0,0,0,0,0,};
int kingg7[20] = {7,0,8,0,16,0,24,0,23,0,22,0,14,0,6,90,0,0,0,0,};
int kingg6[20] = {15,0,16,0,24,0,32,0,31,0,30,0,22,0,14,90,0,0,0,0,};
int kingg5[20] = {23,0,24,0,32,0,40,0,39,0,38,0,30,0,22,90,0,0,0,0,};
int kingg4[20] = {31,0,32,0,40,0,48,0,47,0,46,0,38,0,30,90,0,0,0,0,};
int kingg3[20] = {39,0,40,0,48,0,56,0,55,0,54,0,46,0,38,90,0,0,0,0,};
int kingg2[20] = {47,0,48,0,56,0,64,0,63,0,62,0,54,0,46,90,0,0,0,0,};
int kingg1[20] = {62,0,54,0,55,0,56,0,64,90,0,0,0,0,0,0,0,0,0,0,};

int kingf8[20] = {5,0,13,0,14,0,15,0,7,90,0,0,0,0,0,0,0,0,0,0,};
int kingf7[20] = {6,0,7,0,15,0,23,0,22,0,21,0,13,0,5,90,0,0,0,0,};
int kingf6[20] = {14,0,15,0,23,0,31,0,30,0,29,0,21,0,13,90,0,0,0,0,};
int kingf5[20] = {22,0,23,0,31,0,39,0,38,0,37,0,29,0,21,90,0,0,0,0,};
int kingf4[20] = {30,0,31,0,39,0,47,0,46,0,45,0,37,0,29,90,0,0,0,0,};
int kingf3[20] = {38,0,39,0,47,0,55,0,54,0,53,0,45,0,37,90,0,0,0,};
int kingf2[20] = {46,0,47,0,55,0,63,0,62,0,61,0,53,0,45,90,0,0,0,0,};
int kingf1[20] = {61,0,53,0,54,0,55,0,63,90,0,0,0,0,0,0,0,0,0,0,};

int kinge8[20] = {4,0,12,0,13,0,14,0,6,90,0,0,0,0,0,0,0,0,0,0,};
int kinge7[20] = {5,0,6,0,14,0,22,0,21,0,20,0,12,0,4,90,0,0,0,0,};
int kinge6[20] = {13,0,14,0,22,0,30,0,29,0,28,0,20,0,12,90,0,0,0,0,};
int kinge5[20] = {21,0,22,0,30,0,38,0,37,0,36,0,28,0,20,90,0,0,0,0,};
int kinge4[20] = {29,0,30,0,38,0,46,0,45,0,44,0,36,0,28,90,0,0,0,0,};
int kinge3[20] = {37,0,38,0,46,0,54,0,53,0,52,0,44,0,36,90,0,0,0,0,};
int kinge2[20] = {45,0,46,0,54,0,62,0,61,0,60,0,52,0,44,90,0,0,0,0,};
int kinge1[20] = {60,0,52,0,53,0,54,0,62,90,0,0,0,0,0,0,0,0,0,0,};

int kingd8[20] = {5,0,13,0,12,0,11,0,3,90,0,0,0,0,0,0,0,0,0,0,};
int kingd7[20] = {4,0,5,0,13,0,21,0,20,0,19,0,11,0,3,90,0,0,0,0,};
int kingd6[20] = {12,0,13,0,21,0,29,0,28,0,27,0,19,0,11,90,0,0,0,0,};
int kingd5[20] = {20,0,21,0,29,0,37,0,36,0,35,0,27,0,19,90,0,0,0,0,};
int kingd4[20] = {28,0,29,0,37,0,45,0,44,0,43,0,35,0,27,90,0,0,0,0,};
int kingd3[20] = {36,0,37,0,45,0,53,0,52,0,51,0,43,0,35,90,0,0,0,0,};
int kingd2[20] = {44,0,45,0,53,0,61,0,60,0,59,0,51,0,43,90,0,0,0,0,};
int kingd1[20] = {59,0,51,0,52,0,53,0,61,90,0,0,0,0,0,0,0,0,0,0,};

int kingc8[20] = {4,0,12,0,11,0,10,0,2,90,0,0,0,0,0,0,0,0,0,0,};
int kingc7[20] = {3,0,4,0,12,0,20,0,19,0,18,0,10,0,2,90,0,0,0,0,};
int kingc6[20] = {11,0,12,0,20,0,28,0,27,0,26,0,18,0,10,90,0,0,0,0,};
int kingc5[20] = {19,0,20,0,28,0,36,0,35,0,34,0,26,0,18,90,0,0,0,0,};
int kingc4[20] = {27,0,28,0,36,0,44,0,43,0,42,0,34,0,26,90,0,0,0,0,};
int kingc3[20] = {35,0,36,0,44,0,52,0,51,0,50,0,42,0,34,90,0,0,0,0,};
int kingc2[20] = {43,0,44,0,52,0,60,0,59,0,58,0,50,0,42,90,0,0,0,0,};
int kingc1[20] = {58,0,50,0,51,0,52,0,60,90,0,0,0,0,0,0,0,0,0,0,};

int kingb8[20] = {3,0,11,0,10,0,9,0,1,90,0,0,0,0,0,0,0,0,0,0,};
int kingb7[20] = {2,0,3,0,11,0,19,0,18,0,17,0,9,0,1,90,0,0,0,0,};
int kingb6[20] = {10,0,11,0,19,0,27,0,26,0,25,0,17,0,9,90,0,0,0,0,};
int kingb5[20] = {18,0,19,0,27,0,35,0,34,0,33,0,25,0,17,90,0,0,0,0,};
int kingb4[20] = {26,0,27,0,35,0,43,0,42,0,41,0,33,0,25,90,0,0,0,0,};
int kingb3[20] = {34,0,35,0,43,0,51,0,50,0,49,0,41,0,33,90,0,0,0,0,};
int kingb2[20] = {42,0,43,0,51,0,59,0,58,0,57,0,49,0,41,90,0,0,0,0,};
int kingb1[20] = {57,0,49,0,50,0,51,0,59,90,0,0,0,0,0,0,0,0,0,0,};

int kinga8[20] = {2,0,10,0,9,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};
int kinga7[20] = {1,0,2,0,10,0,18,0,17,90,0,0,0,0,0,0,0,0,0,0,};
int kinga6[20] = {9,0,10,0,18,0,26,0,25,90,0,0,0,0,0,0,0,0,0,0,};
int kinga5[20] = {17,0,18,0,26,0,34,0,33,90,0,0,0,0,0,0,0,0,0,0,};
int kinga4[20] = {25,0,26,0,34,0,42,0,41,90,0,0,0,0,0,0,0,0,0,0,};
int kinga3[20] = {33,0,34,0,42,0,50,0,49,90,0,0,0,0,0,0,0,0,0,0,};
int kinga2[20] = {41,0,42,0,50,0,58,0,57,90,0,0,0,0,0,0,0,0,0,0,};
int kinga1[20] = {49,0,50,0,58,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};

int niteh8[20] = {23,0,14,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};
int niteh7[20] = {31,0,22,0,6,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};
int niteh6[20] = {39,0,30,0,14,0,7,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int niteh5[20] = {47,0,38,0,22,0,15,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int niteh4[20] = {55,0,46,0,30,0,23,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int niteh3[20] = {63,0,54,0,38,0,31,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int niteh2[20] = {62,0,46,0,39,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};
int niteh1[20] = {54,0,47,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};

int niteg8[20] = {22,0,13,0,24,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};
int niteg7[20] = {30,0,21,0,5,0,32,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int niteg6[20] = {38,0,29,0,13,0,6,0,8,0,40,90,0,0,0,0,0,0,0,0,};
int niteg5[20] = {46,0,37,0,21,0,14,0,16,0,48,90,0,0,0,0,0,0,0,0,};
int niteg4[20] = {54,0,45,0,29,0,22,0,24,0,56,90,0,0,0,0,0,0,0,0,};
int niteg3[20] = {62,0,53,0,37,0,30,0,32,90,0,0,0,0,0,0,0,0,0,0,};
int niteg2[20] = {61,0,45,0,38,0,40,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int niteg1[20] = {53,0,46,0,48,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};

int nitef8[20] = {21,0,12,0,16,0,23,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int nitef7[20] = {29,0,20,0,4,0,8,0,24,0,31,90,0,0,0,0,0,0,0,0,};
int nitef6[20] = {37,0,28,0,12,0,5,0,7,0,16,0,32,0,39,90,0,0,0,0,};
int nitef5[20] = {45,0,36,0,20,0,13,0,15,0,24,0,40,0,47,90,0,0,0,0,};
int nitef4[20] = {53,0,44,0,28,0,21,0,23,0,32,0,48,0,55,90,0,0,0,0,};
int nitef3[20] = {61,0,52,0,36,0,29,0,31,0,40,0,56,0,63,90,0,0,0,0,};
int nitef2[20] = {60,0,44,0,37,0,39,0,48,0,64,90,0,0,0,0,0,0,0,0,};
int nitef1[20] = {52,0,45,0,47,0,56,90,0,0,0,0,0,0,0,0,0,0,0,0,};

int nitee8[20] = {15,0,22,0,20,0,11,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int nitee7[20] = {3,0,7,0,23,0,30,0,28,0,19,90,0,0,0,0,0,0,0,0,};
int nitee6[20] = {36,0,27,0,11,0,4,0,6,0,15,0,31,0,38,90,0,0,0,0,};
int nitee5[20] = {44,0,35,0,19,0,12,0,14,0,23,0,39,0,46,90,0,0,0,0,};
int nitee4[20] = {52,0,43,0,27,0,20,0,22,0,31,0,47,0,54,90,0,0,0,0,};
int nitee3[20] = {60,0,51,0,35,0,28,0,30,0,39,0,55,0,62,90,0,0,0,0,};
int nitee2[20] = {59,0,43,0,36,0,38,0,47,0,63,90,0,0,0,0,0,0,0,0,};
int nitee1[20] = {51,0,44,0,46,0,55,90,0,0,0,0,0,0,0,0,0,0,0,0,};

int nited8[20] = {14,0,21,0,19,0,10,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int nited7[20] = {27,0,18,0,2,0,6,0,22,0,29,90,0,0,0,0,0,0,0,0,};
int nited6[20] = {35,0,26,0,10,0,3,0,5,0,14,0,30,0,37,90,0,0,0,0,};
int nited5[20] = {43,0,34,0,18,0,11,0,13,0,22,0,38,0,45,90,0,0,0,0,};
int nited4[20] = {51,0,42,0,26,0,19,0,21,0,30,0,46,0,53,90,0,0,0,0,};
int nited3[20] = {59,0,50,0,34,0,27,0,29,0,38,0,54,0,61,90,0,0,0,0,};
int nited2[20] = {58,0,42,0,35,0,37,0,46,0,62,90,0,0,0,0,0,0,0,0,};
int nited1[20] = {50,0,43,0,45,0,54,90,0,0,0,0,0,0,0,0,0,0,0,0,};

int nitec8[20] = {13,0,20,0,18,0,9,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int nitec7[20] = {1,0,5,0,21,0,28,0,26,0,17,90,0,0,0,0,0,0,0,0,};
int nitec6[20] = {9,0,2,0,4,0,13,0,29,0,36,0,34,0,25,90,0,0,0,0,};
int nitec5[20] = {17,0,10,0,12,0,21,0,37,0,44,0,42,0,33,90,0,0,0,0,};
int nitec4[20] = {25,0,18,0,20,0,29,0,45,0,52,0,50,0,41,90,0,0,0,0,};
int nitec3[20] = {33,0,26,0,28,0,37,0,53,0,60,0,58,0,49,90,0,0,0,0,};
int nitec2[20] = {41,0,34,0,36,0,45,0,61,0,57,90,0,0,0,0,0,0,0,0,};
int nitec1[20] = {49,0,42,0,44,0,53,90,0,0,0,0,0,0,0,0,0,0,0,0,};

int niteb8[20] = {12,0,19,0,17,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};
int niteb7[20] = {4,0,20,0,27,0,25,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int niteb6[20] = {1,0,3,0,12,0,28,0,35,0,33,90,0,0,0,0,0,0,0,0,};
int niteb5[20] = {9,0,11,0,20,0,36,0,43,0,41,90,0,0,0,0,0,0,0,0,};
int niteb4[20] = {17,0,19,0,28,0,44,0,51,0,49,90,0,0,0,0,0,0,0,0,};
int niteb3[20] = {25,0,27,0,36,0,52,0,59,90,0,0,0,0,0,0,0,0,0,0,};
int niteb2[20] = {33,0,35,0,44,0,60,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int niteb1[20] = {41,0,43,0,52,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};

int nitea8[20] = {11,0,18,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};
int nitea7[20] = {3,0,19,0,26,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};
int nitea6[20] = {2,0,11,0,27,0,34,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int nitea5[20] = {10,0,19,0,35,0,42,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int nitea4[20] = {18,0,27,0,43,0,50,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int nitea3[20] = {26,0,35,0,51,0,58,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int nitea2[20] = {34,0,43,0,59,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};
int nitea1[20] = {42,0,51,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};

int bishh8[20] = {15,22,29,36,43,50,57,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int bishh7[20] = {7,0,23,30,37,44,51,58,90,0,0,0,0,0,0,0,0,0,0,0,};
int bishh6[20] = {15,6,0,31,38,45,52,59,90,0,0,0,0,0,0,0,0,0,0,0,};
int bishh5[20] = {23,14,5,0,39,46,53,60,90,0,0,0,0,0,0,0,0,0,0,0,};
int bishh4[20] = {31,22,13,4,0,47,54,61,90,0,0,0,0,0,0,0,0,0,0,0,};
int bishh3[20] = {39,30,21,12,3,0,55,62,90,0,0,0,0,0,0,0,0,0,0,0,};
int bishh2[20] = {47,38,29,20,11,2,0,63,90,0,0,0,0,0,0,0,0,0,0,0,};
int bishh1[20] = {55,46,37,28,19,10,1,90,0,0,0,0,0,0,0,0,0,0,0,0,};

int bishg8[20] = {16,0,14,21,28,35,42,49,90,0,0,0,0,0,0,0,0,0,0,0,};
int bishg7[20] = {6,0,8,0,24,0,22,29,36,43,50,57,90,0,0,0,0,0,0,0,};
int bishg6[20] = {14,5,0,16,0,32,0,30,37,44,51,58,90,0,0,0,0,0,0,0,};
int bishg5[20] = {22,13,4,0,24,0,40,0,38,45,52,59,90,0,0,0,0,0,0,0,};
int bishg4[20] = {30,21,12,3,0,32,0,48,0,46,53,60,90,0,0,0,0,0,0,0,};
int bishg3[20] = {38,29,20,11,2,0,40,0,56,0,54,61,90,0,0,0,0,0,0,0,};
int bishg2[20] = {46,37,28,19,10,1,0,48,0,64,0,62,90,0,0,0,0,0,0,0,};
int bishg1[20] = {54,45,36,27,18,9,0,56,90,0,0,0,0,0,0,0,0,0,0,0,};

int bishf8[20] = {15,24,0,13,20,27,34,41,90,0,0,0,0,0,0,0,0,0,0,0,};
int bishf7[20] = {5,0,7,0,23,32,0,21,28,35,42,49,90,0,0,0,0,0,0,0,};
int bishf6[20] = {13,4,0,15,8,0,31,40,0,29,36,43,50,57,90,0,0,0,0,0,};
int bishf5[20] = {21,12,3,0,23,16,0,39,48,0,37,44,51,58,90,0,0,0,0,0,};
int bishf4[20] = {29,20,11,2,0,31,24,0,47,56,0,45,52,59,90,0,0,0,0,0,};
int bishf3[20] = {37,28,19,10,1,0,39,32,0,55,64,0,53,60,90,0,0,0,0,0,};
int bishf2[20] = {45,36,27,18,9,0,47,40,0,63,0,61,90,0,0,0,0,0,0,0,};
int bishf1[20] = {53,44,35,26,17,0,55,48,90,0,0,0,0,0,0,0,0,0,0,0,};

int bishe8[20] = {14,23,32,0,12,19,26,33,90,0,0,0,0,0,0,0,0,0,0,0,};
int bishe7[20] = {4,0,6,0,22,31,40,0,20,27,34,41,90,0,0,0,0,0,0,0,};
int bishe6[20] = {12,3,0,14,7,0,30,39,48,0,28,35,42,49,90,0,0,0,0,};
int bishe5[20] = {20,11,2,0,22,15,8,0,38,47,56,0,36,43,50,57,90,0,0,0,};
int bishe4[20] = {28,19,10,1,0,30,23,16,0,46,55,64,0,44,51,58,90,0,0,0,};
int bishe3[20] = {36,27,18,9,0,38,31,24,0,54,63,0,52,59,90,0,0,0,0,0,};
int bishe2[20] = {44,35,26,17,0,46,39,32,0,62,0,60,90,0,0,0,0,0,0,0,};
int bishe1[20] = {52,43,34,25,0,54,47,40,90,0,0,0,0,0,0,0,0,0,0,0,};

int bishd8[20] = {13,22,31,40,0,11,18,25,90,0,0,0,0,0,0,0,0,0,0,0,};
int bishd7[20] = {3,0,5,0,21,30,39,48,0,19,26,33,90,0,0,0,0,0,0,0,};
int bishd6[20] = {11,2,0,13,6,0,29,38,47,56,0,27,34,41,90,0,0,0,0,0,};
int bishd5[20] = {19,10,1,0,21,14,7,0,37,46,55,64,0,35,42,49,90,0,0,0,};
int bishd4[20] = {27,18,9,0,29,22,15,8,0,45,54,63,0,43,50,57,90,0,0,0,};
int bishd3[20] = {35,26,17,0,37,30,23,16,0,53,62,0,51,58,90,0,0,0,0,0,};
int bishd2[20] = {43,34,25,0,45,38,31,24,0,61,0,59,90,0,0,0,0,0,0,0,};
int bishd1[20] = {51,42,33,0,53,46,39,32,90,0,0,0,0,0,0,0,0,0,0,0,};

int bishc8[20] = {12,21,30,39,48,0,10,17,90,0,0,0,0,0,0,0,0,0,0,0,};
int bishc7[20] = {2,0,4,0,20,29,38,47,56,0,18,25,90,0,0,0,0,0,0,0,};
int bishc6[20] = {10,1,0,12,5,0,28,37,46,55,64,0,26,33,90,0,0,0,0,0,};
int bishc5[20] = {18,9,0,20,13,6,0,36,45,54,63,0,34,41,90,0,0,0,0,0,};
int bishc4[20] = {26,17,0,28,21,14,7,0,44,53,62,0,42,49,90,0,0,0,0,0,};
int bishc3[20] = {34,25,0,36,29,22,15,8,0,52,61,0,50,57,90,0,0,0,0,0,};
int bishc2[20] = {42,33,0,44,37,30,23,16,0,60,0,58,90,0,0,0,0,0,0,0,};
int bishc1[20] = {50,41,0,52,45,38,31,24,90,0,0,0,0,0,0,0,0,0,0,0,};

int bishb8[20] = {11,20,29,38,47,56,0,9,90,0,0,0,0,0,0,0,0,0,0,0,};
int bishb7[20] = {1,0,3,0,19,28,37,46,55,64,0,17,90,0,0,0,0,0,0,0,};
int bishb6[20] = {9,0,11,4,0,27,36,45,54,63,0,25,90,0,0,0,0,0,0,0,};
int bishb5[20] = {17,0,19,12,5,0,35,44,53,62,0,33,90,0,0,0,0,0,0,0,};
int bishb4[20] = {25,0,27,20,13,6,0,43,52,61,0,41,90,0,0,0,0,0,0,0,};
int bishb3[20] = {33,0,35,28,21,14,7,0,51,60,0,49,90,0,0,0,0,0,0,0,};
int bishb2[20] = {41,0,43,36,29,22,15,8,0,59,0,57,90,0,0,0,0,0,0,0,};
int bishb1[20] = {49,0,51,44,37,30,23,16,90,0,0,0,0,0,0,0,0,0,0,0,};

int bisha8[20] = {10,19,28,37,46,55,64,90,0,0,0,0,0,0,0,0,0,0,0,0,};
int bisha7[20] = {2,0,18,27,36,45,54,63,90,0,0,0,0,0,0,0,0,0,0,0,};
int bisha6[20] = {10,3,0,26,35,44,53,62,90,0,0,0,0,0,0,0,0,0,0,0,};
int bisha5[20] = {18,11,4,0,34,43,52,61,90,0,0,0,0,0,0,0,0,0,0,0,};
int bisha4[20] = {26,19,12,5,0,42,51,60,90,0,0,0,0,0,0,0,0,0,0,0,};
int bisha3[20] = {34,27,20,13,6,0,50,59,90,0,0,0,0,0,0,0,0,0,0,0,};
int bisha2[20] = {42,35,28,21,14,7,0,58,90,0,0,0,0,0,0,0,0,0,0,0,};
int bisha1[20] = {50,43,36,29,22,15,8,90,0,0,0,0,0,0,0,0,0,0,0,0,};

int rookh8[20] = {7,6,5,4,3,2,1,0,16,24,32,40,48,56,64,90,0,0,0,0,};
int rookh7[20] = {15,14,13,12,11,10,9,0,8,0,24,32,40,48,56,64,90,0,0,0,};
int rookh6[20] = {23,22,21,20,19,18,17,0,16,8,0,32,40,48,56,64,90,0,0,0,};
int rookh5[20] = {31,30,29,28,27,26,25,0,24,16,8,0,40,48,56,64,90,0,0,0,};
int rookh4[20] = {39,38,37,36,35,34,33,0,32,24,16,8,0,48,56,64,90,0,0,0,};
int rookh3[20] = {47,46,45,44,43,42,41,0,40,32,24,16,8,0,56,64,90,0,0,0,};
int rookh2[20] = {55,54,53,52,51,50,49,0,48,40,32,24,16,8,0,64,90,0,0,0,};
int rookh1[20] = {63,62,61,60,59,58,57,0,56,48,40,32,24,16,8,90,0,0,0,0,};

int rookg8[20] = {6,5,4,3,2,1,0,8,0,15,23,31,39,47,55,63,90,0,0,0,};
int rookg7[20] = {14,13,12,11,10,9,0,7,0,16,0,23,31,39,47,55,63,90,0,0,};
int rookg6[20] = {22,21,20,19,18,17,0,15,7,0,24,0,31,39,47,55,63,90,0,0,};
int rookg5[20] = {30,29,28,27,26,25,0,23,15,7,0,32,0,39,47,55,63,90,0,0,};
int rookg4[20] = {38,37,36,35,34,33,0,31,23,15,7,0,40,0,47,55,63,90,0,0,};
int rookg3[20] = {46,45,44,43,42,41,0,39,31,23,15,7,0,48,0,55,63,90,0,0,};
int rookg2[20] = {54,53,52,51,50,49,0,47,39,31,23,15,7,0,56,0,63,90,0,0,};
int rookg1[20] = {62,61,60,59,58,57,0,55,47,39,31,23,15,7,0,64,90,0,0,0,};

int rookf8[20] = {5,4,3,2,1,0,7,8,0,14,22,30,38,46,54,62,90,0,0,0,};
int rookf7[20] = {13,12,11,10,9,0,6,0,15,16,0,22,30,38,46,54,62,90,0,0,};
int rookf6[20] = {21,20,19,18,17,0,14,6,0,23,24,0,30,38,46,54,62,90,0,};
int rookf5[20] = {29,28,27,26,25,0,22,14,6,0,31,32,0,38,46,54,62,90,0,0,};
int rookf4[20] = {37,36,35,34,33,0,30,22,14,6,0,39,40,0,46,54,62,90,0,0,};
int rookf3[20] = {45,44,43,42,41,0,38,30,22,14,6,0,47,48,0,54,62,90,0,0,};
int rookf2[20] = {53,52,51,50,49,0,46,38,30,22,14,6,0,55,56,0,62,90,0,0,};
int rookf1[20] = {61,60,59,58,57,0,54,46,38,30,22,14,6,0,63,64,90,0,0,0,};

int rooke8[20] = {4,3,2,1,0,6,7,8,0,13,21,29,37,45,53,61,90,0,0,0,};
int rooke7[20] = {12,11,10,9,0,5,0,14,15,16,0,21,29,37,45,53,61,90,0,0,};
int rooke6[20] = {20,19,18,17,0,13,5,0,22,23,24,0,29,37,45,53,61,90,0,0,};
int rooke5[20] = {28,27,26,25,0,21,13,5,0,30,31,32,0,37,45,53,61,90,0,0,};
int rooke4[20] = {36,35,34,33,0,29,21,13,5,0,38,39,40,0,45,53,61,90,0,0,};
int rooke3[20] = {44,43,42,41,0,37,29,21,13,5,0,46,47,48,0,53,61,90,0,0,};
int rooke2[20] = {52,51,50,49,0,45,37,29,21,13,5,0,54,55,56,0,61,90,0,0,};
int rooke1[20] = {60,59,58,57,0,53,45,37,29,21,13,5,0,62,63,64,90,0,0,0,};

int rookd8[20] = {3,2,1,0,5,6,7,8,0,12,20,28,36,44,52,60,90,0,0,0,};
int rookd7[20] = {11,10,9,0,4,0,13,14,15,16,0,20,28,36,44,52,60,90,0,0,};
int rookd6[20] = {19,18,17,0,12,4,0,21,22,23,24,0,28,36,44,52,60,90,0,0,};
int rookd5[20] = {27,26,25,0,20,12,4,0,29,30,31,32,0,36,44,52,60,90,0,0,};
int rookd4[20] = {35,34,33,0,28,20,12,4,0,37,38,39,40,0,44,52,60,90,0,0,};
int rookd3[20] = {43,42,41,0,36,28,20,12,4,0,45,46,47,48,0,52,60,90,0,0,};
int rookd2[20] = {51,50,49,0,44,36,28,20,12,4,0,53,54,55,56,0,60,90,0,0,};
int rookd1[20] = {59,58,57,0,52,44,36,28,20,12,4,0,61,62,63,64,90,0,0,0,};

int rookc8[20] = {2,1,0,4,5,6,7,8,0,11,19,27,35,43,51,59,90,0,0,0,};
int rookc7[20] = {10,9,0,3,0,12,13,14,15,16,0,19,27,35,43,51,59,90,0,0,};
int rookc6[20] = {18,17,0,11,3,0,20,21,22,23,24,0,27,35,43,51,59,90,0,0,};
int rookc5[20] = {26,25,0,19,11,3,0,28,29,30,31,32,0,35,43,51,59,90,0,0,};
int rookc4[20] = {34,33,0,27,19,11,3,0,36,37,38,39,40,0,43,51,59,90,0,0,};
int rookc3[20] = {42,41,0,35,27,19,11,3,0,44,45,46,47,48,0,51,59,90,0,0,};
int rookc2[20] = {50,49,0,43,35,27,19,11,3,0,52,53,54,55,56,0,59,90,0,0,};
int rookc1[20] = {58,57,0,51,43,35,27,19,11,3,0,60,61,62,63,64,90,0,0,0,};

int rookb8[20] = {1,0,3,4,5,6,7,8,0,10,18,26,34,42,50,58,90,0,0,0,};
int rookb7[20] = {9,0,2,0,11,12,13,14,15,16,0,18,26,34,42,50,58,90,0,0,};
int rookb6[20] = {17,0,10,2,0,19,20,21,22,23,24,0,26,34,42,50,58,90,0,0,};
int rookb5[20] = {25,0,18,10,2,0,27,28,29,30,31,32,0,34,42,50,58,90,0,0,};
int rookb4[20] = {33,0,26,18,10,2,0,35,36,37,38,39,40,0,42,50,58,90,0,0,};
int rookb3[20] = {41,0,34,26,18,10,2,0,43,44,45,46,47,48,0,50,58,90,0,0,};
int rookb2[20] = {49,0,42,34,26,18,10,2,0,51,52,53,54,55,56,0,58,90,0,0,};
int rookb1[20] = {57,0,50,42,34,26,18,10,2,0,59,60,61,62,63,64,90,0,0,0,};

int rooka8[20] = {9,17,25,33,41,49,57,0,2,3,4,5,6,7,8,90,0,0,0,0,};
int rooka7[20] = {1,0,17,25,33,41,49,57,0,10,11,12,13,14,15,16,90,0,0,0,};
int rooka6[20] = {9,1,0,25,33,41,49,57,0,18,19,20,21,22,23,24,90,0,0,0,};
int rooka5[20] = {17,9,1,0,33,41,49,57,0,26,27,28,29,30,31,32,90,0,0,0,};
int rooka4[20] = {25,17,9,1,0,41,49,57,0,34,35,36,37,38,39,40,90,0,0,0,};
int rooka3[20] = {33,25,17,9,1,0,49,57,0,42,43,44,45,46,47,48,90,0,0,0,};
int rooka2[20] = {41,33,25,17,9,1,0,57,0,50,51,52,53,54,55,56,90,0,0,0,};
int rooka1[20] = {49,41,33,25,17,9,1,0,58,59,60,61,62,63,64,90,0,0,0,0,};

int king[20] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};

//#include "ReNew116.cpp"

int donewboard(int value1, bord brd[1])
{
    for (int f =0;f<65;f++){
      brd[0].boardval[f] = newboard[f];
    }
    for (int f =0;f<4;f++){
    brd[0].castlerule[f] = castlerule[f];
    }
    for (int f =0;f<9;f++){
    brd[0].enpassrule[f] = enpassrule[f];
    }
    for (int f =0;f<250;f++){
    brd[0].movelist[f] = 0;
    }
    for (int f =0;f<65;f++){
    brd[0].attackpos[f] = 0;
    }
    for (int f =0;f<65;f++){
    brd[0].battackpos[f] = 0;
    }
}

int moveit(int from,int tooo,bord brd[1]){
{

               if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 100) {
                 if(tooo == 17) {
                  if(from == 26) {
                    brd[0].boardval[25] = 0;
                }}}}
                if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 100) {
                 if(tooo == 18) {
                  if((from == 25) || (from == 27)){
                    brd[0].boardval[26] = 0;
                }}}}
                if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 100) {
                 if(tooo == 19) {
                  if((from == 26) || (from == 28)){
                    brd[0].boardval[27] = 0;
                }}}}
                 if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 100) {
                 if(tooo == 20) {
                  if((from == 27) || (from == 29)){
                    brd[0].boardval[28] = 0;
                }}}}
                if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 100) {
                 if(tooo == 21) {
                  if((from == 28) || (from == 30)){
                    brd[0].boardval[29] = 0;
                }}}}
                if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 100) {
                 if(tooo == 22) {
                  if((from == 29) || (from == 31)){
                    brd[0].boardval[30] = 0;
                }}}}
                 if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 100) {
                 if(tooo == 23) {
                  if((from == 30) || (from == 32)){
                    brd[0].boardval[31] = 0;
                }}}}
                 if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 100) {
                 if(tooo == 24) {
                  if(from == 31){
                    brd[0].boardval[32] = 0;
                }}}}
                //black
                  if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 99) {
                 if(tooo == 41) {
                  if(from == 34){
                    brd[0].boardval[33] = 0;
                }}}}
                 if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 99) {
                 if(tooo == 42) {
                  if((from == 33) || (from == 35)){
                    brd[0].boardval[34] = 0;
                }}}}
                  if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 99) {
                 if(tooo == 43) {
                  if((from == 34) || (from == 36)){
                    brd[0].boardval[35] = 0;
                }}}}
                  if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 99) {
                 if(tooo == 44) {
                  if((from == 35) || (from == 37)){
                    brd[0].boardval[36] = 0;
                }}}}
                 if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 99) {
                 if(tooo == 45) {
                  if((from == 36) || (from == 38)){
                    brd[0].boardval[37] = 0;
                }}}}
                 if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 99) {
                 if(tooo == 46) {
                  if((from == 37) || (from == 39)){
                    brd[0].boardval[38] = 0;
                }}}}
                 if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 99) {
                 if(tooo == 47) {
                  if((from == 38) || (from == 40)){
                    brd[0].boardval[39] = 0;
                }}}}
                  if(brd[0].boardval[tooo] == 0) {
               if(brd[0].boardval[from] == 99) {
                 if(tooo == 48) {
                  if(from == 39){
                    brd[0].boardval[40] = 0;
                }}}}
                //castle
                if(tooo == 63) {
                  if(from == 61) {
                    if(brd[0].boardval[61] == 5000) {
                      brd[0].boardval[64] = 0;
                      brd[0].boardval[62] = 500;
                }}}
                 if(tooo == 59) {
                  if(from == 61) {
                    if(brd[0].boardval[61] == 5000) {
                      brd[0].boardval[57] = 0;
                      brd[0].boardval[60] = 500;
                }}}
                //black
                if(tooo == 7) {
                  if(from == 5) {
                    if(brd[0].boardval[5] == 4999) {
                      brd[0].boardval[8] = 0;
                      brd[0].boardval[6] = 499;
                }}}
                 if(tooo == 3) {
                  if(from == 5) {
                    if(brd[0].boardval[5] == 4999) {
                      brd[0].boardval[1] = 0;
                      brd[0].boardval[4] = 499;
                }}}

                if (from==a1) brd[0].castlerule[0] = 0;
                if (from==h1) brd[0].castlerule[1] = 0;
                if (from==e1) brd[0].castlerule[0] = 0;
                if (from==e1) brd[0].castlerule[1] = 0;

                if (from==a8) brd[0].castlerule[2] = 0;
                if (from==h8) brd[0].castlerule[3] = 0;
                if (from==e8) brd[0].castlerule[2] = 0;
                if (from==e8) brd[0].castlerule[3] = 0;

                if((tooo == a8) & (brd[0].boardval[from] == 100)) brd[0].boardval[from] = 950;
                if((tooo == b8) & (brd[0].boardval[from] == 100)) brd[0].boardval[from] = 950;
                if((tooo == c8) & (brd[0].boardval[from] == 100)) brd[0].boardval[from] = 950;
                if((tooo == d8) & (brd[0].boardval[from] == 100)) brd[0].boardval[from] = 950;
                if((tooo == e8) & (brd[0].boardval[from] == 100)) brd[0].boardval[from] = 950;
                if((tooo == f8) & (brd[0].boardval[from] == 100)) brd[0].boardval[from] = 950;
                if((tooo == g8) & (brd[0].boardval[from] == 100)) brd[0].boardval[from] = 950;
                if((tooo == h8) & (brd[0].boardval[from] == 100)) brd[0].boardval[from] = 950;

                if((tooo == a1) & (brd[0].boardval[from] == 99)) brd[0].boardval[from] = 949;
                if((tooo == b1) & (brd[0].boardval[from] == 99)) brd[0].boardval[from] = 949;
                if((tooo == c1) & (brd[0].boardval[from] == 99)) brd[0].boardval[from] = 949;
                if((tooo == d1) & (brd[0].boardval[from] == 99)) brd[0].boardval[from] = 949;
                if((tooo == e1) & (brd[0].boardval[from] == 99)) brd[0].boardval[from] = 949;
                if((tooo == f1) & (brd[0].boardval[from] == 99)) brd[0].boardval[from] = 949;
                if((tooo == g1) & (brd[0].boardval[from] == 99)) brd[0].boardval[from] = 949;
                if((tooo == h1) & (brd[0].boardval[from] == 99)) brd[0].boardval[from] = 949;

                int vr = 0;
                if((from==a2) & (tooo==a4) & (brd[0].boardval[from] == 100)) {
                  brd[0].enpassrule[8] = 0;
                  brd[0].enpassrule[0] = 1;
                  vr = 1;
                }
                 if((from==b2) & (tooo==b4) & (brd[0].boardval[from] == 100)) {
                  brd[0].enpassrule[8] = 0;
                  brd[0].enpassrule[1] = 1;
                  vr = 1;
                }
                 if((from==c2) & (tooo==c4) & (brd[0].boardval[from] == 100)) {
                  brd[0].enpassrule[8] = 0;
                  brd[0].enpassrule[2] = 1;
                  vr = 1;
                }
                 if((from==d2) & (tooo==d4) & (brd[0].boardval[from] == 100)) {
                  brd[0].enpassrule[8] = 0;
                  brd[0].enpassrule[3] = 1;
                  vr = 1;
                }
                 if((from==e2) & (tooo==e4) & (brd[0].boardval[from] == 100)) {
                  brd[0].enpassrule[8] = 0;
                  brd[0].enpassrule[4] = 1;
                  vr = 1;
                }
                 if((from==f2) & (tooo==f4) & (brd[0].boardval[from] == 100)) {
                  brd[0].enpassrule[8] = 0;
                  brd[0].enpassrule[5] = 1;
                  vr = 1;
                }
                 if((from==g2) & (tooo==g4) & (brd[0].boardval[from] == 100)) {
                  brd[0].enpassrule[8] = 0;
                  brd[0].enpassrule[6] = 1;
                  vr = 1;
                }
                 if((from==h2) & (tooo==h4) & (brd[0].boardval[from] == 100)) {
                  brd[0].enpassrule[8] = 0;
                  brd[0].enpassrule[7] = 1;
                  vr = 1;
                }

                if((from==a7) & (tooo==a5) & (brd[0].boardval[from] == 99)) {
                  brd[0].enpassrule[8] = 1;
                  brd[0].enpassrule[0] = 1;
                  vr = 1;
                }
                 if((from==b7) & (tooo==b5) & (brd[0].boardval[from] == 99)) {
                  brd[0].enpassrule[8] = 1;
                  brd[0].enpassrule[1] = 1;
                  vr = 1;
                }
                 if((from==c7) & (tooo==c5) & (brd[0].boardval[from] == 99)) {
                  brd[0].enpassrule[8] = 1;
                  brd[0].enpassrule[2] = 1;
                  vr = 1;
                }
                 if((from==d7) & (tooo==d5) & (brd[0].boardval[from] == 99)) {
                  brd[0].enpassrule[8] = 1;
                  brd[0].enpassrule[3] = 1;
                  vr = 1;
                }
                 if((from==e7) & (tooo==e5) & (brd[0].boardval[from] == 99)) {
                  brd[0].enpassrule[8] = 1;
                  brd[0].enpassrule[4] = 1;
                  vr = 1;
                }
                 if((from==f7) & (tooo==f5) & (brd[0].boardval[from] == 99)) {
                  brd[0].enpassrule[8] = 1;
                  brd[0].enpassrule[5] = 1;
                  vr = 1;
                }
                 if((from==g7) & (tooo==g5) & (brd[0].boardval[from] == 99)) {
                  brd[0].enpassrule[8] = 1;
                  brd[0].enpassrule[6] = 1;
                  vr = 1;
                }
                 if((from==h7) & (tooo==h5) & (brd[0].boardval[from] == 99)) {
                  brd[0].enpassrule[8] = 1;
                  brd[0].enpassrule[7] = 1;
                  vr = 1;
                }

               if(vr == 0) {
                 brd[0].enpassrule[0] = 0;
                 brd[0].enpassrule[1] = 0;
                 brd[0].enpassrule[2] = 0;
                 brd[0].enpassrule[3] = 0;
                 brd[0].enpassrule[4] = 0;
                 brd[0].enpassrule[5] = 0;
                 brd[0].enpassrule[6] = 0;
                 brd[0].enpassrule[7] = 0;
                 brd[0].enpassrule[8] = 0;
               }
               brd[0].boardval[tooo] = brd[0].boardval[from];
               brd[0].boardval[from] = 0;
               // do enpassant and castle
               }
}




int push(bord brd[1],bord tmp[1]){
/*struct bord {
  int boardval[65];
  int castlerule[4];
  int enpassrule[9];
  int movelist[250];
  int attackpos[65];
  int battackpos[65];
};
*/
for(int v=0;v<65;v++){
  tmp[0].boardval[v] = brd[0].boardval[v];
}
for(int v=0;v<4;v++){
  tmp[0].castlerule[v] = brd[0].castlerule[v];
}
for(int v=0;v<9;v++){
  tmp[0].enpassrule[v] = brd[0].enpassrule[v];
}
for(int v=0;v<250;v++){
  tmp[0].movelist[v] = brd[0].movelist[v];
}
for(int v=0;v<65;v++){
  tmp[0].attackpos[v] = brd[0].attackpos[v];
}
for(int v=0;v<65;v++){
  tmp[0].battackpos[v] = brd[0].battackpos[v];
}




}
int push2(bord brd[1],bord tmp[1]){
/*struct bord {
  int boardval[65];
  int castlerule[4];
  int enpassrule[9];
  int movelist[250];
  int attackpos[65];
  int battackpos[65];
};
*/
for(int v=0;v<65;v++){
  tmp[0].boardval[v] = brd[0].boardval[v];
}
for(int v=0;v<4;v++){
  tmp[0].castlerule[v] = brd[0].castlerule[v];
}
for(int v=0;v<9;v++){
  tmp[0].enpassrule[v] = brd[0].enpassrule[v];
}
for(int v=0;v<250;v++){
  tmp[0].movelist[v] = brd[0].movelist[v];
}
for(int v=0;v<65;v++){
  tmp[0].attackpos[v] = brd[0].attackpos[v];
}
for(int v=0;v<65;v++){
  tmp[0].battackpos[v] = brd[0].battackpos[v];
}

}
int tooldisptxtboard(int value1, bord brd[1])
{
       char boardchars[66];
       int oot = 1;
       //char piece[3] = {" oX"};
       char piece[] = {"rnbqkpRNBQKP "};
       //int bdc = 0;
       for (int f =1;f<66;f++) boardchars[f-1] = piece[12];
       boardchars[66] = NULL;
       //boardchars[square] = piece[2];
        for(int f = 1;f<66;f++){

                   if(brd[0].boardval[f] == 499) boardchars[f-1] = piece[0];

                   if(brd[0].boardval[f] == 299) boardchars[f-1] = piece[1];

                   if(brd[0].boardval[f] == 324) boardchars[f-1] = piece[2];

                   if(brd[0].boardval[f] == 949) boardchars[f-1] = piece[3];

                   if(brd[0].boardval[f] == 4999) boardchars[f-1] = piece[4];

                   if(brd[0].boardval[f] == 99) boardchars[f-1] = piece[5];

                   if(brd[0].boardval[f] == 500) boardchars[f-1] = piece[6];

                   if(brd[0].boardval[f] == 300) boardchars[f-1] = piece[7];

                   if(brd[0].boardval[f] == 325) boardchars[f-1] = piece[8];

                   if(brd[0].boardval[f] == 950) boardchars[f-1] = piece[9];

                   if(brd[0].boardval[f] == 5000) boardchars[f-1] = piece[10];

                   if(brd[0].boardval[f] == 100) boardchars[f-1] = piece[11];


        }



        printf("   --   View For White   --          --   View For Black   ---\n");
              printf("   ========================          =========================\n");
              printf("8 ");
              for (int i =0;i<8;i++){
              	
			  if (brd[0].boardval[i] == 99)  printf("|%c:",boardchars[i]);
			  
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
		       
		       
			  printf("|        1 ");
              for (int i =63;i> 55;i--){
              
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
              printf("|\n");
              printf("   ===---===---===---===---          ---===---===---===---===\n");
              printf("7 ");
              for (int i =8;i<16;i++){
			  
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
              printf("|        2 ");
              for (int i =55;i> 47;i--){
			  
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
              printf("|\n");
              printf("   ---===---===---===---===          ===---===---===---===---\n");
              printf("6 ");
              for (int i =16;i<24;i++){
			  
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
              printf("|        3 ");
              for (int i =47;i> 39;i--){
			  
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
              printf("|\n");
              printf("   ===---===---===---===---          ---===---===---===---===\n");             
			   printf("5 ");
              for (int i =24;i<32;i++){
			  
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
              printf("|        4 ");
              for (int i =39;i> 31;i--){
			  
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
              printf("|\n");
              printf("   ---===---===---===---===          ===---===---===---===---\n");
              printf("4 ");
              for (int i =32;i<40;i++){
			  
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
              printf("|        5 ");
              for (int i =31;i> 23;i--){
			  
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
              printf("|\n");
              printf("   ===---===---===---===---          ---===---===---===---===\n");              
			  //printf("5 ");
              printf("3 ");
              for (int i =40;i<48;i++){
			  
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
              printf("|        6 ");
              for (int i =23;i> 15;i--){
			  
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
              printf("|\n");
              printf("   ---===---===---===---===          ===---===---===---===---\n");
              printf("2 ");
              for (int i =48;i<56;i++){
			  
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
              printf("|        7 ");
              for (int i =15;i> 7;i--) {
			  
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
              printf("|\n");
              printf("   ===---===---===---===---          ---===---===---===---===\n");             // printf("5 ");
              printf("1 ");
              for (int i =56;i<64;i++){
			  
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
              printf("|        8 ");
              for (int i =7;i> -1;i--){
			  
              if ((brd[0].boardval[i+1] == 324)|(brd[0].boardval[i+1] == 949) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 299)|(brd[0].boardval[i+1] == 4999) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 99)|(brd[0].boardval[i+1] == 499) ) printf("|%c:",boardchars[i]);
              if ((brd[0].boardval[i+1] == 325)|(brd[0].boardval[i+1] == 950) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 300)|(brd[0].boardval[i+1] == 5000) ) printf("|%c ",boardchars[i]);
              if ((brd[0].boardval[i+1] == 100)|(brd[0].boardval[i+1] == 500) ) printf("|%c ",boardchars[i]);
		      if (brd[0].boardval[i+1] == 0)printf("|%c ",boardchars[i]);
			   }
              printf("|\n");
              printf("  =========================          =========================\n");
              printf("    A  B  C  D  E  F  G  H             H  G  F  E  D  C  B  A  ");

              printf("\n\n\n\n");

}//end

int tool2board(int tool1[40],int square)
{
	int oot = 0;
       char boardchars[66];
       char piece[] = {"012345678  oX"};
       int bdc = 0,bc=0;
       for (int i =0;i<64;i++) boardchars[i] = piece[9];
       boardchars[66] = NULL;
       //boardchars[square] = piece[12];
        for(int t = 0;t<40;t++){
          if (tool1[t] == 0) bc = 0;
          if (tool1[t] > 0) bdc = tool1[t];
          if (tool1[t] > 0) bc = bc + 1;
          if (bc > 8) bc = 0;
          if (tool1[t] > 0) boardchars[bdc-1] = piece[bc];

        }


        printf("   --   View For White   --          --   View For Black   ---\n");
              printf("   ========================          =========================\n");
              printf("8 ");
              for (int i =0;i<8;i++){
			  if (oot == 1) printf("|%c.",boardchars[i]);
              if (oot == 0) printf("|%c ",boardchars[i]); 
			  oot = oot + 1;
			  if (oot >= 1) oot = 0;}
              printf("|        1 ");
              for (int i =63;i> 55;i--){
              if (oot == 1)printf("|%c.",boardchars[i]);
              if (oot == 0)printf("|%c ",boardchars[i]);
              oot = oot + 1;
              if (oot >= 1) oot = 0;}
              printf("|\n");
              printf("   ------------------------          -------------------------\n");
              printf("7 ");
              for (int i =8;i<16;i++)
              printf("|%c ",boardchars[i]);
              printf("|        2 ");
              for (int i =55;i> 47;i--)
              printf("|%c ",boardchars[i]);
              printf("|\n");
              printf("   ------------------------          -------------------------\n");
              printf("6 ");
              for (int i =16;i<24;i++)
              printf("|%c ",boardchars[i]);
              printf("|        3 ");
              for (int i =47;i> 39;i--)
              printf("|%c ",boardchars[i]);
              printf("|\n");
              printf("   ------------------------          -------------------------\n");
              printf("5 ");
              for (int i =24;i<32;i++)
              printf("|%c ",boardchars[i]);
              printf("|        4 ");
              for (int i =39;i> 31;i--)
              printf("|%c ",boardchars[i]);
              printf("|\n");
              printf("   ------------------------          -------------------------\n");
              printf("4 ");
              for (int i =32;i<40;i++)
              printf("|%c ",boardchars[i]);
              printf("|        5 ");
              for (int i =31;i> 23;i--)
              printf("|%c ",boardchars[i]);
              printf("|\n");
              printf("   ------------------------          -------------------------\n");
              printf("3 ");
              for (int i =40;i<48;i++)
              printf("|%c ",boardchars[i]);
              printf("|        6 ");
              for (int i =23;i> 15;i--)
              printf("|%c ",boardchars[i]);
              printf("|\n");
              printf("   ------------------------          -------------------------\n");
              printf("2 ");
              for (int i =48;i<56;i++)
              printf("|%c ",boardchars[i]);
              printf("|        7 ");
              for (int i =15;i> 7;i--)
              printf("|%c ",boardchars[i]);
              printf("|\n");
              printf("   ------------------------          -------------------------\n");
              printf("1 ");
              for (int i =56;i<64;i++)
              printf("|%c ",boardchars[i]);
              printf("|        8 ");
              for (int i =7;i> -1;i--)
              printf("|%c ",boardchars[i]);
              printf("|\n");
              printf("  =========================          =========================\n");
              printf("    A  B  C  D  E  F  G  H             H  G  F  E  D  C  B  A  ");

}//end



int wmovegen(int value1,bord brd[1])
{

    //for (int f =0;f<500;f++){
    //brd[0].movelist[f] = 0;
    //}
    brd[0].movelist[0] = 0;
    brd[0].movelist[1] = 0;
    brd[0].movelist[2] = 0;
    for (int f =0;f<65;f++){
    brd[0].attackpos[f] = 0;
    }
    for (int f =0;f<65;f++){
    brd[0].battackpos[f] = 0;
    }
/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

//pawns//


//////////////////////
int ct = 0;
// enpassant
if(brd[0].enpassrule[8] == 0){
if((brd[0].boardval[31] == 100) & (brd[0].enpassrule[7] == 1)){
    brd[0].movelist[ct] = 31;
    brd[0].movelist[ct+1] = 24;
    ct = ct + 2;
 }
if((brd[0].boardval[32] == 100) & (brd[0].enpassrule[6] == 1)){
    brd[0].movelist[ct] = 32;
    brd[0].movelist[ct+1] = 23;
    ct = ct + 2;
 }
if((brd[0].boardval[30] == 100) & (brd[0].enpassrule[6] == 1)){
    brd[0].movelist[ct] = 30;
    brd[0].movelist[ct+1] = 23;
    ct = ct + 2;
 }
if((brd[0].boardval[31] == 100) & (brd[0].enpassrule[5] == 1)){
    brd[0].movelist[ct] = 31;
    brd[0].movelist[ct+1] = 22;
    ct = ct + 2;
 }
if((brd[0].boardval[29] == 100) & (brd[0].enpassrule[5] == 1)){
    brd[0].movelist[ct] = 29;
    brd[0].movelist[ct+1] = 22;
    ct = ct + 2;
 }
if((brd[0].boardval[30] == 100) & (brd[0].enpassrule[4] == 1)){
    brd[0].movelist[ct] = 30;
    brd[0].movelist[ct+1] = 21;
    ct = ct + 2;
 }
if((brd[0].boardval[28] == 100) & (brd[0].enpassrule[4] == 1)){
    brd[0].movelist[ct] = 28;
    brd[0].movelist[ct+1] = 21;
    ct = ct + 2;
 }
if((brd[0].boardval[29] == 100) & (brd[0].enpassrule[3] == 1)){
    brd[0].movelist[ct] = 29;
    brd[0].movelist[ct+1] = 20;
    ct = ct + 2;
 }
if((brd[0].boardval[27] == 100) & (brd[0].enpassrule[3] == 1)){
    brd[0].movelist[ct] = 27;
    brd[0].movelist[ct+1] = 20;
    ct = ct + 2;
 }
if((brd[0].boardval[28] == 100) & (brd[0].enpassrule[2] == 1)){
    brd[0].movelist[ct] = 28;
    brd[0].movelist[ct+1] = 19;
    ct = ct + 2;
 }
if((brd[0].boardval[26] == 100) & (brd[0].enpassrule[2] == 1)){
    brd[0].movelist[ct] = 26;
    brd[0].movelist[ct+1] = 19;
    ct = ct + 2;
 }
if((brd[0].boardval[27] == 100) & (brd[0].enpassrule[1] == 1)){
    brd[0].movelist[ct] = 27;
    brd[0].movelist[ct+1] = 18;
    ct = ct + 2;
 }
if((brd[0].boardval[25] == 100) & (brd[0].enpassrule[1] == 1)){
    brd[0].movelist[ct] = 25;
    brd[0].movelist[ct+1] = 18;
    ct = ct + 2;
 }
if((brd[0].boardval[26] == 100) & (brd[0].enpassrule[0] == 1)){
    brd[0].movelist[ct] = 26;
    brd[0].movelist[ct+1] = 17;
    ct = ct + 2;
 }
}

//h2-h8
if(brd[0].boardval[16] == 100){
brd[0].attackpos[7] = 1;
 if(brd[0].boardval[8] == 0) {
    brd[0].movelist[ct] = 16;
    brd[0].movelist[ct+1] = 8;
    ct = ct + 2;
 }
 if((brd[0].boardval[7] == 99) ||
    (brd[0].boardval[7] == 499) || (brd[0].boardval[7] == 324) ||
    (brd[0].boardval[7] == 299) || (brd[0].boardval[7] == 949) ||
    (brd[0].boardval[7] == 4999)){
     brd[0].movelist[ct] = 16;
     brd[0].movelist[ct+1] = 7;
     ct = ct + 2;
    }
}

if(brd[0].boardval[24] == 100){
brd[0].attackpos[15] = 1;
 if(brd[0].boardval[16] == 0) {
    brd[0].movelist[ct] = 24;
    brd[0].movelist[ct+1] = 16;
    ct = ct + 2;
 }
 if((brd[0].boardval[15] == 99) ||
    (brd[0].boardval[15] == 499) || (brd[0].boardval[15] == 324) ||
    (brd[0].boardval[15] == 299) || (brd[0].boardval[15] == 949) ||
    (brd[0].boardval[15] == 4999)){
     brd[0].movelist[ct] = 24;
     brd[0].movelist[ct+1] = 15;
     ct = ct + 2;
    }
}

if(brd[0].boardval[32] == 100){
brd[0].attackpos[23] = 1;
 if(brd[0].boardval[24] == 0) {
    brd[0].movelist[ct] = 32;
    brd[0].movelist[ct+1] = 24;
    ct = ct + 2;
 }
 if((brd[0].boardval[23] == 99) ||
    (brd[0].boardval[23] == 499) || (brd[0].boardval[23] == 324) ||
    (brd[0].boardval[23] == 299) || (brd[0].boardval[23] == 949) ||
    (brd[0].boardval[23] == 4999)){
     brd[0].movelist[ct] = 32;
     brd[0].movelist[ct+1] = 23;
     ct = ct + 2;
    }
}

if(brd[0].boardval[40] == 100){
brd[0].attackpos[31] = 1;
 if(brd[0].boardval[32] == 0) {
    brd[0].movelist[ct] = 40;
    brd[0].movelist[ct+1] = 32;
    ct = ct + 2;
 }
 if((brd[0].boardval[31] == 99) ||
    (brd[0].boardval[31] == 499) || (brd[0].boardval[31] == 324) ||
    (brd[0].boardval[31] == 299) || (brd[0].boardval[31] == 949) ||
    (brd[0].boardval[31] == 4999)){
     brd[0].movelist[ct] = 40;
     brd[0].movelist[ct+1] = 31;
     ct = ct + 2;
    }
}

if(brd[0].boardval[48] == 100){
brd[0].attackpos[39] = 1;
 if(brd[0].boardval[40] == 0) {
    brd[0].movelist[ct] = 48;
    brd[0].movelist[ct+1] = 40;
    ct = ct + 2;
 }
 if((brd[0].boardval[39] == 99) ||
    (brd[0].boardval[39] == 499) || (brd[0].boardval[39] == 324) ||
    (brd[0].boardval[39] == 299) || (brd[0].boardval[39] == 949) ||
    (brd[0].boardval[39] == 4999)){
     brd[0].movelist[ct] = 48;
     brd[0].movelist[ct+1] = 39;
     ct = ct + 2;
    }
}


if(brd[0].boardval[56] == 100){
brd[0].attackpos[47] = 1;
 if(brd[0].boardval[48] == 0) {
    brd[0].movelist[ct] = 56;
    brd[0].movelist[ct+1] = 48;
    ct = ct + 2;
    if(brd[0].boardval[40] == 0) {
    brd[0].movelist[ct] = 56;
    brd[0].movelist[ct+1] = 40;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[47] == 99) ||
    (brd[0].boardval[47] == 499) || (brd[0].boardval[47] == 324) ||
    (brd[0].boardval[47] == 299) || (brd[0].boardval[47] == 949) ||
    (brd[0].boardval[47] == 4999)){
     brd[0].movelist[ct] = 56;
     brd[0].movelist[ct+1] = 47;
     ct = ct + 2;
    }
}

//g2-g8
if(brd[0].boardval[15] == 100){
brd[0].attackpos[8] = 1;
brd[0].attackpos[6] = 1;
 if(brd[0].boardval[7] == 0) {
    brd[0].movelist[ct] = 15;
    brd[0].movelist[ct+1] = 7;
    ct = ct + 2;
 }
 if((brd[0].boardval[6] == 99) ||
    (brd[0].boardval[6] == 499) || (brd[0].boardval[6] == 324) ||
    (brd[0].boardval[6] == 299) || (brd[0].boardval[6] == 949) ||
    (brd[0].boardval[6] == 4999)){
     brd[0].movelist[ct] = 15;
     brd[0].movelist[ct+1] = 6;
     ct = ct + 2;
    }
  if((brd[0].boardval[8] == 99) ||
    (brd[0].boardval[8] == 499) || (brd[0].boardval[8] == 324) ||
    (brd[0].boardval[8] == 299) || (brd[0].boardval[8] == 949) ||
    (brd[0].boardval[8] == 4999)){
     brd[0].movelist[ct] = 15;
     brd[0].movelist[ct+1] = 8;
     ct = ct + 2;
    }
}


if(brd[0].boardval[23] == 100){
brd[0].attackpos[16] = 1;
brd[0].attackpos[14] = 1;
 if(brd[0].boardval[15] == 0) {
    brd[0].movelist[ct] = 23;
    brd[0].movelist[ct+1] = 15;
    ct = ct + 2;
 }
 if((brd[0].boardval[16] == 99) ||
    (brd[0].boardval[16] == 499) || (brd[0].boardval[16] == 324) ||
    (brd[0].boardval[16] == 299) || (brd[0].boardval[16] == 949) ||
    (brd[0].boardval[16] == 4999)){
     brd[0].movelist[ct] = 23;
     brd[0].movelist[ct+1] = 16;
     ct = ct + 2;
    }
  if((brd[0].boardval[14] == 99) ||
    (brd[0].boardval[14] == 499) || (brd[0].boardval[14] == 324) ||
    (brd[0].boardval[14] == 299) || (brd[0].boardval[14] == 949) ||
    (brd[0].boardval[14] == 4999)){
     brd[0].movelist[ct] = 23;
     brd[0].movelist[ct+1] = 14;
     ct = ct + 2;
    }
}


if(brd[0].boardval[31] == 100){
brd[0].attackpos[24] = 1;
brd[0].attackpos[22] = 1;
 if(brd[0].boardval[23] == 0) {
    brd[0].movelist[ct] = 31;
    brd[0].movelist[ct+1] = 23;
    ct = ct + 2;
 }
 if((brd[0].boardval[24] == 99) ||
    (brd[0].boardval[24] == 499) || (brd[0].boardval[24] == 324) ||
    (brd[0].boardval[24] == 299) || (brd[0].boardval[24] == 949) ||
    (brd[0].boardval[24] == 4999)){
     brd[0].movelist[ct] = 31;
     brd[0].movelist[ct+1] = 24;
     ct = ct + 2;
    }
  if((brd[0].boardval[22] == 99) ||
    (brd[0].boardval[22] == 499) || (brd[0].boardval[22] == 324) ||
    (brd[0].boardval[22] == 299) || (brd[0].boardval[22] == 949) ||
    (brd[0].boardval[22] == 4999)){
     brd[0].movelist[ct] = 31;
     brd[0].movelist[ct+1] = 22;
     ct = ct + 2;
    }
}


if(brd[0].boardval[39] == 100){
brd[0].attackpos[30] = 1;
brd[0].attackpos[32] = 1;
 if(brd[0].boardval[31] == 0) {
    brd[0].movelist[ct] = 39;
    brd[0].movelist[ct+1] = 31;
    ct = ct + 2;
 }
 if((brd[0].boardval[32] == 99) ||
    (brd[0].boardval[32] == 499) || (brd[0].boardval[32] == 324) ||
    (brd[0].boardval[32] == 299) || (brd[0].boardval[32] == 949) ||
    (brd[0].boardval[32] == 4999)){
     brd[0].movelist[ct] = 39;
     brd[0].movelist[ct+1] = 32;
     ct = ct + 2;
    }
  if((brd[0].boardval[30] == 99) ||
    (brd[0].boardval[30] == 499) || (brd[0].boardval[30] == 324) ||
    (brd[0].boardval[30] == 299) || (brd[0].boardval[30] == 949) ||
    (brd[0].boardval[30] == 4999)){
     brd[0].movelist[ct] = 39;
     brd[0].movelist[ct+1] = 30;
     ct = ct + 2;
    }
}


if(brd[0].boardval[47] == 100){
brd[0].attackpos[40] = 1;
brd[0].attackpos[38] = 1;
 if(brd[0].boardval[39] == 0) {
    brd[0].movelist[ct] = 47;
    brd[0].movelist[ct+1] = 39;
    ct = ct + 2;
 }
 if((brd[0].boardval[40] == 99) ||
    (brd[0].boardval[40] == 499) || (brd[0].boardval[40] == 324) ||
    (brd[0].boardval[40] == 299) || (brd[0].boardval[40] == 949) ||
    (brd[0].boardval[40] == 4999)){
     brd[0].movelist[ct] = 47;
     brd[0].movelist[ct+1] = 40;
     ct = ct + 2;
    }
  if((brd[0].boardval[38] == 99) ||
    (brd[0].boardval[38] == 499) || (brd[0].boardval[38] == 324) ||
    (brd[0].boardval[38] == 299) || (brd[0].boardval[38] == 949) ||
    (brd[0].boardval[38] == 4999)){
     brd[0].movelist[ct] = 47;
     brd[0].movelist[ct+1] = 38;
     ct = ct + 2;
    }
}


if(brd[0].boardval[55] == 100){
brd[0].attackpos[46] = 1;
brd[0].attackpos[48] = 1;
 if(brd[0].boardval[47] == 0) {
    brd[0].movelist[ct] = 55;
    brd[0].movelist[ct+1] = 47;
    ct = ct + 2;
    if(brd[0].boardval[39] == 0) {
    brd[0].movelist[ct] = 55;
    brd[0].movelist[ct+1] = 39;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[46] == 99) ||
    (brd[0].boardval[46] == 499) || (brd[0].boardval[46] == 324) ||
    (brd[0].boardval[46] == 299) || (brd[0].boardval[46] == 949) ||
    (brd[0].boardval[46] == 4999)){
     brd[0].movelist[ct] = 55;
     brd[0].movelist[ct+1] = 46;
     ct = ct + 2;
    }
  if((brd[0].boardval[48] == 99) ||
    (brd[0].boardval[48] == 499) || (brd[0].boardval[48] == 324) ||
    (brd[0].boardval[48] == 299) || (brd[0].boardval[48] == 949) ||
    (brd[0].boardval[48] == 4999)){
     brd[0].movelist[ct] = 55;
     brd[0].movelist[ct+1] = 48;
     ct = ct + 2;
    }
}

//f2-f4
if(brd[0].boardval[14] == 100){
brd[0].attackpos[5] = 1;
brd[0].attackpos[7] = 1;
 if(brd[0].boardval[6] == 0) {
    brd[0].movelist[ct] = 14;
    brd[0].movelist[ct+1] = 6;
    ct = ct + 2;
 }
 if((brd[0].boardval[7] == 99) ||
    (brd[0].boardval[7] == 499) || (brd[0].boardval[7] == 324) ||
    (brd[0].boardval[7] == 299) || (brd[0].boardval[7] == 949) ||
    (brd[0].boardval[7] == 4999)){
     brd[0].movelist[ct] = 14;
     brd[0].movelist[ct+1] = 7;
     ct = ct + 2;
    }
  if((brd[0].boardval[5] == 99) ||
    (brd[0].boardval[5] == 499) || (brd[0].boardval[5] == 324) ||
    (brd[0].boardval[5] == 299) || (brd[0].boardval[5] == 949) ||
    (brd[0].boardval[5] == 4999)){
     brd[0].movelist[ct] = 14;
     brd[0].movelist[ct+1] = 5;
     ct = ct + 2;
    }
}


if(brd[0].boardval[22] == 100){
brd[0].attackpos[13] = 1;
brd[0].attackpos[15] = 1;
 if(brd[0].boardval[14] == 0) {
    brd[0].movelist[ct] = 22;
    brd[0].movelist[ct+1] = 14;
    ct = ct + 2;
 }
 if((brd[0].boardval[15] == 99) ||
    (brd[0].boardval[15] == 499) || (brd[0].boardval[15] == 324) ||
    (brd[0].boardval[15] == 299) || (brd[0].boardval[15] == 949) ||
    (brd[0].boardval[15] == 4999)){
     brd[0].movelist[ct] = 22;
     brd[0].movelist[ct+1] = 15;
     ct = ct + 2;
    }
  if((brd[0].boardval[13] == 99) ||
    (brd[0].boardval[13] == 499) || (brd[0].boardval[13] == 324) ||
    (brd[0].boardval[13] == 299) || (brd[0].boardval[13] == 949) ||
    (brd[0].boardval[13] == 4999)){
     brd[0].movelist[ct] = 22;
     brd[0].movelist[ct+1] = 13;
     ct = ct + 2;
    }
}


if(brd[0].boardval[30] == 100){
brd[0].attackpos[23] = 1;
brd[0].attackpos[21] = 1;
 if(brd[0].boardval[22] == 0) {
    brd[0].movelist[ct] = 30;
    brd[0].movelist[ct+1] = 22;
    ct = ct + 2;
 }
 if((brd[0].boardval[23] == 99) ||
    (brd[0].boardval[23] == 499) || (brd[0].boardval[23] == 324) ||
    (brd[0].boardval[23] == 299) || (brd[0].boardval[23] == 949) ||
    (brd[0].boardval[23] == 4999)){
     brd[0].movelist[ct] = 30;
     brd[0].movelist[ct+1] = 23;
     ct = ct + 2;
    }
  if((brd[0].boardval[21] == 99) ||
    (brd[0].boardval[21] == 499) || (brd[0].boardval[21] == 324) ||
    (brd[0].boardval[21] == 299) || (brd[0].boardval[21] == 949) ||
    (brd[0].boardval[21] == 4999)){
     brd[0].movelist[ct] = 30;
     brd[0].movelist[ct+1] = 21;
     ct = ct + 2;
    }
}


if(brd[0].boardval[38] == 100){
brd[0].attackpos[31] = 1;
brd[0].attackpos[29] = 1;
 if(brd[0].boardval[30] == 0) {
    brd[0].movelist[ct] = 38;
    brd[0].movelist[ct+1] = 30;
    ct = ct + 2;
 }
 if((brd[0].boardval[31] == 99) ||
    (brd[0].boardval[31] == 499) || (brd[0].boardval[31] == 324) ||
    (brd[0].boardval[31] == 299) || (brd[0].boardval[31] == 949) ||
    (brd[0].boardval[31] == 4999)){
     brd[0].movelist[ct] = 38;
     brd[0].movelist[ct+1] = 31;
     ct = ct + 2;
    }
  if((brd[0].boardval[29] == 99) ||
    (brd[0].boardval[29] == 499) || (brd[0].boardval[29] == 324) ||
    (brd[0].boardval[29] == 299) || (brd[0].boardval[29] == 949) ||
    (brd[0].boardval[29] == 4999)){
     brd[0].movelist[ct] = 38;
     brd[0].movelist[ct+1] = 29;
     ct = ct + 2;
    }
}


if(brd[0].boardval[46] == 100){
brd[0].attackpos[37] = 1;
brd[0].attackpos[39] = 1;
 if(brd[0].boardval[38] == 0) {
    brd[0].movelist[ct] = 46;
    brd[0].movelist[ct+1] = 38;
    ct = ct + 2;
 }
 if((brd[0].boardval[39] == 99) ||
    (brd[0].boardval[39] == 499) || (brd[0].boardval[39] == 324) ||
    (brd[0].boardval[39] == 299) || (brd[0].boardval[39] == 949) ||
    (brd[0].boardval[39] == 4999)){
     brd[0].movelist[ct] = 46;
     brd[0].movelist[ct+1] = 39;
     ct = ct + 2;
    }
  if((brd[0].boardval[37] == 99) ||
    (brd[0].boardval[37] == 499) || (brd[0].boardval[37] == 324) ||
    (brd[0].boardval[37] == 299) || (brd[0].boardval[37] == 949) ||
    (brd[0].boardval[37] == 4999)){
     brd[0].movelist[ct] = 46;
     brd[0].movelist[ct+1] = 37;
     ct = ct + 2;
    }
}


if(brd[0].boardval[54] == 100){
brd[0].attackpos[47] = 1;
brd[0].attackpos[45] = 1;
 if(brd[0].boardval[46] == 0) {
    brd[0].movelist[ct] = 54;
    brd[0].movelist[ct+1] = 46;
    ct = ct + 2;
    if(brd[0].boardval[38] == 0) {
    brd[0].movelist[ct] = 54;
    brd[0].movelist[ct+1] = 38;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[47] == 99) ||
    (brd[0].boardval[47] == 499) || (brd[0].boardval[47] == 324) ||
    (brd[0].boardval[47] == 299) || (brd[0].boardval[47] == 949) ||
    (brd[0].boardval[47] == 4999)){
     brd[0].movelist[ct] = 54;
     brd[0].movelist[ct+1] = 47;
     ct = ct + 2;
    }
  if((brd[0].boardval[45] == 99) ||
    (brd[0].boardval[45] == 499) || (brd[0].boardval[45] == 324) ||
    (brd[0].boardval[45] == 299) || (brd[0].boardval[45] == 949) ||
    (brd[0].boardval[45] == 4999)){
     brd[0].movelist[ct] = 54;
     brd[0].movelist[ct+1] = 45;
     ct = ct + 2;
    }
}

//e2-e8
if(brd[0].boardval[13] == 100){
brd[0].attackpos[6] = 1;
brd[0].attackpos[4] = 1;
 if(brd[0].boardval[5] == 0) {
    brd[0].movelist[ct] = 13;
    brd[0].movelist[ct+1] = 5;
    ct = ct + 2;
 }
 if((brd[0].boardval[6] == 99) ||
    (brd[0].boardval[6] == 499) || (brd[0].boardval[6] == 324) ||
    (brd[0].boardval[6] == 299) || (brd[0].boardval[6] == 949) ||
    (brd[0].boardval[6] == 4999)){
     brd[0].movelist[ct] = 13;
     brd[0].movelist[ct+1] = 6;
     ct = ct + 2;
    }
  if((brd[0].boardval[4] == 99) ||
    (brd[0].boardval[4] == 499) || (brd[0].boardval[4] == 324) ||
    (brd[0].boardval[4] == 299) || (brd[0].boardval[4] == 949) ||
    (brd[0].boardval[4] == 4999)){
     brd[0].movelist[ct] = 13;
     brd[0].movelist[ct+1] = 4;
     ct = ct + 2;
    }
}

if(brd[0].boardval[21] == 100){
brd[0].attackpos[14] = 1;
brd[0].attackpos[12] = 1;
 if(brd[0].boardval[13] == 0) {
    brd[0].movelist[ct] = 21;
    brd[0].movelist[ct+1] = 13;
    ct = ct + 2;
 }
 if((brd[0].boardval[14] == 99) ||
    (brd[0].boardval[14] == 499) || (brd[0].boardval[14] == 324) ||
    (brd[0].boardval[14] == 299) || (brd[0].boardval[14] == 949) ||
    (brd[0].boardval[14] == 4999)){
     brd[0].movelist[ct] = 21;
     brd[0].movelist[ct+1] = 14;
     ct = ct + 2;
    }
  if((brd[0].boardval[12] == 99) ||
    (brd[0].boardval[12] == 499) || (brd[0].boardval[12] == 324) ||
    (brd[0].boardval[12] == 299) || (brd[0].boardval[12] == 949) ||
    (brd[0].boardval[12] == 4999)){
     brd[0].movelist[ct] = 21;
     brd[0].movelist[ct+1] = 12;
     ct = ct + 2;
    }
}

if(brd[0].boardval[29] == 100){
brd[0].attackpos[20] = 1;
brd[0].attackpos[22] = 1;
 if(brd[0].boardval[21] == 0) {
    brd[0].movelist[ct] = 29;
    brd[0].movelist[ct+1] = 21;
    ct = ct + 2;
 }
 if((brd[0].boardval[22] == 99) ||
    (brd[0].boardval[22] == 499) || (brd[0].boardval[22] == 324) ||
    (brd[0].boardval[22] == 299) || (brd[0].boardval[22] == 949) ||
    (brd[0].boardval[22] == 4999)){
     brd[0].movelist[ct] = 29;
     brd[0].movelist[ct+1] = 22;
     ct = ct + 2;
    }
  if((brd[0].boardval[20] == 99) ||
    (brd[0].boardval[20] == 499) || (brd[0].boardval[20] == 324) ||
    (brd[0].boardval[20] == 299) || (brd[0].boardval[20] == 949) ||
    (brd[0].boardval[20] == 4999)){
     brd[0].movelist[ct] = 29;
     brd[0].movelist[ct+1] = 20;
     ct = ct + 2;
    }
}

if(brd[0].boardval[37] == 100){
brd[0].attackpos[30] = 1;
brd[0].attackpos[28] = 1;
 if(brd[0].boardval[29] == 0) {
    brd[0].movelist[ct] = 37;
    brd[0].movelist[ct+1] = 29;
    ct = ct + 2;
 }
 if((brd[0].boardval[30] == 99) ||
    (brd[0].boardval[30] == 499) || (brd[0].boardval[30] == 324) ||
    (brd[0].boardval[30] == 299) || (brd[0].boardval[30] == 949) ||
    (brd[0].boardval[30] == 4999)){
     brd[0].movelist[ct] = 37;
     brd[0].movelist[ct+1] = 30;
     ct = ct + 2;
    }
  if((brd[0].boardval[28] == 99) ||
    (brd[0].boardval[28] == 499) || (brd[0].boardval[28] == 324) ||
    (brd[0].boardval[28] == 299) || (brd[0].boardval[28] == 949) ||
    (brd[0].boardval[28] == 4999)){
     brd[0].movelist[ct] = 37;
     brd[0].movelist[ct+1] = 28;
     ct = ct + 2;
    }
}

if(brd[0].boardval[45] == 100){
brd[0].attackpos[38] = 1;
brd[0].attackpos[36] = 1;
 if(brd[0].boardval[37] == 0) {
    brd[0].movelist[ct] = 45;
    brd[0].movelist[ct+1] = 37;
    ct = ct + 2;
 }
 if((brd[0].boardval[38] == 99) ||
    (brd[0].boardval[38] == 499) || (brd[0].boardval[38] == 324) ||
    (brd[0].boardval[38] == 299) || (brd[0].boardval[38] == 949) ||
    (brd[0].boardval[38] == 4999)){
     brd[0].movelist[ct] = 45;
     brd[0].movelist[ct+1] = 38;
     ct = ct + 2;
    }
  if((brd[0].boardval[36] == 99) ||
    (brd[0].boardval[36] == 499) || (brd[0].boardval[36] == 324) ||
    (brd[0].boardval[36] == 299) || (brd[0].boardval[36] == 949) ||
    (brd[0].boardval[36] == 4999)){
     brd[0].movelist[ct] = 45;
     brd[0].movelist[ct+1] = 36;
     ct = ct + 2;
    }
}

if(brd[0].boardval[53] == 100){
brd[0].attackpos[44] = 1;
brd[0].attackpos[46] = 1;
 if(brd[0].boardval[45] == 0) {
    brd[0].movelist[ct] = 53;
    brd[0].movelist[ct+1] = 45;
    ct = ct + 2;
    if(brd[0].boardval[37] == 0) {
    brd[0].movelist[ct] = 53;
    brd[0].movelist[ct+1] = 37;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[46] == 99) ||
    (brd[0].boardval[46] == 499) || (brd[0].boardval[46] == 324) ||
    (brd[0].boardval[46] == 299) || (brd[0].boardval[46] == 949) ||
    (brd[0].boardval[46] == 4999)){
     brd[0].movelist[ct] = 53;
     brd[0].movelist[ct+1] = 46;
     ct = ct + 2;
    }
  if((brd[0].boardval[44] == 99) ||
    (brd[0].boardval[44] == 499) || (brd[0].boardval[44] == 324) ||
    (brd[0].boardval[44] == 299) || (brd[0].boardval[44] == 949) ||
    (brd[0].boardval[44] == 4999)){
     brd[0].movelist[ct] = 53;
     brd[0].movelist[ct+1] = 44;
     ct = ct + 2;
    }
}

//d2-d8
if(brd[0].boardval[12] == 100){
brd[0].attackpos[3] = 1;
brd[0].attackpos[5] = 1;
 if(brd[0].boardval[4] == 0) {
    brd[0].movelist[ct] = 12;
    brd[0].movelist[ct+1] = 4;
    ct = ct + 2;
 }
 if((brd[0].boardval[5] == 99) ||
    (brd[0].boardval[5] == 499) || (brd[0].boardval[5] == 324) ||
    (brd[0].boardval[5] == 299) || (brd[0].boardval[5] == 949) ||
    (brd[0].boardval[5] == 4999)){
     brd[0].movelist[ct] = 12;
     brd[0].movelist[ct+1] = 5;
     ct = ct + 2;
    }
  if((brd[0].boardval[3] == 99) ||
    (brd[0].boardval[3] == 499) || (brd[0].boardval[3] == 324) ||
    (brd[0].boardval[3] == 299) || (brd[0].boardval[3] == 949) ||
    (brd[0].boardval[3] == 4999)){
     brd[0].movelist[ct] = 12;
     brd[0].movelist[ct+1] = 3;
     ct = ct + 2;
    }
}

if(brd[0].boardval[20] == 100){
brd[0].attackpos[13] = 1;
brd[0].attackpos[11] = 1;
 if(brd[0].boardval[12] == 0) {
    brd[0].movelist[ct] = 20;
    brd[0].movelist[ct+1] = 12;
    ct = ct + 2;
 }
 if((brd[0].boardval[13] == 99) ||
    (brd[0].boardval[13] == 499) || (brd[0].boardval[13] == 324) ||
    (brd[0].boardval[13] == 299) || (brd[0].boardval[13] == 949) ||
    (brd[0].boardval[13] == 4999)){
     brd[0].movelist[ct] = 20;
     brd[0].movelist[ct+1] = 13;
     ct = ct + 2;
    }
  if((brd[0].boardval[11] == 99) ||
    (brd[0].boardval[11] == 499) || (brd[0].boardval[11] == 324) ||
    (brd[0].boardval[11] == 299) || (brd[0].boardval[11] == 949) ||
    (brd[0].boardval[11] == 4999)){
     brd[0].movelist[ct] = 20;
     brd[0].movelist[ct+1] = 11;
     ct = ct + 2;
    }
}

if(brd[0].boardval[28] == 100){
brd[0].attackpos[21] = 1;
brd[0].attackpos[19] = 1;
 if(brd[0].boardval[20] == 0) {
    brd[0].movelist[ct] = 28;
    brd[0].movelist[ct+1] = 20;
    ct = ct + 2;
 }
 if((brd[0].boardval[21] == 99) ||
    (brd[0].boardval[21] == 499) || (brd[0].boardval[21] == 324) ||
    (brd[0].boardval[21] == 299) || (brd[0].boardval[21] == 949) ||
    (brd[0].boardval[21] == 4999)){
     brd[0].movelist[ct] = 28;
     brd[0].movelist[ct+1] = 21;
     ct = ct + 2;
    }
  if((brd[0].boardval[19] == 99) ||
    (brd[0].boardval[19] == 499) || (brd[0].boardval[19] == 324) ||
    (brd[0].boardval[19] == 299) || (brd[0].boardval[19] == 949) ||
    (brd[0].boardval[19] == 4999)){
     brd[0].movelist[ct] = 28;
     brd[0].movelist[ct+1] = 19;
     ct = ct + 2;
    }
}

if(brd[0].boardval[36] == 100){
brd[0].attackpos[29] = 1;
brd[0].attackpos[27] = 1;
 if(brd[0].boardval[28] == 0) {
    brd[0].movelist[ct] = 36;
    brd[0].movelist[ct+1] = 28;
    ct = ct + 2;
 }
 if((brd[0].boardval[29] == 99) ||
    (brd[0].boardval[29] == 499) || (brd[0].boardval[29] == 324) ||
    (brd[0].boardval[29] == 299) || (brd[0].boardval[29] == 949) ||
    (brd[0].boardval[29] == 4999)){
     brd[0].movelist[ct] = 36;
     brd[0].movelist[ct+1] = 29;
     ct = ct + 2;
    }
  if((brd[0].boardval[27] == 99) ||
    (brd[0].boardval[27] == 499) || (brd[0].boardval[27] == 324) ||
    (brd[0].boardval[27] == 299) || (brd[0].boardval[27] == 949) ||
    (brd[0].boardval[27] == 4999)){
     brd[0].movelist[ct] = 36;
     brd[0].movelist[ct+1] = 27;
     ct = ct + 2;
    }
}

if(brd[0].boardval[44] == 100){
brd[0].attackpos[35] = 1;
brd[0].attackpos[37] = 1;
 if(brd[0].boardval[36] == 0) {
    brd[0].movelist[ct] = 44;
    brd[0].movelist[ct+1] = 36;
    ct = ct + 2;
 }
 if((brd[0].boardval[37] == 99) ||
    (brd[0].boardval[37] == 499) || (brd[0].boardval[37] == 324) ||
    (brd[0].boardval[37] == 299) || (brd[0].boardval[37] == 949) ||
    (brd[0].boardval[37] == 4999)){
     brd[0].movelist[ct] = 44;
     brd[0].movelist[ct+1] = 37;
     ct = ct + 2;
    }
  if((brd[0].boardval[35] == 99) ||
    (brd[0].boardval[35] == 499) || (brd[0].boardval[35] == 324) ||
    (brd[0].boardval[35] == 299) || (brd[0].boardval[35] == 949) ||
    (brd[0].boardval[35] == 4999)){
     brd[0].movelist[ct] = 44;
     brd[0].movelist[ct+1] = 35;
     ct = ct + 2;
    }
}

if(brd[0].boardval[52] == 100){
brd[0].attackpos[43] = 1;
brd[0].attackpos[45] = 1;
 if(brd[0].boardval[44] == 0) {
    brd[0].movelist[ct] = 52;
    brd[0].movelist[ct+1] = 44;
    ct = ct + 2;
    if(brd[0].boardval[36] == 0) {
    brd[0].movelist[ct] = 52;
    brd[0].movelist[ct+1] = 36;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[45] == 99) ||
    (brd[0].boardval[45] == 499) || (brd[0].boardval[45] == 324) ||
    (brd[0].boardval[45] == 299) || (brd[0].boardval[45] == 949) ||
    (brd[0].boardval[45] == 4999)){
     brd[0].movelist[ct] = 52;
     brd[0].movelist[ct+1] = 45;
     ct = ct + 2;
    }
  if((brd[0].boardval[43] == 99) ||
    (brd[0].boardval[43] == 499) || (brd[0].boardval[43] == 324) ||
    (brd[0].boardval[43] == 299) || (brd[0].boardval[43] == 949) ||
    (brd[0].boardval[43] == 4999)){
     brd[0].movelist[ct] = 52;
     brd[0].movelist[ct+1] = 43;
     ct = ct + 2;
    }
}

//c2-c8
if(brd[0].boardval[11] == 100){
brd[0].attackpos[4] = 1;
brd[0].attackpos[2] = 1;
 if(brd[0].boardval[3] == 0) {
    brd[0].movelist[ct] = 11;
    brd[0].movelist[ct+1] = 3;
    ct = ct + 2;
 }
 if((brd[0].boardval[4] == 99) ||
    (brd[0].boardval[4] == 499) || (brd[0].boardval[4] == 324) ||
    (brd[0].boardval[4] == 299) || (brd[0].boardval[4] == 949) ||
    (brd[0].boardval[4] == 4999)){
     brd[0].movelist[ct] = 11;
     brd[0].movelist[ct+1] = 4;
     ct = ct + 2;
    }
  if((brd[0].boardval[2] == 99) ||
    (brd[0].boardval[2] == 499) || (brd[0].boardval[2] == 324) ||
    (brd[0].boardval[2] == 299) || (brd[0].boardval[2] == 949) ||
    (brd[0].boardval[2] == 4999)){
     brd[0].movelist[ct] = 11;
     brd[0].movelist[ct+1] = 2;
     ct = ct + 2;
    }
}

if(brd[0].boardval[19] == 100){
brd[0].attackpos[12] = 1;
brd[0].attackpos[10] = 1;
 if(brd[0].boardval[11] == 0) {
    brd[0].movelist[ct] = 19;
    brd[0].movelist[ct+1] = 11;
    ct = ct + 2;
 }
 if((brd[0].boardval[12] == 99) ||
    (brd[0].boardval[12] == 499) || (brd[0].boardval[12] == 324) ||
    (brd[0].boardval[12] == 299) || (brd[0].boardval[12] == 949) ||
    (brd[0].boardval[12] == 4999)){
     brd[0].movelist[ct] = 19;
     brd[0].movelist[ct+1] = 12;
     ct = ct + 2;
    }
  if((brd[0].boardval[10] == 99) ||
    (brd[0].boardval[10] == 499) || (brd[0].boardval[10] == 324) ||
    (brd[0].boardval[10] == 299) || (brd[0].boardval[10] == 949) ||
    (brd[0].boardval[10] == 4999)){
     brd[0].movelist[ct] = 19;
     brd[0].movelist[ct+1] = 10;
     ct = ct + 2;
    }
}

if(brd[0].boardval[27] == 100){
brd[0].attackpos[18] = 1;
brd[0].attackpos[20] = 1;
 if(brd[0].boardval[19] == 0) {
    brd[0].movelist[ct] = 27;
    brd[0].movelist[ct+1] = 19;
    ct = ct + 2;
 }
 if((brd[0].boardval[20] == 99) ||
    (brd[0].boardval[20] == 499) || (brd[0].boardval[20] == 324) ||
    (brd[0].boardval[20] == 299) || (brd[0].boardval[20] == 949) ||
    (brd[0].boardval[20] == 4999)){
     brd[0].movelist[ct] = 27;
     brd[0].movelist[ct+1] = 20;
     ct = ct + 2;
    }
  if((brd[0].boardval[18] == 99) ||
    (brd[0].boardval[18] == 499) || (brd[0].boardval[18] == 324) ||
    (brd[0].boardval[18] == 299) || (brd[0].boardval[18] == 949) ||
    (brd[0].boardval[18] == 4999)){
     brd[0].movelist[ct] = 27;
     brd[0].movelist[ct+1] = 18;
     ct = ct + 2;
    }
}


if(brd[0].boardval[35] == 100){
brd[0].attackpos[28] = 1;
brd[0].attackpos[26] = 1;
 if(brd[0].boardval[27] == 0) {
    brd[0].movelist[ct] = 35;
    brd[0].movelist[ct+1] = 27;
    ct = ct + 2;
 }
 if((brd[0].boardval[28] == 99) ||
    (brd[0].boardval[28] == 499) || (brd[0].boardval[28] == 324) ||
    (brd[0].boardval[28] == 299) || (brd[0].boardval[28] == 949) ||
    (brd[0].boardval[28] == 4999)){
     brd[0].movelist[ct] = 35;
     brd[0].movelist[ct+1] = 28;
     ct = ct + 2;
    }
  if((brd[0].boardval[26] == 99) ||
    (brd[0].boardval[26] == 499) || (brd[0].boardval[26] == 324) ||
    (brd[0].boardval[26] == 299) || (brd[0].boardval[26] == 949) ||
    (brd[0].boardval[26] == 4999)){
     brd[0].movelist[ct] = 35;
     brd[0].movelist[ct+1] = 26;
     ct = ct + 2;
    }
}

if(brd[0].boardval[43] == 100){
brd[0].attackpos[36] = 1;
brd[0].attackpos[34] = 1;
 if(brd[0].boardval[35] == 0) {
    brd[0].movelist[ct] = 43;
    brd[0].movelist[ct+1] = 35;
    ct = ct + 2;
 }
 if((brd[0].boardval[36] == 99) ||
    (brd[0].boardval[36] == 499) || (brd[0].boardval[36] == 324) ||
    (brd[0].boardval[36] == 299) || (brd[0].boardval[36] == 949) ||
    (brd[0].boardval[36] == 4999)){
     brd[0].movelist[ct] = 43;
     brd[0].movelist[ct+1] = 36;
     ct = ct + 2;
    }
  if((brd[0].boardval[34] == 99) ||
    (brd[0].boardval[34] == 499) || (brd[0].boardval[34] == 324) ||
    (brd[0].boardval[34] == 299) || (brd[0].boardval[34] == 949) ||
    (brd[0].boardval[34] == 4999)){
     brd[0].movelist[ct] = 43;
     brd[0].movelist[ct+1] = 34;
     ct = ct + 2;
    }
}

if(brd[0].boardval[51] == 100){
brd[0].attackpos[44] = 1;
brd[0].attackpos[42] = 1;
 if(brd[0].boardval[43] == 0) {
    brd[0].movelist[ct] = 51;
    brd[0].movelist[ct+1] = 43;
    ct = ct + 2;
    if(brd[0].boardval[35] == 0) {
    brd[0].movelist[ct] = 51;
    brd[0].movelist[ct+1] = 35;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[44] == 99) ||
    (brd[0].boardval[44] == 499) || (brd[0].boardval[44] == 324) ||
    (brd[0].boardval[44] == 299) || (brd[0].boardval[44] == 949) ||
    (brd[0].boardval[44] == 4999)){
     brd[0].movelist[ct] = 51;
     brd[0].movelist[ct+1] = 44;
     ct = ct + 2;
    }
  if((brd[0].boardval[42] == 99) ||
    (brd[0].boardval[42] == 499) || (brd[0].boardval[42] == 324) ||
    (brd[0].boardval[42] == 299) || (brd[0].boardval[42] == 949) ||
    (brd[0].boardval[42] == 4999)){
     brd[0].movelist[ct] = 51;
     brd[0].movelist[ct+1] = 42;
     ct = ct + 2;
    }
}

//b2-b8
if(brd[0].boardval[10] == 100){
brd[0].attackpos[3] = 1;
brd[0].attackpos[1] = 1;
 if(brd[0].boardval[2] == 0) {
    brd[0].movelist[ct] = 10;
    brd[0].movelist[ct+1] = 2;
    ct = ct + 2;
 }
 if((brd[0].boardval[3] == 99) ||
    (brd[0].boardval[3] == 499) || (brd[0].boardval[3] == 324) ||
    (brd[0].boardval[3] == 299) || (brd[0].boardval[3] == 949) ||
    (brd[0].boardval[3] == 4999)){
     brd[0].movelist[ct] = 10;
     brd[0].movelist[ct+1] = 3;
     ct = ct + 2;
    }
  if((brd[0].boardval[1] == 99) ||
    (brd[0].boardval[1] == 499) || (brd[0].boardval[1] == 324) ||
    (brd[0].boardval[1] == 299) || (brd[0].boardval[1] == 949) ||
    (brd[0].boardval[1] == 4999)){
     brd[0].movelist[ct] = 10;
     brd[0].movelist[ct+1] = 1;
     ct = ct + 2;
    }
}


if(brd[0].boardval[18] == 100){
brd[0].attackpos[11] = 1;
brd[0].attackpos[9] = 1;
 if(brd[0].boardval[10] == 0) {
    brd[0].movelist[ct] = 18;
    brd[0].movelist[ct+1] = 10;
    ct = ct + 2;

 }
 if((brd[0].boardval[11] == 99) ||
    (brd[0].boardval[11] == 499) || (brd[0].boardval[11] == 324) ||
    (brd[0].boardval[11] == 299) || (brd[0].boardval[11] == 949) ||
    (brd[0].boardval[11] == 4999)){
     brd[0].movelist[ct] = 18;
     brd[0].movelist[ct+1] = 11;
     ct = ct + 2;
    }
  if((brd[0].boardval[9] == 99) ||
    (brd[0].boardval[9] == 499) || (brd[0].boardval[9] == 324) ||
    (brd[0].boardval[9] == 299) || (brd[0].boardval[9] == 949) ||
    (brd[0].boardval[9] == 4999)){
     brd[0].movelist[ct] = 18;
     brd[0].movelist[ct+1] = 9;
     ct = ct + 2;
    }
}

if(brd[0].boardval[26] == 100){
brd[0].attackpos[19] = 1;
brd[0].attackpos[17] = 1;
 if(brd[0].boardval[18] == 0) {
    brd[0].movelist[ct] = 26;
    brd[0].movelist[ct+1] = 18;
    ct = ct + 2;
 }
 if((brd[0].boardval[19] == 99) ||
    (brd[0].boardval[19] == 499) || (brd[0].boardval[19] == 324) ||
    (brd[0].boardval[19] == 299) || (brd[0].boardval[19] == 949) ||
    (brd[0].boardval[19] == 4999)){
     brd[0].movelist[ct] = 26;
     brd[0].movelist[ct+1] = 19;
     ct = ct + 2;
    }
  if((brd[0].boardval[17] == 99) ||
    (brd[0].boardval[17] == 499) || (brd[0].boardval[17] == 324) ||
    (brd[0].boardval[17] == 299) || (brd[0].boardval[17] == 949) ||
    (brd[0].boardval[17] == 4999)){
     brd[0].movelist[ct] = 26;
     brd[0].movelist[ct+1] = 17;
     ct = ct + 2;
    }
}


if(brd[0].boardval[34] == 100){
brd[0].attackpos[27] = 1;
brd[0].attackpos[25] = 1;
 if(brd[0].boardval[26] == 0) {
    brd[0].movelist[ct] = 34;
    brd[0].movelist[ct+1] = 26;
    ct = ct + 2;
 }
 if((brd[0].boardval[27] == 99) ||
    (brd[0].boardval[27] == 499) || (brd[0].boardval[27] == 324) ||
    (brd[0].boardval[27] == 299) || (brd[0].boardval[27] == 949) ||
    (brd[0].boardval[27] == 4999)){
     brd[0].movelist[ct] = 34;
     brd[0].movelist[ct+1] = 27;
     ct = ct + 2;
    }
  if((brd[0].boardval[25] == 99) ||
    (brd[0].boardval[25] == 499) || (brd[0].boardval[25] == 324) ||
    (brd[0].boardval[25] == 299) || (brd[0].boardval[25] == 949) ||
    (brd[0].boardval[25] == 4999)){
     brd[0].movelist[ct] = 34;
     brd[0].movelist[ct+1] = 25;
     ct = ct + 2;
    }
}

if(brd[0].boardval[42] == 100){
brd[0].attackpos[35] = 1;
brd[0].attackpos[33] = 1;
 if(brd[0].boardval[34] == 0) {
    brd[0].movelist[ct] = 42;
    brd[0].movelist[ct+1] = 34;
    ct = ct + 2;
 }
 if((brd[0].boardval[35] == 99) ||
    (brd[0].boardval[35] == 499) || (brd[0].boardval[35] == 324) ||
    (brd[0].boardval[35] == 299) || (brd[0].boardval[35] == 949) ||
    (brd[0].boardval[35] == 4999)){
     brd[0].movelist[ct] = 42;
     brd[0].movelist[ct+1] = 35;
     ct = ct + 2;
    }
  if((brd[0].boardval[33] == 99) ||
    (brd[0].boardval[33] == 499) || (brd[0].boardval[33] == 324) ||
    (brd[0].boardval[33] == 299) || (brd[0].boardval[33] == 949) ||
    (brd[0].boardval[33] == 4999)){
     brd[0].movelist[ct] = 42;
     brd[0].movelist[ct+1] = 33;
     ct = ct + 2;
    }
}

if(brd[0].boardval[50] == 100){
brd[0].attackpos[43] = 1;
brd[0].attackpos[41] = 1;
 if(brd[0].boardval[42] == 0) {
    brd[0].movelist[ct] = 50;
    brd[0].movelist[ct+1] = 42;
    ct = ct + 2;
    if(brd[0].boardval[34] == 0) {
    brd[0].movelist[ct] = 50;
    brd[0].movelist[ct+1] = 34;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[41] == 99) ||
    (brd[0].boardval[41] == 499) || (brd[0].boardval[41] == 324) ||
    (brd[0].boardval[41] == 299) || (brd[0].boardval[41] == 949) ||
    (brd[0].boardval[41] == 4999)){
     brd[0].movelist[ct] = 50;
     brd[0].movelist[ct+1] = 41;
     ct = ct + 2;
    }
  if((brd[0].boardval[43] == 99) ||
    (brd[0].boardval[43] == 499) || (brd[0].boardval[43] == 324) ||
    (brd[0].boardval[43] == 299) || (brd[0].boardval[43] == 949) ||
    (brd[0].boardval[43] == 4999)){
     brd[0].movelist[ct] = 50;
     brd[0].movelist[ct+1] = 43;
     ct = ct + 2;
    }
}

//a2-a8
if(brd[0].boardval[9] == 100){
brd[0].attackpos[2] = 1;
 if(brd[0].boardval[1] == 0) {
    brd[0].movelist[ct] = 9;
    brd[0].movelist[ct+1] = 1;
    ct = ct + 2;
    }

 if((brd[0].boardval[2] == 99) ||
    (brd[0].boardval[2] == 499) || (brd[0].boardval[2] == 324) ||
    (brd[0].boardval[2] == 299) || (brd[0].boardval[2] == 949) ||
    (brd[0].boardval[2] == 4999)){
     brd[0].movelist[ct] = 9;
     brd[0].movelist[ct+1] = 2;
     ct = ct + 2;
    }
}
if(brd[0].boardval[17] == 100){
brd[0].attackpos[10] = 1;
 if(brd[0].boardval[9] == 0) {
    brd[0].movelist[ct] = 17;
    brd[0].movelist[ct+1] = 9;
    ct = ct + 2;
    }

 if((brd[0].boardval[10] == 99) ||
    (brd[0].boardval[10] == 499) || (brd[0].boardval[10] == 324) ||
    (brd[0].boardval[10] == 299) || (brd[0].boardval[10] == 949) ||
    (brd[0].boardval[10] == 4999)){
     brd[0].movelist[ct] = 17;
     brd[0].movelist[ct+1] = 10;
     ct = ct + 2;
    }
}
if(brd[0].boardval[25] == 100){
brd[0].attackpos[18] = 1;
 if(brd[0].boardval[17] == 0) {
    brd[0].movelist[ct] = 25;
    brd[0].movelist[ct+1] = 17;
    ct = ct + 2;
    }

 if((brd[0].boardval[18] == 99) ||
    (brd[0].boardval[18] == 499) || (brd[0].boardval[18] == 324) ||
    (brd[0].boardval[18] == 299) || (brd[0].boardval[18] == 949) ||
    (brd[0].boardval[18] == 4999)){
     brd[0].movelist[ct] = 25;
     brd[0].movelist[ct+1] = 18;
     ct = ct + 2;
    }
}

if(brd[0].boardval[33] == 100){
brd[0].attackpos[26] = 1;
 if(brd[0].boardval[25] == 0) {
    brd[0].movelist[ct] = 33;
    brd[0].movelist[ct+1] = 25;
    ct = ct + 2;
    }

 if((brd[0].boardval[26] == 99) ||
    (brd[0].boardval[26] == 499) || (brd[0].boardval[26] == 324) ||
    (brd[0].boardval[26] == 299) || (brd[0].boardval[26] == 949) ||
    (brd[0].boardval[26] == 4999)){
     brd[0].movelist[ct] = 33;
     brd[0].movelist[ct+1] = 26;
     ct = ct + 2;
    }
}
if(brd[0].boardval[41] == 100){
brd[0].attackpos[34] = 1;
 if(brd[0].boardval[33] == 0) {
    brd[0].movelist[ct] = 41;
    brd[0].movelist[ct+1] = 33;
    ct = ct + 2;
    }

 if((brd[0].boardval[34] == 99) ||
    (brd[0].boardval[34] == 499) || (brd[0].boardval[34] == 324) ||
    (brd[0].boardval[34] == 299) || (brd[0].boardval[34] == 949) ||
    (brd[0].boardval[34] == 4999)){
     brd[0].movelist[ct] = 41;
     brd[0].movelist[ct+1] = 34;
     ct = ct + 2;
    }
}
if(brd[0].boardval[49] == 100){
brd[0].attackpos[42] = 1;
 if(brd[0].boardval[41] == 0) {
    brd[0].movelist[ct] = 49;
    brd[0].movelist[ct+1] = 41;
    ct = ct + 2;
    if(brd[0].boardval[33] == 0) {
    brd[0].movelist[ct] = 49;
    brd[0].movelist[ct+1] = 33;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[42] == 99) ||
    (brd[0].boardval[42] == 499) || (brd[0].boardval[42] == 324) ||
    (brd[0].boardval[42] == 299) || (brd[0].boardval[42] == 949) ||
    (brd[0].boardval[42] == 4999)){
     brd[0].movelist[ct] = 49;
     brd[0].movelist[ct+1] = 42;
     ct = ct + 2;
    }
}

/////////

 int temp = 0,stop = 0,tiker=0;
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = rookh8[ft];
  if(tictoc == 16) tiker = rookh7[ft];
  if(tictoc == 24) tiker = rookh6[ft];
  if(tictoc == 32) tiker = rookh5[ft];
  if(tictoc == 40) tiker = rookh4[ft];
  if(tictoc == 48) tiker = rookh3[ft];
  if(tictoc == 56) tiker = rookh2[ft];
  if(tictoc == 64) tiker = rookh1[ft];

  if(tictoc == 7) tiker = rookg8[ft];
  if(tictoc == 15) tiker = rookg7[ft];
  if(tictoc == 23) tiker = rookg6[ft];
  if(tictoc == 31) tiker = rookg5[ft];
  if(tictoc == 39) tiker = rookg4[ft];
  if(tictoc == 47) tiker = rookg3[ft];
  if(tictoc == 55) tiker = rookg2[ft];
  if(tictoc == 63) tiker = rookg1[ft];

  if(tictoc == 6) tiker = rookf8[ft];
  if(tictoc == 14) tiker = rookf7[ft];
  if(tictoc == 22) tiker = rookf6[ft];
  if(tictoc == 30) tiker = rookf5[ft];
  if(tictoc == 38) tiker = rookf4[ft];
  if(tictoc == 46) tiker = rookf3[ft];
  if(tictoc == 54) tiker = rookf2[ft];
  if(tictoc == 62) tiker = rookf1[ft];

  if(tictoc == 5) tiker = rooke8[ft];
  if(tictoc == 13) tiker = rooke7[ft];
  if(tictoc == 21) tiker = rooke6[ft];
  if(tictoc == 29) tiker = rooke5[ft];
  if(tictoc == 37) tiker = rooke4[ft];
  if(tictoc == 45) tiker = rooke3[ft];
  if(tictoc == 53) tiker = rooke2[ft];
  if(tictoc == 61) tiker = rooke1[ft];

  if(tictoc == 4) tiker = rookd8[ft];
  if(tictoc == 12) tiker = rookd7[ft];
  if(tictoc == 20) tiker = rookd6[ft];
  if(tictoc == 28) tiker = rookd5[ft];
  if(tictoc == 36) tiker = rookd4[ft];
  if(tictoc == 44) tiker = rookd3[ft];
  if(tictoc == 52) tiker = rookd2[ft];
  if(tictoc == 60) tiker = rookd1[ft];

  if(tictoc == 3) tiker = rookc8[ft];
  if(tictoc == 11) tiker = rookc7[ft];
  if(tictoc == 19) tiker = rookc6[ft];
  if(tictoc == 27) tiker = rookc5[ft];
  if(tictoc == 35) tiker = rookc4[ft];
  if(tictoc == 43) tiker = rookc3[ft];
  if(tictoc == 51) tiker = rookc2[ft];
  if(tictoc == 59) tiker = rookc1[ft];

  if(tictoc == 2) tiker = rookb8[ft];
  if(tictoc == 10) tiker = rookb7[ft];
  if(tictoc == 18) tiker = rookb6[ft];
  if(tictoc == 26) tiker = rookb5[ft];
  if(tictoc == 34) tiker = rookb4[ft];
  if(tictoc == 42) tiker = rookb3[ft];
  if(tictoc == 50) tiker = rookb2[ft];
  if(tictoc == 58) tiker = rookb1[ft];

  if(tictoc == 1) tiker = rooka8[ft];
  if(tictoc == 9) tiker = rooka7[ft];
  if(tictoc == 17) tiker = rooka6[ft];
  if(tictoc == 57) tiker = rooka1[ft];
  if(tictoc == 49) tiker = rooka2[ft];
  if(tictoc == 41) tiker = rooka3[ft];
  if(tictoc == 33) tiker = rooka4[ft];
  if(tictoc == 25) tiker = rooka5[ft];

  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;

  if (brd[0].boardval[tictoc] == 500) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].attackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }
/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = bishh8[ft];
  if(tictoc == 16) tiker = bishh7[ft];
  if(tictoc == 24) tiker = bishh6[ft];
  if(tictoc == 32) tiker = bishh5[ft];
  if(tictoc == 40) tiker = bishh4[ft];
  if(tictoc == 48) tiker = bishh3[ft];
  if(tictoc == 56) tiker = bishh2[ft];
  if(tictoc == 64) tiker = bishh1[ft];

  if(tictoc == 7) tiker = bishg8[ft];
  if(tictoc == 15) tiker = bishg7[ft];
  if(tictoc == 23) tiker = bishg6[ft];
  if(tictoc == 31) tiker = bishg5[ft];
  if(tictoc == 39) tiker = bishg4[ft];
  if(tictoc == 47) tiker = bishg3[ft];
  if(tictoc == 55) tiker = bishg2[ft];
  if(tictoc == 63) tiker = bishg1[ft];

  if(tictoc == 6) tiker = bishf8[ft];
  if(tictoc == 14) tiker = bishf7[ft];
  if(tictoc == 22) tiker = bishf6[ft];
  if(tictoc == 30) tiker = bishf5[ft];
  if(tictoc == 38) tiker = bishf4[ft];
  if(tictoc == 46) tiker = bishf3[ft];
  if(tictoc == 54) tiker = bishf2[ft];
  if(tictoc == 62) tiker = bishf1[ft];

  if(tictoc == 5) tiker = bishe8[ft];
  if(tictoc == 13) tiker = bishe7[ft];
  if(tictoc == 21) tiker = bishe6[ft];
  if(tictoc == 29) tiker = bishe5[ft];
  if(tictoc == 37) tiker = bishe4[ft];
  if(tictoc == 45) tiker = bishe3[ft];
  if(tictoc == 53) tiker = bishe2[ft];
  if(tictoc == 61) tiker = bishe1[ft];

  if(tictoc == 4) tiker = bishd8[ft];
  if(tictoc == 12) tiker = bishd7[ft];
  if(tictoc == 20) tiker = bishd6[ft];
  if(tictoc == 28) tiker = bishd5[ft];
  if(tictoc == 36) tiker = bishd4[ft];
  if(tictoc == 44) tiker = bishd3[ft];
  if(tictoc == 52) tiker = bishd2[ft];
  if(tictoc == 60) tiker = bishd1[ft];

  if(tictoc == 3) tiker = bishc8[ft];
  if(tictoc == 11) tiker = bishc7[ft];
  if(tictoc == 19) tiker = bishc6[ft];
  if(tictoc == 27) tiker = bishc5[ft];
  if(tictoc == 35) tiker = bishc4[ft];
  if(tictoc == 43) tiker = bishc3[ft];
  if(tictoc == 51) tiker = bishc2[ft];
  if(tictoc == 59) tiker = bishc1[ft];

  if(tictoc == 2) tiker = bishb8[ft];
  if(tictoc == 10) tiker = bishb7[ft];
  if(tictoc == 18) tiker = bishb6[ft];
  if(tictoc == 26) tiker = bishb5[ft];
  if(tictoc == 34) tiker = bishb4[ft];
  if(tictoc == 42) tiker = bishb3[ft];
  if(tictoc == 50) tiker = bishb2[ft];
  if(tictoc == 58) tiker = bishb1[ft];

  if(tictoc == 1) tiker = bisha8[ft];
  if(tictoc == 9) tiker = bisha7[ft];
  if(tictoc == 17) tiker = bisha6[ft];
  if(tictoc == 57) tiker = bisha1[ft];
  if(tictoc == 49) tiker = bisha2[ft];
  if(tictoc == 41) tiker = bisha3[ft];
  if(tictoc == 33) tiker = bisha4[ft];
  if(tictoc == 25) tiker = bisha5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;


  if (brd[0].boardval[tictoc] == 325) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].attackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }
   /*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = niteh8[ft];
  if(tictoc == 16) tiker = niteh7[ft];
  if(tictoc == 24) tiker = niteh6[ft];
  if(tictoc == 32) tiker = niteh5[ft];
  if(tictoc == 40) tiker = niteh4[ft];
  if(tictoc == 48) tiker = niteh3[ft];
  if(tictoc == 56) tiker = niteh2[ft];
  if(tictoc == 64) tiker = niteh1[ft];

  if(tictoc == 7) tiker = niteg8[ft];
  if(tictoc == 15) tiker = niteg7[ft];
  if(tictoc == 23) tiker = niteg6[ft];
  if(tictoc == 31) tiker = niteg5[ft];
  if(tictoc == 39) tiker = niteg4[ft];
  if(tictoc == 47) tiker = niteg3[ft];
  if(tictoc == 55) tiker = niteg2[ft];
  if(tictoc == 63) tiker = niteg1[ft];

  if(tictoc == 6) tiker = nitef8[ft];
  if(tictoc == 14) tiker = nitef7[ft];
  if(tictoc == 22) tiker = nitef6[ft];
  if(tictoc == 30) tiker = nitef5[ft];
  if(tictoc == 38) tiker = nitef4[ft];
  if(tictoc == 46) tiker = nitef3[ft];
  if(tictoc == 54) tiker = nitef2[ft];
  if(tictoc == 62) tiker = nitef1[ft];

  if(tictoc == 5) tiker = nitee8[ft];
  if(tictoc == 13) tiker = nitee7[ft];
  if(tictoc == 21) tiker = nitee6[ft];
  if(tictoc == 29) tiker = nitee5[ft];
  if(tictoc == 37) tiker = nitee4[ft];
  if(tictoc == 45) tiker = nitee3[ft];
  if(tictoc == 53) tiker = nitee2[ft];
  if(tictoc == 61) tiker = nitee1[ft];

  if(tictoc == 4) tiker = nited8[ft];
  if(tictoc == 12) tiker = nited7[ft];
  if(tictoc == 20) tiker = nited6[ft];
  if(tictoc == 28) tiker = nited5[ft];
  if(tictoc == 36) tiker = nited4[ft];
  if(tictoc == 44) tiker = nited3[ft];
  if(tictoc == 52) tiker = nited2[ft];
  if(tictoc == 60) tiker = nited1[ft];

  if(tictoc == 3) tiker = nitec8[ft];
  if(tictoc == 11) tiker = nitec7[ft];
  if(tictoc == 19) tiker = nitec6[ft];
  if(tictoc == 27) tiker = nitec5[ft];
  if(tictoc == 35) tiker = nitec4[ft];
  if(tictoc == 43) tiker = nitec3[ft];
  if(tictoc == 51) tiker = nitec2[ft];
  if(tictoc == 59) tiker = nitec1[ft];

  if(tictoc == 2) tiker = niteb8[ft];
  if(tictoc == 10) tiker = niteb7[ft];
  if(tictoc == 18) tiker = niteb6[ft];
  if(tictoc == 26) tiker = niteb5[ft];
  if(tictoc == 34) tiker = niteb4[ft];
  if(tictoc == 42) tiker = niteb3[ft];
  if(tictoc == 50) tiker = niteb2[ft];
  if(tictoc == 58) tiker = niteb1[ft];

  if(tictoc == 1) tiker = nitea8[ft];
  if(tictoc == 9) tiker = nitea7[ft];
  if(tictoc == 17) tiker = nitea6[ft];
  if(tictoc == 57) tiker = nitea1[ft];
  if(tictoc == 49) tiker = nitea2[ft];
  if(tictoc == 41) tiker = nitea3[ft];
  if(tictoc == 33) tiker = nitea4[ft];
  if(tictoc == 25) tiker = nitea5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;


  if (brd[0].boardval[tictoc] == 300) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].attackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }
       /*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {
 if(tictoc == 8) tiker = bishh8[ft];
  if(tictoc == 16) tiker = bishh7[ft];
  if(tictoc == 24) tiker = bishh6[ft];
  if(tictoc == 32) tiker = bishh5[ft];
  if(tictoc == 40) tiker = bishh4[ft];
  if(tictoc == 48) tiker = bishh3[ft];
  if(tictoc == 56) tiker = bishh2[ft];
  if(tictoc == 64) tiker = bishh1[ft];

  if(tictoc == 7) tiker = bishg8[ft];
  if(tictoc == 15) tiker = bishg7[ft];
  if(tictoc == 23) tiker = bishg6[ft];
  if(tictoc == 31) tiker = bishg5[ft];
  if(tictoc == 39) tiker = bishg4[ft];
  if(tictoc == 47) tiker = bishg3[ft];
  if(tictoc == 55) tiker = bishg2[ft];
  if(tictoc == 63) tiker = bishg1[ft];

  if(tictoc == 6) tiker = bishf8[ft];
  if(tictoc == 14) tiker = bishf7[ft];
  if(tictoc == 22) tiker = bishf6[ft];
  if(tictoc == 30) tiker = bishf5[ft];
  if(tictoc == 38) tiker = bishf4[ft];
  if(tictoc == 46) tiker = bishf3[ft];
  if(tictoc == 54) tiker = bishf2[ft];
  if(tictoc == 62) tiker = bishf1[ft];

  if(tictoc == 5) tiker = bishe8[ft];
  if(tictoc == 13) tiker = bishe7[ft];
  if(tictoc == 21) tiker = bishe6[ft];
  if(tictoc == 29) tiker = bishe5[ft];
  if(tictoc == 37) tiker = bishe4[ft];
  if(tictoc == 45) tiker = bishe3[ft];
  if(tictoc == 53) tiker = bishe2[ft];
  if(tictoc == 61) tiker = bishe1[ft];

  if(tictoc == 4) tiker = bishd8[ft];
  if(tictoc == 12) tiker = bishd7[ft];
  if(tictoc == 20) tiker = bishd6[ft];
  if(tictoc == 28) tiker = bishd5[ft];
  if(tictoc == 36) tiker = bishd4[ft];
  if(tictoc == 44) tiker = bishd3[ft];
  if(tictoc == 52) tiker = bishd2[ft];
  if(tictoc == 60) tiker = bishd1[ft];

  if(tictoc == 3) tiker = bishc8[ft];
  if(tictoc == 11) tiker = bishc7[ft];
  if(tictoc == 19) tiker = bishc6[ft];
  if(tictoc == 27) tiker = bishc5[ft];
  if(tictoc == 35) tiker = bishc4[ft];
  if(tictoc == 43) tiker = bishc3[ft];
  if(tictoc == 51) tiker = bishc2[ft];
  if(tictoc == 59) tiker = bishc1[ft];

  if(tictoc == 2) tiker = bishb8[ft];
  if(tictoc == 10) tiker = bishb7[ft];
  if(tictoc == 18) tiker = bishb6[ft];
  if(tictoc == 26) tiker = bishb5[ft];
  if(tictoc == 34) tiker = bishb4[ft];
  if(tictoc == 42) tiker = bishb3[ft];
  if(tictoc == 50) tiker = bishb2[ft];
  if(tictoc == 58) tiker = bishb1[ft];

  if(tictoc == 1) tiker = bisha8[ft];
  if(tictoc == 9) tiker = bisha7[ft];
  if(tictoc == 17) tiker = bisha6[ft];
  if(tictoc == 57) tiker = bisha1[ft];
  if(tictoc == 49) tiker = bisha2[ft];
  if(tictoc == 41) tiker = bisha3[ft];
  if(tictoc == 33) tiker = bisha4[ft];
  if(tictoc == 25) tiker = bisha5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;



  if (brd[0].boardval[tictoc] == 950) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].attackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }

/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/
 
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = rookh8[ft];
  if(tictoc == 16) tiker = rookh7[ft];
  if(tictoc == 24) tiker = rookh6[ft];
  if(tictoc == 32) tiker = rookh5[ft];
  if(tictoc == 40) tiker = rookh4[ft];
  if(tictoc == 48) tiker = rookh3[ft];
  if(tictoc == 56) tiker = rookh2[ft];
  if(tictoc == 64) tiker = rookh1[ft];

  if(tictoc == 7) tiker = rookg8[ft];
  if(tictoc == 15) tiker = rookg7[ft];
  if(tictoc == 23) tiker = rookg6[ft];
  if(tictoc == 31) tiker = rookg5[ft];
  if(tictoc == 39) tiker = rookg4[ft];
  if(tictoc == 47) tiker = rookg3[ft];
  if(tictoc == 55) tiker = rookg2[ft];
  if(tictoc == 63) tiker = rookg1[ft];

  if(tictoc == 6) tiker = rookf8[ft];
  if(tictoc == 14) tiker = rookf7[ft];
  if(tictoc == 22) tiker = rookf6[ft];
  if(tictoc == 30) tiker = rookf5[ft];
  if(tictoc == 38) tiker = rookf4[ft];
  if(tictoc == 46) tiker = rookf3[ft];
  if(tictoc == 54) tiker = rookf2[ft];
  if(tictoc == 62) tiker = rookf1[ft];

  if(tictoc == 5) tiker = rooke8[ft];
  if(tictoc == 13) tiker = rooke7[ft];
  if(tictoc == 21) tiker = rooke6[ft];
  if(tictoc == 29) tiker = rooke5[ft];
  if(tictoc == 37) tiker = rooke4[ft];
  if(tictoc == 45) tiker = rooke3[ft];
  if(tictoc == 53) tiker = rooke2[ft];
  if(tictoc == 61) tiker = rooke1[ft];

  if(tictoc == 4) tiker = rookd8[ft];
  if(tictoc == 12) tiker = rookd7[ft];
  if(tictoc == 20) tiker = rookd6[ft];
  if(tictoc == 28) tiker = rookd5[ft];
  if(tictoc == 36) tiker = rookd4[ft];
  if(tictoc == 44) tiker = rookd3[ft];
  if(tictoc == 52) tiker = rookd2[ft];
  if(tictoc == 60) tiker = rookd1[ft];

  if(tictoc == 3) tiker = rookc8[ft];
  if(tictoc == 11) tiker = rookc7[ft];
  if(tictoc == 19) tiker = rookc6[ft];
  if(tictoc == 27) tiker = rookc5[ft];
  if(tictoc == 35) tiker = rookc4[ft];
  if(tictoc == 43) tiker = rookc3[ft];
  if(tictoc == 51) tiker = rookc2[ft];
  if(tictoc == 59) tiker = rookc1[ft];

  if(tictoc == 2) tiker = rookb8[ft];
  if(tictoc == 10) tiker = rookb7[ft];
  if(tictoc == 18) tiker = rookb6[ft];
  if(tictoc == 26) tiker = rookb5[ft];
  if(tictoc == 34) tiker = rookb4[ft];
  if(tictoc == 42) tiker = rookb3[ft];
  if(tictoc == 50) tiker = rookb2[ft];
  if(tictoc == 58) tiker = rookb1[ft];

  if(tictoc == 1) tiker = rooka8[ft];
  if(tictoc == 9) tiker = rooka7[ft];
  if(tictoc == 17) tiker = rooka6[ft];
  if(tictoc == 57) tiker = rooka1[ft];
  if(tictoc == 49) tiker = rooka2[ft];
  if(tictoc == 41) tiker = rooka3[ft];
  if(tictoc == 33) tiker = rooka4[ft];
  if(tictoc == 25) tiker = rooka5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;

  if (brd[0].boardval[tictoc] == 950) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].attackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }

/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = kingh8[ft];
  if(tictoc == 16) tiker = kingh7[ft];
  if(tictoc == 24) tiker = kingh6[ft];
  if(tictoc == 32) tiker = kingh5[ft];
  if(tictoc == 40) tiker = kingh4[ft];
  if(tictoc == 48) tiker = kingh3[ft];
  if(tictoc == 56) tiker = kingh2[ft];
  if(tictoc == 64) tiker = kingh1[ft];

  if(tictoc == 7) tiker = kingg8[ft];
  if(tictoc == 15) tiker = kingg7[ft];
  if(tictoc == 23) tiker = kingg6[ft];
  if(tictoc == 31) tiker = kingg5[ft];
  if(tictoc == 39) tiker = kingg4[ft];
  if(tictoc == 47) tiker = kingg3[ft];
  if(tictoc == 55) tiker = kingg2[ft];
  if(tictoc == 63) tiker = kingg1[ft];

  if(tictoc == 6) tiker = kingf8[ft];
  if(tictoc == 14) tiker = kingf7[ft];
  if(tictoc == 22) tiker = kingf6[ft];
  if(tictoc == 30) tiker = kingf5[ft];
  if(tictoc == 38) tiker = kingf4[ft];
  if(tictoc == 46) tiker = kingf3[ft];
  if(tictoc == 54) tiker = kingf2[ft];
  if(tictoc == 62) tiker = kingf1[ft];

  if(tictoc == 5) tiker = kinge8[ft];
  if(tictoc == 13) tiker = kinge7[ft];
  if(tictoc == 21) tiker = kinge6[ft];
  if(tictoc == 29) tiker = kinge5[ft];
  if(tictoc == 37) tiker = kinge4[ft];
  if(tictoc == 45) tiker = kinge3[ft];
  if(tictoc == 53) tiker = kinge2[ft];
  if(tictoc == 61) tiker = kinge1[ft];

  if(tictoc == 4) tiker = kingd8[ft];
  if(tictoc == 12) tiker = kingd7[ft];
  if(tictoc == 20) tiker = kingd6[ft];
  if(tictoc == 28) tiker = kingd5[ft];
  if(tictoc == 36) tiker = kingd4[ft];
  if(tictoc == 44) tiker = kingd3[ft];
  if(tictoc == 52) tiker = kingd2[ft];
  if(tictoc == 60) tiker = kingd1[ft];

  if(tictoc == 3) tiker = kingc8[ft];
  if(tictoc == 11) tiker = kingc7[ft];
  if(tictoc == 19) tiker = kingc6[ft];
  if(tictoc == 27) tiker = kingc5[ft];
  if(tictoc == 35) tiker = kingc4[ft];
  if(tictoc == 43) tiker = kingc3[ft];
  if(tictoc == 51) tiker = kingc2[ft];
  if(tictoc == 59) tiker = kingc1[ft];

  if(tictoc == 2) tiker = kingb8[ft];
  if(tictoc == 10) tiker = kingb7[ft];
  if(tictoc == 18) tiker = kingb6[ft];
  if(tictoc == 26) tiker = kingb5[ft];
  if(tictoc == 34) tiker = kingb4[ft];
  if(tictoc == 42) tiker = kingb3[ft];
  if(tictoc == 50) tiker = kingb2[ft];
  if(tictoc == 58) tiker = kingb1[ft];

  if(tictoc == 1) tiker = kinga8[ft];
  if(tictoc == 9) tiker = kinga7[ft];
  if(tictoc == 17) tiker = kinga6[ft];
  if(tictoc == 57) tiker = kinga1[ft];
  if(tictoc == 49) tiker = kinga2[ft];
  if(tictoc == 41) tiker = kinga3[ft];
  if(tictoc == 33) tiker = kinga4[ft];
  if(tictoc == 25) tiker = kinga5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;



  if (brd[0].boardval[tictoc] == 5000) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].attackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }
int kt = 0;
kt = ct;
brd[0].movelist[ct] = 0;
brd[0].movelist[ct+1] = 0;
//brd[0].movelist[ct+2] = 0;
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// black

//ct = 250;
brd[0].movelist[ct] = 0;
brd[0].movelist[ct+1] = 0;
brd[0].movelist[ct+2] = 0;
/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

//pawns//

//h7-h1
if(brd[0].boardval[56] == 99){
brd[0].battackpos[63] = 1;

}


if(brd[0].boardval[48] == 99){
brd[0].battackpos[55] = 1;

}


if(brd[0].boardval[40] == 99){
brd[0].battackpos[47] = 1;

}


if(brd[0].boardval[32] == 99){
brd[0].battackpos[39] = 1;

}


if(brd[0].boardval[24] == 99){
brd[0].battackpos[31] = 1;

}


if(brd[0].boardval[16] == 99){
brd[0].battackpos[23] = 1;

}


//g7-g1
if(brd[0].boardval[55] == 99){
brd[0].battackpos[62] = 1;
brd[0].battackpos[64] = 1;

}


if(brd[0].boardval[47] == 99){
brd[0].battackpos[54] = 1;
brd[0].battackpos[56] = 1;

}
/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

if(brd[0].boardval[39] == 99){
brd[0].battackpos[46] = 1;
brd[0].battackpos[48] = 1;

}


if(brd[0].boardval[31] == 99){
brd[0].battackpos[38] = 1;
brd[0].battackpos[40] = 1;

}


if(brd[0].boardval[23] == 99){
brd[0].battackpos[30] = 1;
brd[0].battackpos[32] = 1;

}


if(brd[0].boardval[15] == 99){
brd[0].battackpos[22] = 1;
brd[0].battackpos[24] = 1;

}

//f7-f1
if(brd[0].boardval[54] == 99){
brd[0].battackpos[61] = 1;
brd[0].battackpos[63] = 1;

}


if(brd[0].boardval[46] == 99){
brd[0].battackpos[53] = 1;
brd[0].battackpos[55] = 1;

}


if(brd[0].boardval[38] == 99){
brd[0].battackpos[45] = 1;
brd[0].battackpos[47] = 1;

}
/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

if(brd[0].boardval[30] == 99){
brd[0].battackpos[37] = 1;
brd[0].battackpos[39] = 1;

}


if(brd[0].boardval[22] == 99){
brd[0].battackpos[29] = 1;
brd[0].battackpos[31] = 1;

}


if(brd[0].boardval[14] == 99){
brd[0].battackpos[21] = 1;
brd[0].battackpos[23] = 1;

}

//e7-e1
if(brd[0].boardval[53] == 99){
brd[0].battackpos[60] = 1;
brd[0].battackpos[62] = 1;

}


if(brd[0].boardval[45] == 99){
brd[0].battackpos[52] = 1;
brd[0].battackpos[54] = 1;

}

/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/
if(brd[0].boardval[37] == 99){
brd[0].battackpos[44] = 1;
brd[0].battackpos[46] = 1;

}


if(brd[0].boardval[29] == 99){
brd[0].battackpos[36] = 1;
brd[0].battackpos[38] = 1;

}


if(brd[0].boardval[21] == 99){
brd[0].battackpos[28] = 1;
brd[0].battackpos[30] = 1;

}


if(brd[0].boardval[13] == 99){
brd[0].battackpos[20] = 1;
brd[0].battackpos[22] = 1;

}

//d7-d1
if(brd[0].boardval[52] == 99){
brd[0].battackpos[59] = 1;
brd[0].battackpos[61] = 1;

}


if(brd[0].boardval[44] == 99){
brd[0].battackpos[51] = 1;
brd[0].battackpos[53] = 1;

}


if(brd[0].boardval[36] == 99){
brd[0].battackpos[43] = 1;
brd[0].battackpos[45] = 1;

}


if(brd[0].boardval[28] == 99){
brd[0].battackpos[35] = 1;
brd[0].battackpos[37] = 1;

}


if(brd[0].boardval[20] == 99){
brd[0].battackpos[27] = 1;
brd[0].battackpos[29] = 1;

}


if(brd[0].boardval[12] == 99){
brd[0].battackpos[19] = 1;
brd[0].battackpos[21] = 1;

}

//c7-c1
if(brd[0].boardval[51] == 99){
brd[0].battackpos[58] = 1;
brd[0].battackpos[60] = 1;

}


if(brd[0].boardval[43] == 99){
brd[0].battackpos[50] = 1;
brd[0].battackpos[52] = 1;

}


if(brd[0].boardval[35] == 99){
brd[0].battackpos[42] = 1;
brd[0].battackpos[44] = 1;

}

if(brd[0].boardval[27] == 99){
brd[0].battackpos[34] = 1;
brd[0].battackpos[36] = 1;

}


if(brd[0].boardval[19] == 99){
brd[0].battackpos[26] = 1;
brd[0].battackpos[28] = 1;

}



if(brd[0].boardval[11] == 99){
brd[0].battackpos[18] = 1;
brd[0].battackpos[20] = 1;

}

//b7-b1
if(brd[0].boardval[50] == 99){
brd[0].battackpos[59] = 1;
brd[0].battackpos[57] = 1;

}


if(brd[0].boardval[42] == 99){
brd[0].battackpos[51] = 1;
brd[0].battackpos[49] = 1;

}


if(brd[0].boardval[34] == 99){
brd[0].battackpos[43] = 1;
brd[0].battackpos[41] = 1;

}


if(brd[0].boardval[26] == 99){
brd[0].battackpos[35] = 1;
brd[0].battackpos[33] = 1;

}


if(brd[0].boardval[18] == 99){
brd[0].battackpos[25] = 1;
brd[0].battackpos[27] = 1;

}



if(brd[0].boardval[10] == 99){
brd[0].battackpos[19] = 1;
brd[0].battackpos[17] = 1;

}


//a7-a1
if(brd[0].boardval[49] == 99){
brd[0].battackpos[58] = 1;

}


if(brd[0].boardval[41] == 99){
brd[0].battackpos[50] = 1;

}


if(brd[0].boardval[33] == 99){
brd[0].battackpos[42] = 1;

}


if(brd[0].boardval[25] == 99){
brd[0].battackpos[34] = 1;

}



if(brd[0].boardval[17] == 99){
brd[0].battackpos[26] = 1;

}



if(brd[0].boardval[9] == 99){
brd[0].battackpos[18] = 1;

}

///////
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = rookh8[ft];
  if(tictoc == 16) tiker = rookh7[ft];
  if(tictoc == 24) tiker = rookh6[ft];
  if(tictoc == 32) tiker = rookh5[ft];
  if(tictoc == 40) tiker = rookh4[ft];
  if(tictoc == 48) tiker = rookh3[ft];
  if(tictoc == 56) tiker = rookh2[ft];
  if(tictoc == 64) tiker = rookh1[ft];

  if(tictoc == 7) tiker = rookg8[ft];
  if(tictoc == 15) tiker = rookg7[ft];
  if(tictoc == 23) tiker = rookg6[ft];
  if(tictoc == 31) tiker = rookg5[ft];
  if(tictoc == 39) tiker = rookg4[ft];
  if(tictoc == 47) tiker = rookg3[ft];
  if(tictoc == 55) tiker = rookg2[ft];
  if(tictoc == 63) tiker = rookg1[ft];

  if(tictoc == 6) tiker = rookf8[ft];
  if(tictoc == 14) tiker = rookf7[ft];
  if(tictoc == 22) tiker = rookf6[ft];
  if(tictoc == 30) tiker = rookf5[ft];
  if(tictoc == 38) tiker = rookf4[ft];
  if(tictoc == 46) tiker = rookf3[ft];
  if(tictoc == 54) tiker = rookf2[ft];
  if(tictoc == 62) tiker = rookf1[ft];

  if(tictoc == 5) tiker = rooke8[ft];
  if(tictoc == 13) tiker = rooke7[ft];
  if(tictoc == 21) tiker = rooke6[ft];
  if(tictoc == 29) tiker = rooke5[ft];
  if(tictoc == 37) tiker = rooke4[ft];
  if(tictoc == 45) tiker = rooke3[ft];
  if(tictoc == 53) tiker = rooke2[ft];
  if(tictoc == 61) tiker = rooke1[ft];

  if(tictoc == 4) tiker = rookd8[ft];
  if(tictoc == 12) tiker = rookd7[ft];
  if(tictoc == 20) tiker = rookd6[ft];
  if(tictoc == 28) tiker = rookd5[ft];
  if(tictoc == 36) tiker = rookd4[ft];
  if(tictoc == 44) tiker = rookd3[ft];
  if(tictoc == 52) tiker = rookd2[ft];
  if(tictoc == 60) tiker = rookd1[ft];

  if(tictoc == 3) tiker = rookc8[ft];
  if(tictoc == 11) tiker = rookc7[ft];
  if(tictoc == 19) tiker = rookc6[ft];
  if(tictoc == 27) tiker = rookc5[ft];
  if(tictoc == 35) tiker = rookc4[ft];
  if(tictoc == 43) tiker = rookc3[ft];
  if(tictoc == 51) tiker = rookc2[ft];
  if(tictoc == 59) tiker = rookc1[ft];

  if(tictoc == 2) tiker = rookb8[ft];
  if(tictoc == 10) tiker = rookb7[ft];
  if(tictoc == 18) tiker = rookb6[ft];
  if(tictoc == 26) tiker = rookb5[ft];
  if(tictoc == 34) tiker = rookb4[ft];
  if(tictoc == 42) tiker = rookb3[ft];
  if(tictoc == 50) tiker = rookb2[ft];
  if(tictoc == 58) tiker = rookb1[ft];

  if(tictoc == 1) tiker = rooka8[ft];
  if(tictoc == 9) tiker = rooka7[ft];
  if(tictoc == 17) tiker = rooka6[ft];
  if(tictoc == 57) tiker = rooka1[ft];
  if(tictoc == 49) tiker = rooka2[ft];
  if(tictoc == 41) tiker = rooka3[ft];
  if(tictoc == 33) tiker = rooka4[ft];
  if(tictoc == 25) tiker = rooka5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;

  if (brd[0].boardval[tictoc] == 499) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){

    brd[0].battackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){

    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }
/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = bishh8[ft];
  if(tictoc == 16) tiker = bishh7[ft];
  if(tictoc == 24) tiker = bishh6[ft];
  if(tictoc == 32) tiker = bishh5[ft];
  if(tictoc == 40) tiker = bishh4[ft];
  if(tictoc == 48) tiker = bishh3[ft];
  if(tictoc == 56) tiker = bishh2[ft];
  if(tictoc == 64) tiker = bishh1[ft];

  if(tictoc == 7) tiker = bishg8[ft];
  if(tictoc == 15) tiker = bishg7[ft];
  if(tictoc == 23) tiker = bishg6[ft];
  if(tictoc == 31) tiker = bishg5[ft];
  if(tictoc == 39) tiker = bishg4[ft];
  if(tictoc == 47) tiker = bishg3[ft];
  if(tictoc == 55) tiker = bishg2[ft];
  if(tictoc == 63) tiker = bishg1[ft];

  if(tictoc == 6) tiker = bishf8[ft];
  if(tictoc == 14) tiker = bishf7[ft];
  if(tictoc == 22) tiker = bishf6[ft];
  if(tictoc == 30) tiker = bishf5[ft];
  if(tictoc == 38) tiker = bishf4[ft];
  if(tictoc == 46) tiker = bishf3[ft];
  if(tictoc == 54) tiker = bishf2[ft];
  if(tictoc == 62) tiker = bishf1[ft];

  if(tictoc == 5) tiker = bishe8[ft];
  if(tictoc == 13) tiker = bishe7[ft];
  if(tictoc == 21) tiker = bishe6[ft];
  if(tictoc == 29) tiker = bishe5[ft];
  if(tictoc == 37) tiker = bishe4[ft];
  if(tictoc == 45) tiker = bishe3[ft];
  if(tictoc == 53) tiker = bishe2[ft];
  if(tictoc == 61) tiker = bishe1[ft];

  if(tictoc == 4) tiker = bishd8[ft];
  if(tictoc == 12) tiker = bishd7[ft];
  if(tictoc == 20) tiker = bishd6[ft];
  if(tictoc == 28) tiker = bishd5[ft];
  if(tictoc == 36) tiker = bishd4[ft];
  if(tictoc == 44) tiker = bishd3[ft];
  if(tictoc == 52) tiker = bishd2[ft];
  if(tictoc == 60) tiker = bishd1[ft];

  if(tictoc == 3) tiker = bishc8[ft];
  if(tictoc == 11) tiker = bishc7[ft];
  if(tictoc == 19) tiker = bishc6[ft];
  if(tictoc == 27) tiker = bishc5[ft];
  if(tictoc == 35) tiker = bishc4[ft];
  if(tictoc == 43) tiker = bishc3[ft];
  if(tictoc == 51) tiker = bishc2[ft];
  if(tictoc == 59) tiker = bishc1[ft];

  if(tictoc == 2) tiker = bishb8[ft];
  if(tictoc == 10) tiker = bishb7[ft];
  if(tictoc == 18) tiker = bishb6[ft];
  if(tictoc == 26) tiker = bishb5[ft];
  if(tictoc == 34) tiker = bishb4[ft];
  if(tictoc == 42) tiker = bishb3[ft];
  if(tictoc == 50) tiker = bishb2[ft];
  if(tictoc == 58) tiker = bishb1[ft];

  if(tictoc == 1) tiker = bisha8[ft];
  if(tictoc == 9) tiker = bisha7[ft];
  if(tictoc == 17) tiker = bisha6[ft];
  if(tictoc == 57) tiker = bisha1[ft];
  if(tictoc == 49) tiker = bisha2[ft];
  if(tictoc == 41) tiker = bisha3[ft];
  if(tictoc == 33) tiker = bisha4[ft];
  if(tictoc == 25) tiker = bisha5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;


  if (brd[0].boardval[tictoc] == 324) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){

    brd[0].battackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){

    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }
   /*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = niteh8[ft];
  if(tictoc == 16) tiker = niteh7[ft];
  if(tictoc == 24) tiker = niteh6[ft];
  if(tictoc == 32) tiker = niteh5[ft];
  if(tictoc == 40) tiker = niteh4[ft];
  if(tictoc == 48) tiker = niteh3[ft];
  if(tictoc == 56) tiker = niteh2[ft];
  if(tictoc == 64) tiker = niteh1[ft];

  if(tictoc == 7) tiker = niteg8[ft];
  if(tictoc == 15) tiker = niteg7[ft];
  if(tictoc == 23) tiker = niteg6[ft];
  if(tictoc == 31) tiker = niteg5[ft];
  if(tictoc == 39) tiker = niteg4[ft];
  if(tictoc == 47) tiker = niteg3[ft];
  if(tictoc == 55) tiker = niteg2[ft];
  if(tictoc == 63) tiker = niteg1[ft];

  if(tictoc == 6) tiker = nitef8[ft];
  if(tictoc == 14) tiker = nitef7[ft];
  if(tictoc == 22) tiker = nitef6[ft];
  if(tictoc == 30) tiker = nitef5[ft];
  if(tictoc == 38) tiker = nitef4[ft];
  if(tictoc == 46) tiker = nitef3[ft];
  if(tictoc == 54) tiker = nitef2[ft];
  if(tictoc == 62) tiker = nitef1[ft];

  if(tictoc == 5) tiker = nitee8[ft];
  if(tictoc == 13) tiker = nitee7[ft];
  if(tictoc == 21) tiker = nitee6[ft];
  if(tictoc == 29) tiker = nitee5[ft];
  if(tictoc == 37) tiker = nitee4[ft];
  if(tictoc == 45) tiker = nitee3[ft];
  if(tictoc == 53) tiker = nitee2[ft];
  if(tictoc == 61) tiker = nitee1[ft];

  if(tictoc == 4) tiker = nited8[ft];
  if(tictoc == 12) tiker = nited7[ft];
  if(tictoc == 20) tiker = nited6[ft];
  if(tictoc == 28) tiker = nited5[ft];
  if(tictoc == 36) tiker = nited4[ft];
  if(tictoc == 44) tiker = nited3[ft];
  if(tictoc == 52) tiker = nited2[ft];
  if(tictoc == 60) tiker = nited1[ft];

  if(tictoc == 3) tiker = nitec8[ft];
  if(tictoc == 11) tiker = nitec7[ft];
  if(tictoc == 19) tiker = nitec6[ft];
  if(tictoc == 27) tiker = nitec5[ft];
  if(tictoc == 35) tiker = nitec4[ft];
  if(tictoc == 43) tiker = nitec3[ft];
  if(tictoc == 51) tiker = nitec2[ft];
  if(tictoc == 59) tiker = nitec1[ft];

  if(tictoc == 2) tiker = niteb8[ft];
  if(tictoc == 10) tiker = niteb7[ft];
  if(tictoc == 18) tiker = niteb6[ft];
  if(tictoc == 26) tiker = niteb5[ft];
  if(tictoc == 34) tiker = niteb4[ft];
  if(tictoc == 42) tiker = niteb3[ft];
  if(tictoc == 50) tiker = niteb2[ft];
  if(tictoc == 58) tiker = niteb1[ft];

  if(tictoc == 1) tiker = nitea8[ft];
  if(tictoc == 9) tiker = nitea7[ft];
  if(tictoc == 17) tiker = nitea6[ft];
  if(tictoc == 57) tiker = nitea1[ft];
  if(tictoc == 49) tiker = nitea2[ft];
  if(tictoc == 41) tiker = nitea3[ft];
  if(tictoc == 33) tiker = nitea4[ft];
  if(tictoc == 25) tiker = nitea5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;


  if (brd[0].boardval[tictoc] == 299) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){

    brd[0].battackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){

    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }
       /*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {
 if(tictoc == 8) tiker = bishh8[ft];
  if(tictoc == 16) tiker = bishh7[ft];
  if(tictoc == 24) tiker = bishh6[ft];
  if(tictoc == 32) tiker = bishh5[ft];
  if(tictoc == 40) tiker = bishh4[ft];
  if(tictoc == 48) tiker = bishh3[ft];
  if(tictoc == 56) tiker = bishh2[ft];
  if(tictoc == 64) tiker = bishh1[ft];

  if(tictoc == 7) tiker = bishg8[ft];
  if(tictoc == 15) tiker = bishg7[ft];
  if(tictoc == 23) tiker = bishg6[ft];
  if(tictoc == 31) tiker = bishg5[ft];
  if(tictoc == 39) tiker = bishg4[ft];
  if(tictoc == 47) tiker = bishg3[ft];
  if(tictoc == 55) tiker = bishg2[ft];
  if(tictoc == 63) tiker = bishg1[ft];

  if(tictoc == 6) tiker = bishf8[ft];
  if(tictoc == 14) tiker = bishf7[ft];
  if(tictoc == 22) tiker = bishf6[ft];
  if(tictoc == 30) tiker = bishf5[ft];
  if(tictoc == 38) tiker = bishf4[ft];
  if(tictoc == 46) tiker = bishf3[ft];
  if(tictoc == 54) tiker = bishf2[ft];
  if(tictoc == 62) tiker = bishf1[ft];

  if(tictoc == 5) tiker = bishe8[ft];
  if(tictoc == 13) tiker = bishe7[ft];
  if(tictoc == 21) tiker = bishe6[ft];
  if(tictoc == 29) tiker = bishe5[ft];
  if(tictoc == 37) tiker = bishe4[ft];
  if(tictoc == 45) tiker = bishe3[ft];
  if(tictoc == 53) tiker = bishe2[ft];
  if(tictoc == 61) tiker = bishe1[ft];

  if(tictoc == 4) tiker = bishd8[ft];
  if(tictoc == 12) tiker = bishd7[ft];
  if(tictoc == 20) tiker = bishd6[ft];
  if(tictoc == 28) tiker = bishd5[ft];
  if(tictoc == 36) tiker = bishd4[ft];
  if(tictoc == 44) tiker = bishd3[ft];
  if(tictoc == 52) tiker = bishd2[ft];
  if(tictoc == 60) tiker = bishd1[ft];

  if(tictoc == 3) tiker = bishc8[ft];
  if(tictoc == 11) tiker = bishc7[ft];
  if(tictoc == 19) tiker = bishc6[ft];
  if(tictoc == 27) tiker = bishc5[ft];
  if(tictoc == 35) tiker = bishc4[ft];
  if(tictoc == 43) tiker = bishc3[ft];
  if(tictoc == 51) tiker = bishc2[ft];
  if(tictoc == 59) tiker = bishc1[ft];

  if(tictoc == 2) tiker = bishb8[ft];
  if(tictoc == 10) tiker = bishb7[ft];
  if(tictoc == 18) tiker = bishb6[ft];
  if(tictoc == 26) tiker = bishb5[ft];
  if(tictoc == 34) tiker = bishb4[ft];
  if(tictoc == 42) tiker = bishb3[ft];
  if(tictoc == 50) tiker = bishb2[ft];
  if(tictoc == 58) tiker = bishb1[ft];

  if(tictoc == 1) tiker = bisha8[ft];
  if(tictoc == 9) tiker = bisha7[ft];
  if(tictoc == 17) tiker = bisha6[ft];
  if(tictoc == 57) tiker = bisha1[ft];
  if(tictoc == 49) tiker = bisha2[ft];
  if(tictoc == 41) tiker = bisha3[ft];
  if(tictoc == 33) tiker = bisha4[ft];
  if(tictoc == 25) tiker = bisha5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;



  if (brd[0].boardval[tictoc] == 949) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){

    brd[0].battackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){

    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }

/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = rookh8[ft];
  if(tictoc == 16) tiker = rookh7[ft];
  if(tictoc == 24) tiker = rookh6[ft];
  if(tictoc == 32) tiker = rookh5[ft];
  if(tictoc == 40) tiker = rookh4[ft];
  if(tictoc == 48) tiker = rookh3[ft];
  if(tictoc == 56) tiker = rookh2[ft];
  if(tictoc == 64) tiker = rookh1[ft];

  if(tictoc == 7) tiker = rookg8[ft];
  if(tictoc == 15) tiker = rookg7[ft];
  if(tictoc == 23) tiker = rookg6[ft];
  if(tictoc == 31) tiker = rookg5[ft];
  if(tictoc == 39) tiker = rookg4[ft];
  if(tictoc == 47) tiker = rookg3[ft];
  if(tictoc == 55) tiker = rookg2[ft];
  if(tictoc == 63) tiker = rookg1[ft];

  if(tictoc == 6) tiker = rookf8[ft];
  if(tictoc == 14) tiker = rookf7[ft];
  if(tictoc == 22) tiker = rookf6[ft];
  if(tictoc == 30) tiker = rookf5[ft];
  if(tictoc == 38) tiker = rookf4[ft];
  if(tictoc == 46) tiker = rookf3[ft];
  if(tictoc == 54) tiker = rookf2[ft];
  if(tictoc == 62) tiker = rookf1[ft];

  if(tictoc == 5) tiker = rooke8[ft];
  if(tictoc == 13) tiker = rooke7[ft];
  if(tictoc == 21) tiker = rooke6[ft];
  if(tictoc == 29) tiker = rooke5[ft];
  if(tictoc == 37) tiker = rooke4[ft];
  if(tictoc == 45) tiker = rooke3[ft];
  if(tictoc == 53) tiker = rooke2[ft];
  if(tictoc == 61) tiker = rooke1[ft];

  if(tictoc == 4) tiker = rookd8[ft];
  if(tictoc == 12) tiker = rookd7[ft];
  if(tictoc == 20) tiker = rookd6[ft];
  if(tictoc == 28) tiker = rookd5[ft];
  if(tictoc == 36) tiker = rookd4[ft];
  if(tictoc == 44) tiker = rookd3[ft];
  if(tictoc == 52) tiker = rookd2[ft];
  if(tictoc == 60) tiker = rookd1[ft];

  if(tictoc == 3) tiker = rookc8[ft];
  if(tictoc == 11) tiker = rookc7[ft];
  if(tictoc == 19) tiker = rookc6[ft];
  if(tictoc == 27) tiker = rookc5[ft];
  if(tictoc == 35) tiker = rookc4[ft];
  if(tictoc == 43) tiker = rookc3[ft];
  if(tictoc == 51) tiker = rookc2[ft];
  if(tictoc == 59) tiker = rookc1[ft];

  if(tictoc == 2) tiker = rookb8[ft];
  if(tictoc == 10) tiker = rookb7[ft];
  if(tictoc == 18) tiker = rookb6[ft];
  if(tictoc == 26) tiker = rookb5[ft];
  if(tictoc == 34) tiker = rookb4[ft];
  if(tictoc == 42) tiker = rookb3[ft];
  if(tictoc == 50) tiker = rookb2[ft];
  if(tictoc == 58) tiker = rookb1[ft];

  if(tictoc == 1) tiker = rooka8[ft];
  if(tictoc == 9) tiker = rooka7[ft];
  if(tictoc == 17) tiker = rooka6[ft];
  if(tictoc == 57) tiker = rooka1[ft];
  if(tictoc == 49) tiker = rooka2[ft];
  if(tictoc == 41) tiker = rooka3[ft];
  if(tictoc == 33) tiker = rooka4[ft];
  if(tictoc == 25) tiker = rooka5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;

  if (brd[0].boardval[tictoc] == 949) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){

    brd[0].battackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){

    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }

/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = kingh8[ft];
  if(tictoc == 16) tiker = kingh7[ft];
  if(tictoc == 24) tiker = kingh6[ft];
  if(tictoc == 32) tiker = kingh5[ft];
  if(tictoc == 40) tiker = kingh4[ft];
  if(tictoc == 48) tiker = kingh3[ft];
  if(tictoc == 56) tiker = kingh2[ft];
  if(tictoc == 64) tiker = kingh1[ft];

  if(tictoc == 7) tiker = kingg8[ft];
  if(tictoc == 15) tiker = kingg7[ft];
  if(tictoc == 23) tiker = kingg6[ft];
  if(tictoc == 31) tiker = kingg5[ft];
  if(tictoc == 39) tiker = kingg4[ft];
  if(tictoc == 47) tiker = kingg3[ft];
  if(tictoc == 55) tiker = kingg2[ft];
  if(tictoc == 63) tiker = kingg1[ft];

  if(tictoc == 6) tiker = kingf8[ft];
  if(tictoc == 14) tiker = kingf7[ft];
  if(tictoc == 22) tiker = kingf6[ft];
  if(tictoc == 30) tiker = kingf5[ft];
  if(tictoc == 38) tiker = kingf4[ft];
  if(tictoc == 46) tiker = kingf3[ft];
  if(tictoc == 54) tiker = kingf2[ft];
  if(tictoc == 62) tiker = kingf1[ft];

  if(tictoc == 5) tiker = kinge8[ft];
  if(tictoc == 13) tiker = kinge7[ft];
  if(tictoc == 21) tiker = kinge6[ft];
  if(tictoc == 29) tiker = kinge5[ft];
  if(tictoc == 37) tiker = kinge4[ft];
  if(tictoc == 45) tiker = kinge3[ft];
  if(tictoc == 53) tiker = kinge2[ft];
  if(tictoc == 61) tiker = kinge1[ft];

  if(tictoc == 4) tiker = kingd8[ft];
  if(tictoc == 12) tiker = kingd7[ft];
  if(tictoc == 20) tiker = kingd6[ft];
  if(tictoc == 28) tiker = kingd5[ft];
  if(tictoc == 36) tiker = kingd4[ft];
  if(tictoc == 44) tiker = kingd3[ft];
  if(tictoc == 52) tiker = kingd2[ft];
  if(tictoc == 60) tiker = kingd1[ft];

  if(tictoc == 3) tiker = kingc8[ft];
  if(tictoc == 11) tiker = kingc7[ft];
  if(tictoc == 19) tiker = kingc6[ft];
  if(tictoc == 27) tiker = kingc5[ft];
  if(tictoc == 35) tiker = kingc4[ft];
  if(tictoc == 43) tiker = kingc3[ft];
  if(tictoc == 51) tiker = kingc2[ft];
  if(tictoc == 59) tiker = kingc1[ft];

  if(tictoc == 2) tiker = kingb8[ft];
  if(tictoc == 10) tiker = kingb7[ft];
  if(tictoc == 18) tiker = kingb6[ft];
  if(tictoc == 26) tiker = kingb5[ft];
  if(tictoc == 34) tiker = kingb4[ft];
  if(tictoc == 42) tiker = kingb3[ft];
  if(tictoc == 50) tiker = kingb2[ft];
  if(tictoc == 58) tiker = kingb1[ft];

  if(tictoc == 1) tiker = kinga8[ft];
  if(tictoc == 9) tiker = kinga7[ft];
  if(tictoc == 17) tiker = kinga6[ft];
  if(tictoc == 57) tiker = kinga1[ft];
  if(tictoc == 49) tiker = kinga2[ft];
  if(tictoc == 41) tiker = kinga3[ft];
  if(tictoc == 33) tiker = kinga4[ft];
  if(tictoc == 25) tiker = kinga5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;



  if (brd[0].boardval[tictoc] == 4999) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){

    brd[0].battackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){

    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }

/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

// castleing


// castleing

if(brd[0].castlerule[0] == 1) {
  if(brd[0].boardval[61] == 5000) {
    if(brd[0].boardval[64] == 500)  {
      if(brd[0].boardval[63] == 0)     {
         if(brd[0].boardval[62] == 0)     {
         if(brd[0].battackpos[61] == 0)   {
         if(brd[0].battackpos[62] == 0)   {
         if(brd[0].battackpos[63] == 0)   {
           brd[0].movelist[ct] = 61;
           brd[0].movelist[ct+1] = 63;
           ct = ct + 2;
}}}}}}}}
if(brd[0].castlerule[1] == 1) {
  if(brd[0].boardval[61] == 5000) {
    if(brd[0].boardval[57] == 500)  {
      if(brd[0].boardval[58] == 0)     {
         if(brd[0].boardval[59] == 0)     {
            if(brd[0].boardval[60] == 0)     {
         if(brd[0].battackpos[61] == 0)   {
         if(brd[0].battackpos[60] == 0)   {
         if(brd[0].battackpos[59] == 0)   {
           brd[0].movelist[ct] = 61;
           brd[0].movelist[ct+1] = 59;
           ct = ct + 2;
}}}}}}}}}

// null end move list
//brd[0].movelist[kt] = 0;
//brd[0].movelist[kt+1] = 0;
//brd[0].movelist[kt+2] = 0;
brd[0].movelist[ct] = 0;
brd[0].movelist[ct+1] = 0;
//brd[0].movelist[ct+2] = 0;
}

int bmovegen(int value1,bord brd[1])
{

    //for (int f =0;f<500;f++){
    //brd[0].movelist[f] = 0;
    //}
    brd[0].movelist[0] = 0;
    brd[0].movelist[1] = 0;
    brd[0].movelist[2] = 0;
    for (int f =0;f<65;f++){
    brd[0].attackpos[f] = 0;
    }
    for (int f =0;f<65;f++){
    brd[0].battackpos[f] = 0;
    }
/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

//pawns//


//////////////////////
int ct = 0;

//h2-h8
if(brd[0].boardval[16] == 100){
brd[0].attackpos[7] = 1;

}

if(brd[0].boardval[24] == 100){
brd[0].attackpos[15] = 1;

}

if(brd[0].boardval[32] == 100){
brd[0].attackpos[23] = 1;

}

if(brd[0].boardval[40] == 100){
brd[0].attackpos[31] = 1;

}

if(brd[0].boardval[48] == 100){
brd[0].attackpos[39] = 1;

}


if(brd[0].boardval[56] == 100){
brd[0].attackpos[47] = 1;

}

//g2-g8
if(brd[0].boardval[15] == 100){
brd[0].attackpos[8] = 1;
brd[0].attackpos[6] = 1;

}


if(brd[0].boardval[23] == 100){
brd[0].attackpos[16] = 1;
brd[0].attackpos[14] = 1;

}


if(brd[0].boardval[31] == 100){
brd[0].attackpos[24] = 1;
brd[0].attackpos[22] = 1;

}


if(brd[0].boardval[39] == 100){
brd[0].attackpos[30] = 1;
brd[0].attackpos[32] = 1;

}


if(brd[0].boardval[47] == 100){
brd[0].attackpos[40] = 1;
brd[0].attackpos[38] = 1;

}


if(brd[0].boardval[55] == 100){
brd[0].attackpos[46] = 1;
brd[0].attackpos[48] = 1;

}

//f2-f4
if(brd[0].boardval[14] == 100){
brd[0].attackpos[5] = 1;
brd[0].attackpos[7] = 1;

}


if(brd[0].boardval[22] == 100){
brd[0].attackpos[13] = 1;
brd[0].attackpos[15] = 1;

}


if(brd[0].boardval[30] == 100){
brd[0].attackpos[23] = 1;
brd[0].attackpos[21] = 1;

}


if(brd[0].boardval[38] == 100){
brd[0].attackpos[31] = 1;
brd[0].attackpos[29] = 1;

}


if(brd[0].boardval[46] == 100){
brd[0].attackpos[37] = 1;
brd[0].attackpos[39] = 1;

}


if(brd[0].boardval[54] == 100){
brd[0].attackpos[47] = 1;
brd[0].attackpos[45] = 1;

}

//e2-e8
if(brd[0].boardval[13] == 100){
brd[0].attackpos[6] = 1;
brd[0].attackpos[4] = 1;

}

if(brd[0].boardval[21] == 100){
brd[0].attackpos[14] = 1;
brd[0].attackpos[12] = 1;

}

if(brd[0].boardval[29] == 100){
brd[0].attackpos[20] = 1;
brd[0].attackpos[22] = 1;

}

if(brd[0].boardval[37] == 100){
brd[0].attackpos[30] = 1;
brd[0].attackpos[28] = 1;

}

if(brd[0].boardval[45] == 100){
brd[0].attackpos[38] = 1;
brd[0].attackpos[36] = 1;

}

if(brd[0].boardval[53] == 100){
brd[0].attackpos[44] = 1;
brd[0].attackpos[46] = 1;

}

//d2-d8
if(brd[0].boardval[12] == 100){
brd[0].attackpos[3] = 1;
brd[0].attackpos[5] = 1;

}

if(brd[0].boardval[20] == 100){
brd[0].attackpos[13] = 1;
brd[0].attackpos[11] = 1;

}

if(brd[0].boardval[28] == 100){
brd[0].attackpos[21] = 1;
brd[0].attackpos[19] = 1;

}

if(brd[0].boardval[36] == 100){
brd[0].attackpos[29] = 1;
brd[0].attackpos[27] = 1;

}

if(brd[0].boardval[44] == 100){
brd[0].attackpos[35] = 1;
brd[0].attackpos[37] = 1;

}

if(brd[0].boardval[52] == 100){
brd[0].attackpos[43] = 1;
brd[0].attackpos[45] = 1;

}

//c2-c8
if(brd[0].boardval[11] == 100){
brd[0].attackpos[4] = 1;
brd[0].attackpos[2] = 1;

}

if(brd[0].boardval[19] == 100){
brd[0].attackpos[12] = 1;
brd[0].attackpos[10] = 1;

}

if(brd[0].boardval[27] == 100){
brd[0].attackpos[18] = 1;
brd[0].attackpos[20] = 1;

}


if(brd[0].boardval[35] == 100){
brd[0].attackpos[28] = 1;
brd[0].attackpos[26] = 1;

}

if(brd[0].boardval[43] == 100){
brd[0].attackpos[36] = 1;
brd[0].attackpos[34] = 1;

}

if(brd[0].boardval[51] == 100){
brd[0].attackpos[44] = 1;
brd[0].attackpos[42] = 1;

}

//b2-b8
if(brd[0].boardval[10] == 100){
brd[0].attackpos[3] = 1;
brd[0].attackpos[1] = 1;

}


if(brd[0].boardval[18] == 100){
brd[0].attackpos[11] = 1;
brd[0].attackpos[9] = 1;

}

if(brd[0].boardval[26] == 100){
brd[0].attackpos[19] = 1;
brd[0].attackpos[17] = 1;

}


if(brd[0].boardval[34] == 100){
brd[0].attackpos[27] = 1;
brd[0].attackpos[25] = 1;

}

if(brd[0].boardval[42] == 100){
brd[0].attackpos[35] = 1;
brd[0].attackpos[33] = 1;

}

if(brd[0].boardval[50] == 100){
brd[0].attackpos[43] = 1;
brd[0].attackpos[41] = 1;

}

//a2-a8
if(brd[0].boardval[9] == 100){
brd[0].attackpos[2] = 1;

}
if(brd[0].boardval[17] == 100){
brd[0].attackpos[10] = 1;

}
if(brd[0].boardval[25] == 100){
brd[0].attackpos[18] = 1;

}

if(brd[0].boardval[33] == 100){
brd[0].attackpos[26] = 1;

}
if(brd[0].boardval[41] == 100){
brd[0].attackpos[34] = 1;

}
if(brd[0].boardval[49] == 100){
brd[0].attackpos[42] = 1;

}

/////////

 int temp = 0,stop = 0,tiker=0;
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = rookh8[ft];
  if(tictoc == 16) tiker = rookh7[ft];
  if(tictoc == 24) tiker = rookh6[ft];
  if(tictoc == 32) tiker = rookh5[ft];
  if(tictoc == 40) tiker = rookh4[ft];
  if(tictoc == 48) tiker = rookh3[ft];
  if(tictoc == 56) tiker = rookh2[ft];
  if(tictoc == 64) tiker = rookh1[ft];

  if(tictoc == 7) tiker = rookg8[ft];
  if(tictoc == 15) tiker = rookg7[ft];
  if(tictoc == 23) tiker = rookg6[ft];
  if(tictoc == 31) tiker = rookg5[ft];
  if(tictoc == 39) tiker = rookg4[ft];
  if(tictoc == 47) tiker = rookg3[ft];
  if(tictoc == 55) tiker = rookg2[ft];
  if(tictoc == 63) tiker = rookg1[ft];

  if(tictoc == 6) tiker = rookf8[ft];
  if(tictoc == 14) tiker = rookf7[ft];
  if(tictoc == 22) tiker = rookf6[ft];
  if(tictoc == 30) tiker = rookf5[ft];
  if(tictoc == 38) tiker = rookf4[ft];
  if(tictoc == 46) tiker = rookf3[ft];
  if(tictoc == 54) tiker = rookf2[ft];
  if(tictoc == 62) tiker = rookf1[ft];

  if(tictoc == 5) tiker = rooke8[ft];
  if(tictoc == 13) tiker = rooke7[ft];
  if(tictoc == 21) tiker = rooke6[ft];
  if(tictoc == 29) tiker = rooke5[ft];
  if(tictoc == 37) tiker = rooke4[ft];
  if(tictoc == 45) tiker = rooke3[ft];
  if(tictoc == 53) tiker = rooke2[ft];
  if(tictoc == 61) tiker = rooke1[ft];

  if(tictoc == 4) tiker = rookd8[ft];
  if(tictoc == 12) tiker = rookd7[ft];
  if(tictoc == 20) tiker = rookd6[ft];
  if(tictoc == 28) tiker = rookd5[ft];
  if(tictoc == 36) tiker = rookd4[ft];
  if(tictoc == 44) tiker = rookd3[ft];
  if(tictoc == 52) tiker = rookd2[ft];
  if(tictoc == 60) tiker = rookd1[ft];

  if(tictoc == 3) tiker = rookc8[ft];
  if(tictoc == 11) tiker = rookc7[ft];
  if(tictoc == 19) tiker = rookc6[ft];
  if(tictoc == 27) tiker = rookc5[ft];
  if(tictoc == 35) tiker = rookc4[ft];
  if(tictoc == 43) tiker = rookc3[ft];
  if(tictoc == 51) tiker = rookc2[ft];
  if(tictoc == 59) tiker = rookc1[ft];

  if(tictoc == 2) tiker = rookb8[ft];
  if(tictoc == 10) tiker = rookb7[ft];
  if(tictoc == 18) tiker = rookb6[ft];
  if(tictoc == 26) tiker = rookb5[ft];
  if(tictoc == 34) tiker = rookb4[ft];
  if(tictoc == 42) tiker = rookb3[ft];
  if(tictoc == 50) tiker = rookb2[ft];
  if(tictoc == 58) tiker = rookb1[ft];

  if(tictoc == 1) tiker = rooka8[ft];
  if(tictoc == 9) tiker = rooka7[ft];
  if(tictoc == 17) tiker = rooka6[ft];
  if(tictoc == 57) tiker = rooka1[ft];
  if(tictoc == 49) tiker = rooka2[ft];
  if(tictoc == 41) tiker = rooka3[ft];
  if(tictoc == 33) tiker = rooka4[ft];
  if(tictoc == 25) tiker = rooka5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;

  if (brd[0].boardval[tictoc] == 500) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){

    brd[0].attackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){

    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }
/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = bishh8[ft];
  if(tictoc == 16) tiker = bishh7[ft];
  if(tictoc == 24) tiker = bishh6[ft];
  if(tictoc == 32) tiker = bishh5[ft];
  if(tictoc == 40) tiker = bishh4[ft];
  if(tictoc == 48) tiker = bishh3[ft];
  if(tictoc == 56) tiker = bishh2[ft];
  if(tictoc == 64) tiker = bishh1[ft];

  if(tictoc == 7) tiker = bishg8[ft];
  if(tictoc == 15) tiker = bishg7[ft];
  if(tictoc == 23) tiker = bishg6[ft];
  if(tictoc == 31) tiker = bishg5[ft];
  if(tictoc == 39) tiker = bishg4[ft];
  if(tictoc == 47) tiker = bishg3[ft];
  if(tictoc == 55) tiker = bishg2[ft];
  if(tictoc == 63) tiker = bishg1[ft];

  if(tictoc == 6) tiker = bishf8[ft];
  if(tictoc == 14) tiker = bishf7[ft];
  if(tictoc == 22) tiker = bishf6[ft];
  if(tictoc == 30) tiker = bishf5[ft];
  if(tictoc == 38) tiker = bishf4[ft];
  if(tictoc == 46) tiker = bishf3[ft];
  if(tictoc == 54) tiker = bishf2[ft];
  if(tictoc == 62) tiker = bishf1[ft];

  if(tictoc == 5) tiker = bishe8[ft];
  if(tictoc == 13) tiker = bishe7[ft];
  if(tictoc == 21) tiker = bishe6[ft];
  if(tictoc == 29) tiker = bishe5[ft];
  if(tictoc == 37) tiker = bishe4[ft];
  if(tictoc == 45) tiker = bishe3[ft];
  if(tictoc == 53) tiker = bishe2[ft];
  if(tictoc == 61) tiker = bishe1[ft];

  if(tictoc == 4) tiker = bishd8[ft];
  if(tictoc == 12) tiker = bishd7[ft];
  if(tictoc == 20) tiker = bishd6[ft];
  if(tictoc == 28) tiker = bishd5[ft];
  if(tictoc == 36) tiker = bishd4[ft];
  if(tictoc == 44) tiker = bishd3[ft];
  if(tictoc == 52) tiker = bishd2[ft];
  if(tictoc == 60) tiker = bishd1[ft];

  if(tictoc == 3) tiker = bishc8[ft];
  if(tictoc == 11) tiker = bishc7[ft];
  if(tictoc == 19) tiker = bishc6[ft];
  if(tictoc == 27) tiker = bishc5[ft];
  if(tictoc == 35) tiker = bishc4[ft];
  if(tictoc == 43) tiker = bishc3[ft];
  if(tictoc == 51) tiker = bishc2[ft];
  if(tictoc == 59) tiker = bishc1[ft];

  if(tictoc == 2) tiker = bishb8[ft];
  if(tictoc == 10) tiker = bishb7[ft];
  if(tictoc == 18) tiker = bishb6[ft];
  if(tictoc == 26) tiker = bishb5[ft];
  if(tictoc == 34) tiker = bishb4[ft];
  if(tictoc == 42) tiker = bishb3[ft];
  if(tictoc == 50) tiker = bishb2[ft];
  if(tictoc == 58) tiker = bishb1[ft];

  if(tictoc == 1) tiker = bisha8[ft];
  if(tictoc == 9) tiker = bisha7[ft];
  if(tictoc == 17) tiker = bisha6[ft];
  if(tictoc == 57) tiker = bisha1[ft];
  if(tictoc == 49) tiker = bisha2[ft];
  if(tictoc == 41) tiker = bisha3[ft];
  if(tictoc == 33) tiker = bisha4[ft];
  if(tictoc == 25) tiker = bisha5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;


  if (brd[0].boardval[tictoc] == 325) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){

    brd[0].attackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){

    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }
   /*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = niteh8[ft];
  if(tictoc == 16) tiker = niteh7[ft];
  if(tictoc == 24) tiker = niteh6[ft];
  if(tictoc == 32) tiker = niteh5[ft];
  if(tictoc == 40) tiker = niteh4[ft];
  if(tictoc == 48) tiker = niteh3[ft];
  if(tictoc == 56) tiker = niteh2[ft];
  if(tictoc == 64) tiker = niteh1[ft];

  if(tictoc == 7) tiker = niteg8[ft];
  if(tictoc == 15) tiker = niteg7[ft];
  if(tictoc == 23) tiker = niteg6[ft];
  if(tictoc == 31) tiker = niteg5[ft];
  if(tictoc == 39) tiker = niteg4[ft];
  if(tictoc == 47) tiker = niteg3[ft];
  if(tictoc == 55) tiker = niteg2[ft];
  if(tictoc == 63) tiker = niteg1[ft];

  if(tictoc == 6) tiker = nitef8[ft];
  if(tictoc == 14) tiker = nitef7[ft];
  if(tictoc == 22) tiker = nitef6[ft];
  if(tictoc == 30) tiker = nitef5[ft];
  if(tictoc == 38) tiker = nitef4[ft];
  if(tictoc == 46) tiker = nitef3[ft];
  if(tictoc == 54) tiker = nitef2[ft];
  if(tictoc == 62) tiker = nitef1[ft];

  if(tictoc == 5) tiker = nitee8[ft];
  if(tictoc == 13) tiker = nitee7[ft];
  if(tictoc == 21) tiker = nitee6[ft];
  if(tictoc == 29) tiker = nitee5[ft];
  if(tictoc == 37) tiker = nitee4[ft];
  if(tictoc == 45) tiker = nitee3[ft];
  if(tictoc == 53) tiker = nitee2[ft];
  if(tictoc == 61) tiker = nitee1[ft];

  if(tictoc == 4) tiker = nited8[ft];
  if(tictoc == 12) tiker = nited7[ft];
  if(tictoc == 20) tiker = nited6[ft];
  if(tictoc == 28) tiker = nited5[ft];
  if(tictoc == 36) tiker = nited4[ft];
  if(tictoc == 44) tiker = nited3[ft];
  if(tictoc == 52) tiker = nited2[ft];
  if(tictoc == 60) tiker = nited1[ft];

  if(tictoc == 3) tiker = nitec8[ft];
  if(tictoc == 11) tiker = nitec7[ft];
  if(tictoc == 19) tiker = nitec6[ft];
  if(tictoc == 27) tiker = nitec5[ft];
  if(tictoc == 35) tiker = nitec4[ft];
  if(tictoc == 43) tiker = nitec3[ft];
  if(tictoc == 51) tiker = nitec2[ft];
  if(tictoc == 59) tiker = nitec1[ft];

  if(tictoc == 2) tiker = niteb8[ft];
  if(tictoc == 10) tiker = niteb7[ft];
  if(tictoc == 18) tiker = niteb6[ft];
  if(tictoc == 26) tiker = niteb5[ft];
  if(tictoc == 34) tiker = niteb4[ft];
  if(tictoc == 42) tiker = niteb3[ft];
  if(tictoc == 50) tiker = niteb2[ft];
  if(tictoc == 58) tiker = niteb1[ft];

  if(tictoc == 1) tiker = nitea8[ft];
  if(tictoc == 9) tiker = nitea7[ft];
  if(tictoc == 17) tiker = nitea6[ft];
  if(tictoc == 57) tiker = nitea1[ft];
  if(tictoc == 49) tiker = nitea2[ft];
  if(tictoc == 41) tiker = nitea3[ft];
  if(tictoc == 33) tiker = nitea4[ft];
  if(tictoc == 25) tiker = nitea5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;


  if (brd[0].boardval[tictoc] == 300) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){

    brd[0].attackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){

    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }
       /*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {
 if(tictoc == 8) tiker = bishh8[ft];
  if(tictoc == 16) tiker = bishh7[ft];
  if(tictoc == 24) tiker = bishh6[ft];
  if(tictoc == 32) tiker = bishh5[ft];
  if(tictoc == 40) tiker = bishh4[ft];
  if(tictoc == 48) tiker = bishh3[ft];
  if(tictoc == 56) tiker = bishh2[ft];
  if(tictoc == 64) tiker = bishh1[ft];

  if(tictoc == 7) tiker = bishg8[ft];
  if(tictoc == 15) tiker = bishg7[ft];
  if(tictoc == 23) tiker = bishg6[ft];
  if(tictoc == 31) tiker = bishg5[ft];
  if(tictoc == 39) tiker = bishg4[ft];
  if(tictoc == 47) tiker = bishg3[ft];
  if(tictoc == 55) tiker = bishg2[ft];
  if(tictoc == 63) tiker = bishg1[ft];

  if(tictoc == 6) tiker = bishf8[ft];
  if(tictoc == 14) tiker = bishf7[ft];
  if(tictoc == 22) tiker = bishf6[ft];
  if(tictoc == 30) tiker = bishf5[ft];
  if(tictoc == 38) tiker = bishf4[ft];
  if(tictoc == 46) tiker = bishf3[ft];
  if(tictoc == 54) tiker = bishf2[ft];
  if(tictoc == 62) tiker = bishf1[ft];

  if(tictoc == 5) tiker = bishe8[ft];
  if(tictoc == 13) tiker = bishe7[ft];
  if(tictoc == 21) tiker = bishe6[ft];
  if(tictoc == 29) tiker = bishe5[ft];
  if(tictoc == 37) tiker = bishe4[ft];
  if(tictoc == 45) tiker = bishe3[ft];
  if(tictoc == 53) tiker = bishe2[ft];
  if(tictoc == 61) tiker = bishe1[ft];

  if(tictoc == 4) tiker = bishd8[ft];
  if(tictoc == 12) tiker = bishd7[ft];
  if(tictoc == 20) tiker = bishd6[ft];
  if(tictoc == 28) tiker = bishd5[ft];
  if(tictoc == 36) tiker = bishd4[ft];
  if(tictoc == 44) tiker = bishd3[ft];
  if(tictoc == 52) tiker = bishd2[ft];
  if(tictoc == 60) tiker = bishd1[ft];

  if(tictoc == 3) tiker = bishc8[ft];
  if(tictoc == 11) tiker = bishc7[ft];
  if(tictoc == 19) tiker = bishc6[ft];
  if(tictoc == 27) tiker = bishc5[ft];
  if(tictoc == 35) tiker = bishc4[ft];
  if(tictoc == 43) tiker = bishc3[ft];
  if(tictoc == 51) tiker = bishc2[ft];
  if(tictoc == 59) tiker = bishc1[ft];

  if(tictoc == 2) tiker = bishb8[ft];
  if(tictoc == 10) tiker = bishb7[ft];
  if(tictoc == 18) tiker = bishb6[ft];
  if(tictoc == 26) tiker = bishb5[ft];
  if(tictoc == 34) tiker = bishb4[ft];
  if(tictoc == 42) tiker = bishb3[ft];
  if(tictoc == 50) tiker = bishb2[ft];
  if(tictoc == 58) tiker = bishb1[ft];

  if(tictoc == 1) tiker = bisha8[ft];
  if(tictoc == 9) tiker = bisha7[ft];
  if(tictoc == 17) tiker = bisha6[ft];
  if(tictoc == 57) tiker = bisha1[ft];
  if(tictoc == 49) tiker = bisha2[ft];
  if(tictoc == 41) tiker = bisha3[ft];
  if(tictoc == 33) tiker = bisha4[ft];
  if(tictoc == 25) tiker = bisha5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;



  if (brd[0].boardval[tictoc] == 950) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){

    brd[0].attackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){

    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }

/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/
 
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = rookh8[ft];
  if(tictoc == 16) tiker = rookh7[ft];
  if(tictoc == 24) tiker = rookh6[ft];
  if(tictoc == 32) tiker = rookh5[ft];
  if(tictoc == 40) tiker = rookh4[ft];
  if(tictoc == 48) tiker = rookh3[ft];
  if(tictoc == 56) tiker = rookh2[ft];
  if(tictoc == 64) tiker = rookh1[ft];

  if(tictoc == 7) tiker = rookg8[ft];
  if(tictoc == 15) tiker = rookg7[ft];
  if(tictoc == 23) tiker = rookg6[ft];
  if(tictoc == 31) tiker = rookg5[ft];
  if(tictoc == 39) tiker = rookg4[ft];
  if(tictoc == 47) tiker = rookg3[ft];
  if(tictoc == 55) tiker = rookg2[ft];
  if(tictoc == 63) tiker = rookg1[ft];

  if(tictoc == 6) tiker = rookf8[ft];
  if(tictoc == 14) tiker = rookf7[ft];
  if(tictoc == 22) tiker = rookf6[ft];
  if(tictoc == 30) tiker = rookf5[ft];
  if(tictoc == 38) tiker = rookf4[ft];
  if(tictoc == 46) tiker = rookf3[ft];
  if(tictoc == 54) tiker = rookf2[ft];
  if(tictoc == 62) tiker = rookf1[ft];

  if(tictoc == 5) tiker = rooke8[ft];
  if(tictoc == 13) tiker = rooke7[ft];
  if(tictoc == 21) tiker = rooke6[ft];
  if(tictoc == 29) tiker = rooke5[ft];
  if(tictoc == 37) tiker = rooke4[ft];
  if(tictoc == 45) tiker = rooke3[ft];
  if(tictoc == 53) tiker = rooke2[ft];
  if(tictoc == 61) tiker = rooke1[ft];

  if(tictoc == 4) tiker = rookd8[ft];
  if(tictoc == 12) tiker = rookd7[ft];
  if(tictoc == 20) tiker = rookd6[ft];
  if(tictoc == 28) tiker = rookd5[ft];
  if(tictoc == 36) tiker = rookd4[ft];
  if(tictoc == 44) tiker = rookd3[ft];
  if(tictoc == 52) tiker = rookd2[ft];
  if(tictoc == 60) tiker = rookd1[ft];

  if(tictoc == 3) tiker = rookc8[ft];
  if(tictoc == 11) tiker = rookc7[ft];
  if(tictoc == 19) tiker = rookc6[ft];
  if(tictoc == 27) tiker = rookc5[ft];
  if(tictoc == 35) tiker = rookc4[ft];
  if(tictoc == 43) tiker = rookc3[ft];
  if(tictoc == 51) tiker = rookc2[ft];
  if(tictoc == 59) tiker = rookc1[ft];

  if(tictoc == 2) tiker = rookb8[ft];
  if(tictoc == 10) tiker = rookb7[ft];
  if(tictoc == 18) tiker = rookb6[ft];
  if(tictoc == 26) tiker = rookb5[ft];
  if(tictoc == 34) tiker = rookb4[ft];
  if(tictoc == 42) tiker = rookb3[ft];
  if(tictoc == 50) tiker = rookb2[ft];
  if(tictoc == 58) tiker = rookb1[ft];

  if(tictoc == 1) tiker = rooka8[ft];
  if(tictoc == 9) tiker = rooka7[ft];
  if(tictoc == 17) tiker = rooka6[ft];
  if(tictoc == 57) tiker = rooka1[ft];
  if(tictoc == 49) tiker = rooka2[ft];
  if(tictoc == 41) tiker = rooka3[ft];
  if(tictoc == 33) tiker = rooka4[ft];
  if(tictoc == 25) tiker = rooka5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;

  if (brd[0].boardval[tictoc] == 950) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){

    brd[0].attackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){

    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }

/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = kingh8[ft];
  if(tictoc == 16) tiker = kingh7[ft];
  if(tictoc == 24) tiker = kingh6[ft];
  if(tictoc == 32) tiker = kingh5[ft];
  if(tictoc == 40) tiker = kingh4[ft];
  if(tictoc == 48) tiker = kingh3[ft];
  if(tictoc == 56) tiker = kingh2[ft];
  if(tictoc == 64) tiker = kingh1[ft];

  if(tictoc == 7) tiker = kingg8[ft];
  if(tictoc == 15) tiker = kingg7[ft];
  if(tictoc == 23) tiker = kingg6[ft];
  if(tictoc == 31) tiker = kingg5[ft];
  if(tictoc == 39) tiker = kingg4[ft];
  if(tictoc == 47) tiker = kingg3[ft];
  if(tictoc == 55) tiker = kingg2[ft];
  if(tictoc == 63) tiker = kingg1[ft];

  if(tictoc == 6) tiker = kingf8[ft];
  if(tictoc == 14) tiker = kingf7[ft];
  if(tictoc == 22) tiker = kingf6[ft];
  if(tictoc == 30) tiker = kingf5[ft];
  if(tictoc == 38) tiker = kingf4[ft];
  if(tictoc == 46) tiker = kingf3[ft];
  if(tictoc == 54) tiker = kingf2[ft];
  if(tictoc == 62) tiker = kingf1[ft];

  if(tictoc == 5) tiker = kinge8[ft];
  if(tictoc == 13) tiker = kinge7[ft];
  if(tictoc == 21) tiker = kinge6[ft];
  if(tictoc == 29) tiker = kinge5[ft];
  if(tictoc == 37) tiker = kinge4[ft];
  if(tictoc == 45) tiker = kinge3[ft];
  if(tictoc == 53) tiker = kinge2[ft];
  if(tictoc == 61) tiker = kinge1[ft];

  if(tictoc == 4) tiker = kingd8[ft];
  if(tictoc == 12) tiker = kingd7[ft];
  if(tictoc == 20) tiker = kingd6[ft];
  if(tictoc == 28) tiker = kingd5[ft];
  if(tictoc == 36) tiker = kingd4[ft];
  if(tictoc == 44) tiker = kingd3[ft];
  if(tictoc == 52) tiker = kingd2[ft];
  if(tictoc == 60) tiker = kingd1[ft];

  if(tictoc == 3) tiker = kingc8[ft];
  if(tictoc == 11) tiker = kingc7[ft];
  if(tictoc == 19) tiker = kingc6[ft];
  if(tictoc == 27) tiker = kingc5[ft];
  if(tictoc == 35) tiker = kingc4[ft];
  if(tictoc == 43) tiker = kingc3[ft];
  if(tictoc == 51) tiker = kingc2[ft];
  if(tictoc == 59) tiker = kingc1[ft];

  if(tictoc == 2) tiker = kingb8[ft];
  if(tictoc == 10) tiker = kingb7[ft];
  if(tictoc == 18) tiker = kingb6[ft];
  if(tictoc == 26) tiker = kingb5[ft];
  if(tictoc == 34) tiker = kingb4[ft];
  if(tictoc == 42) tiker = kingb3[ft];
  if(tictoc == 50) tiker = kingb2[ft];
  if(tictoc == 58) tiker = kingb1[ft];

  if(tictoc == 1) tiker = kinga8[ft];
  if(tictoc == 9) tiker = kinga7[ft];
  if(tictoc == 17) tiker = kinga6[ft];
  if(tictoc == 57) tiker = kinga1[ft];
  if(tictoc == 49) tiker = kinga2[ft];
  if(tictoc == 41) tiker = kinga3[ft];
  if(tictoc == 33) tiker = kinga4[ft];
  if(tictoc == 25) tiker = kinga5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;



  if (brd[0].boardval[tictoc] == 5000) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){

    brd[0].attackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){

    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].attackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }
int kt = 0;
kt = ct;
brd[0].movelist[ct] = 0;
brd[0].movelist[ct+1] = 0;
//brd[0].movelist[ct+2] = 0;
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// black

//ct = 250;
brd[0].movelist[ct] = 0;
brd[0].movelist[ct+1] = 0;
brd[0].movelist[ct+2] = 0;
/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

//pawns//
// enpassant
if(brd[0].enpassrule[8] == 1){
if((brd[0].boardval[39] == 99) & (brd[0].enpassrule[7] == 1)){
    brd[0].movelist[ct] = 39;
    brd[0].movelist[ct+1] = 48;
    ct = ct + 2;
 }
if((brd[0].boardval[40] == 99) & (brd[0].enpassrule[6] == 1)){
    brd[0].movelist[ct] = 40;
    brd[0].movelist[ct+1] = 47;
    ct = ct + 2;
 }
if((brd[0].boardval[38] == 99) & (brd[0].enpassrule[6] == 1)){
    brd[0].movelist[ct] = 38;
    brd[0].movelist[ct+1] = 47;
    ct = ct + 2;
 }
if((brd[0].boardval[39] == 99) & (brd[0].enpassrule[5] == 1)){
    brd[0].movelist[ct] = 39;
    brd[0].movelist[ct+1] = 46;
    ct = ct + 2;
 }
if((brd[0].boardval[37] == 99) & (brd[0].enpassrule[5] == 1)){
    brd[0].movelist[ct] = 37;
    brd[0].movelist[ct+1] = 46;
    ct = ct + 2;
 }
if((brd[0].boardval[38] == 99) & (brd[0].enpassrule[4] == 1)){
    brd[0].movelist[ct] = 38;
    brd[0].movelist[ct+1] = 45;
    ct = ct + 2;
 }
if((brd[0].boardval[36] == 99) & (brd[0].enpassrule[4] == 1)){
    brd[0].movelist[ct] = 36;
    brd[0].movelist[ct+1] = 45;
    ct = ct + 2;
 }
if((brd[0].boardval[37] == 99) & (brd[0].enpassrule[3] == 1)){
    brd[0].movelist[ct] = 37;
    brd[0].movelist[ct+1] = 44;
    ct = ct + 2;
 }
if((brd[0].boardval[35] == 99) & (brd[0].enpassrule[3] == 1)){
    brd[0].movelist[ct] = 35;
    brd[0].movelist[ct+1] = 44;
    ct = ct + 2;
 }
if((brd[0].boardval[36] == 99) & (brd[0].enpassrule[2] == 1)){
    brd[0].movelist[ct] = 36;
    brd[0].movelist[ct+1] = 43;
    ct = ct + 2;
 }
if((brd[0].boardval[34] == 99) & (brd[0].enpassrule[2] == 1)){
    brd[0].movelist[ct] = 34;
    brd[0].movelist[ct+1] = 43;
    ct = ct + 2;
 }
if((brd[0].boardval[35] == 99) & (brd[0].enpassrule[1] == 1)){
    brd[0].movelist[ct] = 35;
    brd[0].movelist[ct+1] = 42;
    ct = ct + 2;
 }
if((brd[0].boardval[33] == 99) & (brd[0].enpassrule[1] == 1)){
    brd[0].movelist[ct] = 33;
    brd[0].movelist[ct+1] = 42;
    ct = ct + 2;
 }
if((brd[0].boardval[34] == 99) & (brd[0].enpassrule[0] == 1)){
    brd[0].movelist[ct] = 34;
    brd[0].movelist[ct+1] = 41;
    ct = ct + 2;
 }


}
//h7-h1
if(brd[0].boardval[56] == 99){
brd[0].battackpos[63] = 1;
 if(brd[0].boardval[64] == 0) {
    brd[0].movelist[ct] = 56;
    brd[0].movelist[ct+1] = 64;
    ct = ct + 2;
 }
 if((brd[0].boardval[63] == 100) ||
    (brd[0].boardval[63] == 500) || (brd[0].boardval[63] == 325) ||
    (brd[0].boardval[63] == 300) || (brd[0].boardval[63] == 950) ||
    (brd[0].boardval[63] == 5000)){
     brd[0].movelist[ct] = 56;
     brd[0].movelist[ct+1] = 63;
     ct = ct + 2;
    }
}


if(brd[0].boardval[48] == 99){
brd[0].battackpos[55] = 1;
 if(brd[0].boardval[56] == 0) {
    brd[0].movelist[ct] = 48;
    brd[0].movelist[ct+1] = 56;
    ct = ct + 2;
 }
 if((brd[0].boardval[55] == 100) ||
    (brd[0].boardval[55] == 500) || (brd[0].boardval[55] == 325) ||
    (brd[0].boardval[55] == 300) || (brd[0].boardval[55] == 950) ||
    (brd[0].boardval[55] == 5000)){
     brd[0].movelist[ct] = 48;
     brd[0].movelist[ct+1] = 55;
     ct = ct + 2;
    }
}


if(brd[0].boardval[40] == 99){
brd[0].battackpos[47] = 1;
 if(brd[0].boardval[48] == 0) {
    brd[0].movelist[ct] = 40;
    brd[0].movelist[ct+1] = 48;
    ct = ct + 2;
 }
 if((brd[0].boardval[47] == 100) ||
    (brd[0].boardval[47] == 500) || (brd[0].boardval[47] == 325) ||
    (brd[0].boardval[47] == 300) || (brd[0].boardval[47] == 950) ||
    (brd[0].boardval[47] == 5000)){
     brd[0].movelist[ct] = 40;
     brd[0].movelist[ct+1] = 47;
     ct = ct + 2;
    }
}


if(brd[0].boardval[32] == 99){
brd[0].battackpos[39] = 1;
 if(brd[0].boardval[40] == 0) {
    brd[0].movelist[ct] = 32;
    brd[0].movelist[ct+1] = 40;
    ct = ct + 2;
 }
 if((brd[0].boardval[39] == 100) ||
    (brd[0].boardval[39] == 500) || (brd[0].boardval[39] == 325) ||
    (brd[0].boardval[39] == 300) || (brd[0].boardval[39] == 950) ||
    (brd[0].boardval[39] == 5000)){
     brd[0].movelist[ct] = 32;
     brd[0].movelist[ct+1] = 39;
     ct = ct + 2;
    }
}


if(brd[0].boardval[24] == 99){
brd[0].battackpos[31] = 1;
 if(brd[0].boardval[32] == 0) {
    brd[0].movelist[ct] = 24;
    brd[0].movelist[ct+1] = 32;
    ct = ct + 2;
 }
 if((brd[0].boardval[31] == 100) ||
    (brd[0].boardval[31] == 500) || (brd[0].boardval[31] == 325) ||
    (brd[0].boardval[31] == 300) || (brd[0].boardval[31] == 950) ||
    (brd[0].boardval[31] == 5000)){
     brd[0].movelist[ct] = 24;
     brd[0].movelist[ct+1] = 31;
     ct = ct + 2;
    }
}


if(brd[0].boardval[16] == 99){
brd[0].battackpos[23] = 1;
 if(brd[0].boardval[24] == 0) {
    brd[0].movelist[ct] = 16;
    brd[0].movelist[ct+1] = 24;
    ct = ct + 2;
    if(brd[0].boardval[32] == 0) {
    brd[0].movelist[ct] = 16;
    brd[0].movelist[ct+1] = 32;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[23] == 100) ||
    (brd[0].boardval[23] == 500) || (brd[0].boardval[23] == 325) ||
    (brd[0].boardval[23] == 300) || (brd[0].boardval[23] == 950) ||
    (brd[0].boardval[23] == 5000)){
     brd[0].movelist[ct] = 16;
     brd[0].movelist[ct+1] = 23;
     ct = ct + 2;
    }
}


//g7-g1
if(brd[0].boardval[55] == 99){
brd[0].battackpos[62] = 1;
brd[0].battackpos[64] = 1;
 if(brd[0].boardval[63] == 0) {
    brd[0].movelist[ct] = 55;
    brd[0].movelist[ct+1] = 63;
    ct = ct + 2;
     }
 if((brd[0].boardval[62] == 100) ||
    (brd[0].boardval[62] == 500) || (brd[0].boardval[62] == 325) ||
    (brd[0].boardval[62] == 300) || (brd[0].boardval[62] == 950) ||
    (brd[0].boardval[62] == 5000)){
     brd[0].movelist[ct] = 55;
     brd[0].movelist[ct+1] = 62;
     ct = ct + 2;
    }
  if((brd[0].boardval[64] == 100) ||
    (brd[0].boardval[64] == 500) || (brd[0].boardval[64] == 325) ||
    (brd[0].boardval[64] == 300) || (brd[0].boardval[64] == 950) ||
    (brd[0].boardval[64] == 5000)){
     brd[0].movelist[ct] = 55;
     brd[0].movelist[ct+1] = 64;
     ct = ct + 2;
    }
}


if(brd[0].boardval[47] == 99){
brd[0].battackpos[54] = 1;
brd[0].battackpos[56] = 1;
 if(brd[0].boardval[55] == 0) {
    brd[0].movelist[ct] = 47;
    brd[0].movelist[ct+1] = 55;
    ct = ct + 2;
 }
 if((brd[0].boardval[54] == 100) ||
    (brd[0].boardval[54] == 500) || (brd[0].boardval[54] == 325) ||
    (brd[0].boardval[54] == 300) || (brd[0].boardval[54] == 950) ||
    (brd[0].boardval[54] == 5000)){
     brd[0].movelist[ct] = 47;
     brd[0].movelist[ct+1] = 54;
     ct = ct + 2;
    }
  if((brd[0].boardval[56] == 100) ||
    (brd[0].boardval[56] == 500) || (brd[0].boardval[56] == 325) ||
    (brd[0].boardval[56] == 300) || (brd[0].boardval[56] == 950) ||
    (brd[0].boardval[56] == 5000)){
     brd[0].movelist[ct] = 47;
     brd[0].movelist[ct+1] = 56;
     ct = ct + 2;
    }
}


if(brd[0].boardval[39] == 99){
brd[0].battackpos[46] = 1;
brd[0].battackpos[48] = 1;
 if(brd[0].boardval[47] == 0) {
    brd[0].movelist[ct] = 39;
    brd[0].movelist[ct+1] = 47;
    ct = ct + 2;
 }
 if((brd[0].boardval[46] == 100) ||
    (brd[0].boardval[46] == 500) || (brd[0].boardval[46] == 325) ||
    (brd[0].boardval[46] == 300) || (brd[0].boardval[46] == 950) ||
    (brd[0].boardval[46] == 5000)){
     brd[0].movelist[ct] = 39;
     brd[0].movelist[ct+1] = 46;
     ct = ct + 2;
    }
  if((brd[0].boardval[48] == 100) ||
    (brd[0].boardval[48] == 500) || (brd[0].boardval[48] == 325) ||
    (brd[0].boardval[48] == 300) || (brd[0].boardval[48] == 950) ||
    (brd[0].boardval[48] == 5000)){
     brd[0].movelist[ct] = 39;
     brd[0].movelist[ct+1] = 48;
     ct = ct + 2;
    }
}


if(brd[0].boardval[31] == 99){
brd[0].battackpos[38] = 1;
brd[0].battackpos[40] = 1;
 if(brd[0].boardval[39] == 0) {
    brd[0].movelist[ct] = 31;
    brd[0].movelist[ct+1] = 39;
    ct = ct + 2;
 }
 if((brd[0].boardval[38] == 100) ||
    (brd[0].boardval[38] == 500) || (brd[0].boardval[38] == 325) ||
    (brd[0].boardval[38] == 300) || (brd[0].boardval[38] == 950) ||
    (brd[0].boardval[38] == 5000)){
     brd[0].movelist[ct] = 31;
     brd[0].movelist[ct+1] = 38;
     ct = ct + 2;
    }
  if((brd[0].boardval[40] == 100) ||
    (brd[0].boardval[40] == 500) || (brd[0].boardval[40] == 325) ||
    (brd[0].boardval[40] == 300) || (brd[0].boardval[40] == 950) ||
    (brd[0].boardval[40] == 5000)){
     brd[0].movelist[ct] = 31;
     brd[0].movelist[ct+1] = 40;
     ct = ct + 2;
    }
}


if(brd[0].boardval[23] == 99){
brd[0].battackpos[30] = 1;
brd[0].battackpos[32] = 1;
 if(brd[0].boardval[31] == 0) {
    brd[0].movelist[ct] = 23;
    brd[0].movelist[ct+1] = 31;
    ct = ct + 2;
 }
 if((brd[0].boardval[30] == 100) ||
    (brd[0].boardval[30] == 500) || (brd[0].boardval[30] == 325) ||
    (brd[0].boardval[30] == 300) || (brd[0].boardval[30] == 950) ||
    (brd[0].boardval[30] == 5000)){
     brd[0].movelist[ct] = 23;
     brd[0].movelist[ct+1] = 30;
     ct = ct + 2;
    }
  if((brd[0].boardval[32] == 100) ||
    (brd[0].boardval[32] == 500) || (brd[0].boardval[32] == 325) ||
    (brd[0].boardval[32] == 300) || (brd[0].boardval[32] == 950) ||
    (brd[0].boardval[32] == 5000)){
     brd[0].movelist[ct] = 23;
     brd[0].movelist[ct+1] = 32;
     ct = ct + 2;
    }
}


if(brd[0].boardval[15] == 99){
brd[0].battackpos[22] = 1;
brd[0].battackpos[24] = 1;
 if(brd[0].boardval[23] == 0) {
    brd[0].movelist[ct] = 15;
    brd[0].movelist[ct+1] = 23;
    ct = ct + 2;
    if(brd[0].boardval[31] == 0) {
    brd[0].movelist[ct] = 15;
    brd[0].movelist[ct+1] = 31;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[22] == 100) ||
    (brd[0].boardval[22] == 500) || (brd[0].boardval[22] == 325) ||
    (brd[0].boardval[22] == 300) || (brd[0].boardval[22] == 950) ||
    (brd[0].boardval[22] == 5000)){
     brd[0].movelist[ct] = 15;
     brd[0].movelist[ct+1] = 22;
     ct = ct + 2;
    }
  if((brd[0].boardval[24] == 100) ||
    (brd[0].boardval[24] == 500) || (brd[0].boardval[24] == 325) ||
    (brd[0].boardval[24] == 300) || (brd[0].boardval[24] == 950) ||
    (brd[0].boardval[24] == 5000)){
     brd[0].movelist[ct] = 15;
     brd[0].movelist[ct+1] = 24;
     ct = ct + 2;
    }
}

//f7-f1
if(brd[0].boardval[54] == 99){
brd[0].battackpos[61] = 1;
brd[0].battackpos[63] = 1;
 if(brd[0].boardval[62] == 0) {
    brd[0].movelist[ct] = 54;
    brd[0].movelist[ct+1] = 62;
    ct = ct + 2;
 }
 if((brd[0].boardval[61] == 100) ||
    (brd[0].boardval[61] == 500) || (brd[0].boardval[61] == 325) ||
    (brd[0].boardval[61] == 300) || (brd[0].boardval[61] == 950) ||
    (brd[0].boardval[61] == 5000)){
     brd[0].movelist[ct] = 54;
     brd[0].movelist[ct+1] = 61;
     ct = ct + 2;
    }
  if((brd[0].boardval[63] == 100) ||
    (brd[0].boardval[63] == 500) || (brd[0].boardval[63] == 325) ||
    (brd[0].boardval[63] == 300) || (brd[0].boardval[63] == 950) ||
    (brd[0].boardval[63] == 5000)){
     brd[0].movelist[ct] = 54;
     brd[0].movelist[ct+1] = 63;
     ct = ct + 2;
    }
}


if(brd[0].boardval[46] == 99){
brd[0].battackpos[53] = 1;
brd[0].battackpos[55] = 1;
 if(brd[0].boardval[54] == 0) {
    brd[0].movelist[ct] = 46;
    brd[0].movelist[ct+1] = 54;
    ct = ct + 2;
 }
 if((brd[0].boardval[53] == 100) ||
    (brd[0].boardval[53] == 500) || (brd[0].boardval[53] == 325) ||
    (brd[0].boardval[53] == 300) || (brd[0].boardval[53] == 950) ||
    (brd[0].boardval[53] == 5000)){
     brd[0].movelist[ct] = 46;
     brd[0].movelist[ct+1] = 53;
     ct = ct + 2;
    }
  if((brd[0].boardval[55] == 100) ||
    (brd[0].boardval[55] == 500) || (brd[0].boardval[55] == 325) ||
    (brd[0].boardval[55] == 300) || (brd[0].boardval[55] == 950) ||
    (brd[0].boardval[55] == 5000)){
     brd[0].movelist[ct] = 46;
     brd[0].movelist[ct+1] = 55;
     ct = ct + 2;
    }
}


if(brd[0].boardval[38] == 99){
brd[0].battackpos[45] = 1;
brd[0].battackpos[47] = 1;
 if(brd[0].boardval[46] == 0) {
    brd[0].movelist[ct] = 38;
    brd[0].movelist[ct+1] = 46;
    ct = ct + 2;
 }
 if((brd[0].boardval[45] == 100) ||
    (brd[0].boardval[45] == 500) || (brd[0].boardval[45] == 325) ||
    (brd[0].boardval[45] == 300) || (brd[0].boardval[45] == 950) ||
    (brd[0].boardval[45] == 5000)){
     brd[0].movelist[ct] = 38;
     brd[0].movelist[ct+1] = 45;
     ct = ct + 2;
    }
  if((brd[0].boardval[47] == 100) ||
    (brd[0].boardval[47] == 500) || (brd[0].boardval[47] == 325) ||
    (brd[0].boardval[47] == 300) || (brd[0].boardval[47] == 950) ||
    (brd[0].boardval[47] == 5000)){
     brd[0].movelist[ct] = 38;
     brd[0].movelist[ct+1] = 47;
     ct = ct + 2;
    }
}


if(brd[0].boardval[30] == 99){
brd[0].battackpos[37] = 1;
brd[0].battackpos[39] = 1;
 if(brd[0].boardval[38] == 0) {
    brd[0].movelist[ct] = 30;
    brd[0].movelist[ct+1] = 38;
    ct = ct + 2;
 }
 if((brd[0].boardval[39] == 100) ||
    (brd[0].boardval[39] == 500) || (brd[0].boardval[39] == 325) ||
    (brd[0].boardval[39] == 300) || (brd[0].boardval[39] == 950) ||
    (brd[0].boardval[39] == 5000)){
     brd[0].movelist[ct] = 30;
     brd[0].movelist[ct+1] = 39;
     ct = ct + 2;
    }
  if((brd[0].boardval[37] == 100) ||
    (brd[0].boardval[37] == 500) || (brd[0].boardval[37] == 325) ||
    (brd[0].boardval[37] == 300) || (brd[0].boardval[37] == 950) ||
    (brd[0].boardval[37] == 5000)){
     brd[0].movelist[ct] = 30;
     brd[0].movelist[ct+1] = 37;
     ct = ct + 2;
    }
}


if(brd[0].boardval[22] == 99){
brd[0].battackpos[29] = 1;
brd[0].battackpos[31] = 1;
 if(brd[0].boardval[30] == 0) {
    brd[0].movelist[ct] = 22;
    brd[0].movelist[ct+1] = 30;
    ct = ct + 2;
 }
 if((brd[0].boardval[29] == 100) ||
    (brd[0].boardval[29] == 500) || (brd[0].boardval[29] == 325) ||
    (brd[0].boardval[29] == 300) || (brd[0].boardval[29] == 950) ||
    (brd[0].boardval[29] == 5000)){
     brd[0].movelist[ct] = 22;
     brd[0].movelist[ct+1] = 29;
     ct = ct + 2;
    }
  if((brd[0].boardval[31] == 100) ||
    (brd[0].boardval[31] == 500) || (brd[0].boardval[31] == 325) ||
    (brd[0].boardval[31] == 300) || (brd[0].boardval[31] == 950) ||
    (brd[0].boardval[31] == 5000)){
     brd[0].movelist[ct] = 22;
     brd[0].movelist[ct+1] = 31;
     ct = ct + 2;
    }
}


if(brd[0].boardval[14] == 99){
brd[0].battackpos[21] = 1;
brd[0].battackpos[23] = 1;
 if(brd[0].boardval[22] == 0) {
    brd[0].movelist[ct] = 14;
    brd[0].movelist[ct+1] = 22;
    ct = ct + 2;
    if(brd[0].boardval[30] == 0) {
    brd[0].movelist[ct] = 14;
    brd[0].movelist[ct+1] = 30;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[21] == 100) ||
    (brd[0].boardval[21] == 500) || (brd[0].boardval[21] == 325) ||
    (brd[0].boardval[21] == 300) || (brd[0].boardval[21] == 950) ||
    (brd[0].boardval[21] == 5000)){
     brd[0].movelist[ct] = 14;
     brd[0].movelist[ct+1] = 21;
     ct = ct + 2;
    }
  if((brd[0].boardval[23] == 100) ||
    (brd[0].boardval[23] == 500) || (brd[0].boardval[23] == 325) ||
    (brd[0].boardval[23] == 300) || (brd[0].boardval[23] == 950) ||
    (brd[0].boardval[23] == 5000)){
     brd[0].movelist[ct] = 14;
     brd[0].movelist[ct+1] = 23;
     ct = ct + 2;
    }
}

//e7-e1
if(brd[0].boardval[53] == 99){
brd[0].battackpos[60] = 1;
brd[0].battackpos[62] = 1;
 if(brd[0].boardval[61] == 0) {
    brd[0].movelist[ct] = 53;
    brd[0].movelist[ct+1] = 61;
    ct = ct + 2;
 }
 if((brd[0].boardval[60] == 100) ||
    (brd[0].boardval[60] == 500) || (brd[0].boardval[60] == 325) ||
    (brd[0].boardval[60] == 300) || (brd[0].boardval[60] == 950) ||
    (brd[0].boardval[60] == 5000)){
     brd[0].movelist[ct] = 53;
     brd[0].movelist[ct+1] = 60;
     ct = ct + 2;
    }
  if((brd[0].boardval[62] == 100) ||
    (brd[0].boardval[62] == 500) || (brd[0].boardval[62] == 325) ||
    (brd[0].boardval[62] == 300) || (brd[0].boardval[62] == 950) ||
    (brd[0].boardval[62] == 5000)){
     brd[0].movelist[ct] = 53;
     brd[0].movelist[ct+1] = 62;
     ct = ct + 2;
    }
}


if(brd[0].boardval[45] == 99){
brd[0].battackpos[52] = 1;
brd[0].battackpos[54] = 1;
 if(brd[0].boardval[53] == 0) {
    brd[0].movelist[ct] = 45;
    brd[0].movelist[ct+1] = 53;
    ct = ct + 2;
 }
 if((brd[0].boardval[52] == 100) ||
    (brd[0].boardval[52] == 500) || (brd[0].boardval[52] == 325) ||
    (brd[0].boardval[52] == 300) || (brd[0].boardval[52] == 950) ||
    (brd[0].boardval[52] == 5000)){
     brd[0].movelist[ct] = 45;
     brd[0].movelist[ct+1] = 52;
     ct = ct + 2;
    }
  if((brd[0].boardval[54] == 100) ||
    (brd[0].boardval[54] == 500) || (brd[0].boardval[54] == 325) ||
    (brd[0].boardval[54] == 300) || (brd[0].boardval[54] == 950) ||
    (brd[0].boardval[54] == 5000)){
     brd[0].movelist[ct] = 45;
     brd[0].movelist[ct+1] = 54;
     ct = ct + 2;
    }
}


if(brd[0].boardval[37] == 99){
brd[0].battackpos[44] = 1;
brd[0].battackpos[46] = 1;
 if(brd[0].boardval[45] == 0) {
    brd[0].movelist[ct] = 37;
    brd[0].movelist[ct+1] = 45;
    ct = ct + 2;
 }
 if((brd[0].boardval[44] == 100) ||
    (brd[0].boardval[44] == 500) || (brd[0].boardval[44] == 325) ||
    (brd[0].boardval[44] == 300) || (brd[0].boardval[44] == 950) ||
    (brd[0].boardval[44] == 5000)){
     brd[0].movelist[ct] = 37;
     brd[0].movelist[ct+1] = 44;
     ct = ct + 2;
    }
  if((brd[0].boardval[46] == 100) ||
    (brd[0].boardval[46] == 500) || (brd[0].boardval[46] == 325) ||
    (brd[0].boardval[46] == 300) || (brd[0].boardval[46] == 950) ||
    (brd[0].boardval[46] == 5000)){
     brd[0].movelist[ct] = 37;
     brd[0].movelist[ct+1] = 46;
     ct = ct + 2;
    }
}


if(brd[0].boardval[29] == 99){
brd[0].battackpos[36] = 1;
brd[0].battackpos[38] = 1;
 if(brd[0].boardval[37] == 0) {
    brd[0].movelist[ct] = 29;
    brd[0].movelist[ct+1] = 37;
    ct = ct + 2;
 }
 if((brd[0].boardval[36] == 100) ||
    (brd[0].boardval[36] == 500) || (brd[0].boardval[36] == 325) ||
    (brd[0].boardval[36] == 300) || (brd[0].boardval[36] == 950) ||
    (brd[0].boardval[36] == 5000)){
     brd[0].movelist[ct] = 29;
     brd[0].movelist[ct+1] = 36;
     ct = ct + 2;
    }
  if((brd[0].boardval[38] == 100) ||
    (brd[0].boardval[38] == 500) || (brd[0].boardval[38] == 325) ||
    (brd[0].boardval[38] == 300) || (brd[0].boardval[38] == 950) ||
    (brd[0].boardval[38] == 5000)){
     brd[0].movelist[ct] = 29;
     brd[0].movelist[ct+1] = 38;
     ct = ct + 2;
    }
}


if(brd[0].boardval[21] == 99){
brd[0].battackpos[28] = 1;
brd[0].battackpos[30] = 1;
 if(brd[0].boardval[29] == 0) {
    brd[0].movelist[ct] = 21;
    brd[0].movelist[ct+1] = 29;
    ct = ct + 2;
     }
 if((brd[0].boardval[28] == 100) ||
    (brd[0].boardval[28] == 500) || (brd[0].boardval[28] == 325) ||
    (brd[0].boardval[28] == 300) || (brd[0].boardval[28] == 950) ||
    (brd[0].boardval[28] == 5000)){
     brd[0].movelist[ct] = 21;
     brd[0].movelist[ct+1] = 28;
     ct = ct + 2;
    }
  if((brd[0].boardval[30] == 100) ||
    (brd[0].boardval[30] == 500) || (brd[0].boardval[30] == 325) ||
    (brd[0].boardval[30] == 300) || (brd[0].boardval[30] == 950) ||
    (brd[0].boardval[30] == 5000)){
     brd[0].movelist[ct] = 21;
     brd[0].movelist[ct+1] = 30;
     ct = ct + 2;
    }
}


if(brd[0].boardval[13] == 99){
brd[0].battackpos[20] = 1;
brd[0].battackpos[22] = 1;
 if(brd[0].boardval[21] == 0) {
    brd[0].movelist[ct] = 13;
    brd[0].movelist[ct+1] = 21;
    ct = ct + 2;
    if(brd[0].boardval[29] == 0) {
    brd[0].movelist[ct] = 13;
    brd[0].movelist[ct+1] = 29;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[20] == 100) ||
    (brd[0].boardval[20] == 500) || (brd[0].boardval[20] == 325) ||
    (brd[0].boardval[20] == 300) || (brd[0].boardval[20] == 950) ||
    (brd[0].boardval[20] == 5000)){
     brd[0].movelist[ct] = 13;
     brd[0].movelist[ct+1] = 20;
     ct = ct + 2;
    }
  if((brd[0].boardval[22] == 100) ||
    (brd[0].boardval[22] == 500) || (brd[0].boardval[22] == 325) ||
    (brd[0].boardval[22] == 300) || (brd[0].boardval[22] == 950) ||
    (brd[0].boardval[22] == 5000)){
     brd[0].movelist[ct] = 13;
     brd[0].movelist[ct+1] = 22;
     ct = ct + 2;
    }
}

//d7-d1
if(brd[0].boardval[52] == 99){
brd[0].battackpos[59] = 1;
brd[0].battackpos[61] = 1;
 if(brd[0].boardval[60] == 0) {
    brd[0].movelist[ct] = 52;
    brd[0].movelist[ct+1] = 60;
    ct = ct + 2;
 }
 if((brd[0].boardval[59] == 100) ||
    (brd[0].boardval[59] == 500) || (brd[0].boardval[59] == 325) ||
    (brd[0].boardval[59] == 300) || (brd[0].boardval[59] == 950) ||
    (brd[0].boardval[59] == 5000)){
     brd[0].movelist[ct] = 52;
     brd[0].movelist[ct+1] = 59;
     ct = ct + 2;
    }
  if((brd[0].boardval[61] == 100) ||
    (brd[0].boardval[61] == 500) || (brd[0].boardval[61] == 325) ||
    (brd[0].boardval[61] == 300) || (brd[0].boardval[61] == 950) ||
    (brd[0].boardval[61] == 5000)){
     brd[0].movelist[ct] = 52;
     brd[0].movelist[ct+1] = 61;
     ct = ct + 2;
    }
}


if(brd[0].boardval[44] == 99){
brd[0].battackpos[51] = 1;
brd[0].battackpos[53] = 1;
 if(brd[0].boardval[52] == 0) {
    brd[0].movelist[ct] = 44;
    brd[0].movelist[ct+1] = 52;
    ct = ct + 2;
 }
 if((brd[0].boardval[51] == 100) ||
    (brd[0].boardval[51] == 500) || (brd[0].boardval[51] == 325) ||
    (brd[0].boardval[51] == 300) || (brd[0].boardval[51] == 950) ||
    (brd[0].boardval[51] == 5000)){
     brd[0].movelist[ct] = 44;
     brd[0].movelist[ct+1] = 51;
     ct = ct + 2;
    }
  if((brd[0].boardval[53] == 100) ||
    (brd[0].boardval[53] == 500) || (brd[0].boardval[53] == 325) ||
    (brd[0].boardval[53] == 300) || (brd[0].boardval[53] == 950) ||
    (brd[0].boardval[53] == 5000)){
     brd[0].movelist[ct] = 44;
     brd[0].movelist[ct+1] = 53;
     ct = ct + 2;
    }
}


if(brd[0].boardval[36] == 99){
brd[0].battackpos[43] = 1;
brd[0].battackpos[45] = 1;
 if(brd[0].boardval[44] == 0) {
    brd[0].movelist[ct] = 36;
    brd[0].movelist[ct+1] = 44;
    ct = ct + 2;
 }
 if((brd[0].boardval[43] == 100) ||
    (brd[0].boardval[43] == 500) || (brd[0].boardval[43] == 325) ||
    (brd[0].boardval[43] == 300) || (brd[0].boardval[43] == 950) ||
    (brd[0].boardval[43] == 5000)){
     brd[0].movelist[ct] = 36;
     brd[0].movelist[ct+1] = 43;
     ct = ct + 2;
    }
  if((brd[0].boardval[45] == 100) ||
    (brd[0].boardval[45] == 500) || (brd[0].boardval[45] == 325) ||
    (brd[0].boardval[45] == 300) || (brd[0].boardval[45] == 950) ||
    (brd[0].boardval[45] == 5000)){
     brd[0].movelist[ct] = 36;
     brd[0].movelist[ct+1] = 45;
     ct = ct + 2;
    }
}


if(brd[0].boardval[28] == 99){
brd[0].battackpos[35] = 1;
brd[0].battackpos[37] = 1;
 if(brd[0].boardval[36] == 0) {
    brd[0].movelist[ct] = 28;
    brd[0].movelist[ct+1] = 36;
    ct = ct + 2;
 }
 if((brd[0].boardval[35] == 100) ||
    (brd[0].boardval[35] == 500) || (brd[0].boardval[35] == 325) ||
    (brd[0].boardval[35] == 300) || (brd[0].boardval[35] == 950) ||
    (brd[0].boardval[35] == 5000)){
     brd[0].movelist[ct] = 28;
     brd[0].movelist[ct+1] = 35;
     ct = ct + 2;
    }
  if((brd[0].boardval[37] == 100) ||
    (brd[0].boardval[37] == 500) || (brd[0].boardval[37] == 325) ||
    (brd[0].boardval[37] == 300) || (brd[0].boardval[37] == 950) ||
    (brd[0].boardval[37] == 5000)){
     brd[0].movelist[ct] = 28;
     brd[0].movelist[ct+1] = 37;
     ct = ct + 2;
    }
}


if(brd[0].boardval[20] == 99){
brd[0].battackpos[27] = 1;
brd[0].battackpos[29] = 1;
 if(brd[0].boardval[28] == 0) {
    brd[0].movelist[ct] = 20;
    brd[0].movelist[ct+1] = 28;
    ct = ct + 2;
 }
 if((brd[0].boardval[27] == 100) ||
    (brd[0].boardval[27] == 500) || (brd[0].boardval[27] == 325) ||
    (brd[0].boardval[27] == 300) || (brd[0].boardval[27] == 950) ||
    (brd[0].boardval[27] == 5000)){
     brd[0].movelist[ct] = 20;
     brd[0].movelist[ct+1] = 27;
     ct = ct + 2;
    }
  if((brd[0].boardval[29] == 100) ||
    (brd[0].boardval[29] == 500) || (brd[0].boardval[29] == 325) ||
    (brd[0].boardval[29] == 300) || (brd[0].boardval[29] == 950) ||
    (brd[0].boardval[29] == 5000)){
     brd[0].movelist[ct] = 20;
     brd[0].movelist[ct+1] = 29;
     ct = ct + 2;
    }
}


if(brd[0].boardval[12] == 99){
brd[0].battackpos[19] = 1;
brd[0].battackpos[21] = 1;
 if(brd[0].boardval[20] == 0) {
    brd[0].movelist[ct] = 12;
    brd[0].movelist[ct+1] = 20;
    ct = ct + 2;
    if(brd[0].boardval[28] == 0) {
    brd[0].movelist[ct] = 12;
    brd[0].movelist[ct+1] = 28;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[19] == 100) ||
    (brd[0].boardval[19] == 500) || (brd[0].boardval[19] == 325) ||
    (brd[0].boardval[19] == 300) || (brd[0].boardval[19] == 950) ||
    (brd[0].boardval[19] == 5000)){
     brd[0].movelist[ct] = 12;
     brd[0].movelist[ct+1] = 19;
     ct = ct + 2;
    }
  if((brd[0].boardval[21] == 100) ||
    (brd[0].boardval[21] == 500) || (brd[0].boardval[21] == 325) ||
    (brd[0].boardval[21] == 300) || (brd[0].boardval[21] == 950) ||
    (brd[0].boardval[21] == 5000)){
     brd[0].movelist[ct] = 12;
     brd[0].movelist[ct+1] = 21;
     ct = ct + 2;
    }
}

//c7-c1
if(brd[0].boardval[51] == 99){
brd[0].battackpos[58] = 1;
brd[0].battackpos[60] = 1;
 if(brd[0].boardval[59] == 0) {
    brd[0].movelist[ct] = 51;
    brd[0].movelist[ct+1] = 59;
    ct = ct + 2;
 }
 if((brd[0].boardval[58] == 100) ||
    (brd[0].boardval[58] == 500) || (brd[0].boardval[58] == 325) ||
    (brd[0].boardval[58] == 300) || (brd[0].boardval[58] == 950) ||
    (brd[0].boardval[58] == 5000)){
     brd[0].movelist[ct] = 51;
     brd[0].movelist[ct+1] = 58;
     ct = ct + 2;
    }
  if((brd[0].boardval[60] == 100) ||
    (brd[0].boardval[60] == 500) || (brd[0].boardval[60] == 325) ||
    (brd[0].boardval[60] == 300) || (brd[0].boardval[60] == 950) ||
    (brd[0].boardval[60] == 5000)){
     brd[0].movelist[ct] = 51;
     brd[0].movelist[ct+1] = 60;
     ct = ct + 2;
    }
}


if(brd[0].boardval[43] == 99){
brd[0].battackpos[50] = 1;
brd[0].battackpos[52] = 1;
 if(brd[0].boardval[51] == 0) {
    brd[0].movelist[ct] = 43;
    brd[0].movelist[ct+1] = 51;
    ct = ct + 2;
 }
 if((brd[0].boardval[50] == 100) ||
    (brd[0].boardval[50] == 500) || (brd[0].boardval[50] == 325) ||
    (brd[0].boardval[50] == 300) || (brd[0].boardval[50] == 950) ||
    (brd[0].boardval[50] == 5000)){
     brd[0].movelist[ct] = 43;
     brd[0].movelist[ct+1] = 50;
     ct = ct + 2;
    }
  if((brd[0].boardval[52] == 100) ||
    (brd[0].boardval[52] == 500) || (brd[0].boardval[52] == 325) ||
    (brd[0].boardval[52] == 300) || (brd[0].boardval[52] == 950) ||
    (brd[0].boardval[52] == 5000)){
     brd[0].movelist[ct] = 43;
     brd[0].movelist[ct+1] = 52;
     ct = ct + 2;
    }
}


if(brd[0].boardval[35] == 99){
brd[0].battackpos[42] = 1;
brd[0].battackpos[44] = 1;
 if(brd[0].boardval[43] == 0) {
    brd[0].movelist[ct] = 35;
    brd[0].movelist[ct+1] = 43;
    ct = ct + 2;
 }
 if((brd[0].boardval[42] == 100) ||
    (brd[0].boardval[42] == 500) || (brd[0].boardval[42] == 325) ||
    (brd[0].boardval[42] == 300) || (brd[0].boardval[42] == 950) ||
    (brd[0].boardval[42] == 5000)){
     brd[0].movelist[ct] = 35;
     brd[0].movelist[ct+1] = 42;
     ct = ct + 2;
    }
  if((brd[0].boardval[44] == 100) ||
    (brd[0].boardval[44] == 500) || (brd[0].boardval[44] == 325) ||
    (brd[0].boardval[44] == 300) || (brd[0].boardval[44] == 950) ||
    (brd[0].boardval[44] == 5000)){
     brd[0].movelist[ct] = 35;
     brd[0].movelist[ct+1] = 44;
     ct = ct + 2;
    }
}

if(brd[0].boardval[27] == 99){
brd[0].battackpos[34] = 1;
brd[0].battackpos[36] = 1;
 if(brd[0].boardval[35] == 0) {
    brd[0].movelist[ct] = 27;
    brd[0].movelist[ct+1] = 35;
    ct = ct + 2;
 }
 if((brd[0].boardval[34] == 100) ||
    (brd[0].boardval[34] == 500) || (brd[0].boardval[34] == 325) ||
    (brd[0].boardval[34] == 300) || (brd[0].boardval[34] == 950) ||
    (brd[0].boardval[34] == 5000)){
     brd[0].movelist[ct] = 27;
     brd[0].movelist[ct+1] = 34;
     ct = ct + 2;
    }
  if((brd[0].boardval[36] == 100) ||
    (brd[0].boardval[36] == 500) || (brd[0].boardval[36] == 325) ||
    (brd[0].boardval[36] == 300) || (brd[0].boardval[36] == 950) ||
    (brd[0].boardval[36] == 5000)){
     brd[0].movelist[ct] = 27;
     brd[0].movelist[ct+1] = 36;
     ct = ct + 2;
    }
}


if(brd[0].boardval[19] == 99){
brd[0].battackpos[26] = 1;
brd[0].battackpos[28] = 1;
 if(brd[0].boardval[27] == 0) {
    brd[0].movelist[ct] = 19;
    brd[0].movelist[ct+1] = 27;
    ct = ct + 2;
 }
 if((brd[0].boardval[26] == 100) ||
    (brd[0].boardval[26] == 500) || (brd[0].boardval[26] == 325) ||
    (brd[0].boardval[26] == 300) || (brd[0].boardval[26] == 950) ||
    (brd[0].boardval[26] == 5000)){
     brd[0].movelist[ct] = 19;
     brd[0].movelist[ct+1] = 26;
     ct = ct + 2;
    }
  if((brd[0].boardval[28] == 100) ||
    (brd[0].boardval[28] == 500) || (brd[0].boardval[28] == 325) ||
    (brd[0].boardval[28] == 300) || (brd[0].boardval[28] == 950) ||
    (brd[0].boardval[28] == 5000)){
     brd[0].movelist[ct] = 19;
     brd[0].movelist[ct+1] = 28;
     ct = ct + 2;
    }
}



if(brd[0].boardval[11] == 99){
brd[0].battackpos[18] = 1;
brd[0].battackpos[20] = 1;
 if(brd[0].boardval[19] == 0) {
    brd[0].movelist[ct] = 11;
    brd[0].movelist[ct+1] = 19;
    ct = ct + 2;
    if(brd[0].boardval[27] == 0) {
    brd[0].movelist[ct] = 11;
    brd[0].movelist[ct+1] = 27;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[18] == 100) ||
    (brd[0].boardval[18] == 500) || (brd[0].boardval[18] == 325) ||
    (brd[0].boardval[18] == 300) || (brd[0].boardval[18] == 950) ||
    (brd[0].boardval[18] == 5000)){
     brd[0].movelist[ct] = 11;
     brd[0].movelist[ct+1] = 18;
     ct = ct + 2;
    }
  if((brd[0].boardval[20] == 100) ||
    (brd[0].boardval[20] == 500) || (brd[0].boardval[20] == 325) ||
    (brd[0].boardval[20] == 300) || (brd[0].boardval[20] == 950) ||
    (brd[0].boardval[20] == 5000)){
     brd[0].movelist[ct] = 11;
     brd[0].movelist[ct+1] = 20;
     ct = ct + 2;
    }
}

//b7-b1
if(brd[0].boardval[50] == 99){
brd[0].battackpos[59] = 1;
brd[0].battackpos[57] = 1;
 if(brd[0].boardval[58] == 0) {
    brd[0].movelist[ct] = 50;
    brd[0].movelist[ct+1] = 58;
    ct = ct + 2;
 }
 if((brd[0].boardval[59] == 100) ||
    (brd[0].boardval[59] == 500) || (brd[0].boardval[59] == 325) ||
    (brd[0].boardval[59] == 300) || (brd[0].boardval[59] == 950) ||
    (brd[0].boardval[59] == 5000)){
     brd[0].movelist[ct] = 50;
     brd[0].movelist[ct+1] = 59;
     ct = ct + 2;
    }
  if((brd[0].boardval[57] == 100) ||
    (brd[0].boardval[57] == 500) || (brd[0].boardval[57] == 325) ||
    (brd[0].boardval[57] == 300) || (brd[0].boardval[57] == 950) ||
    (brd[0].boardval[57] == 5000)){
     brd[0].movelist[ct] = 50;
     brd[0].movelist[ct+1] = 57;
     ct = ct + 2;
    }
}


if(brd[0].boardval[42] == 99){
brd[0].battackpos[51] = 1;
brd[0].battackpos[49] = 1;
 if(brd[0].boardval[50] == 0) {
    brd[0].movelist[ct] = 42;
    brd[0].movelist[ct+1] = 50;
    ct = ct + 2;
 }
 if((brd[0].boardval[49] == 100) ||
    (brd[0].boardval[49] == 500) || (brd[0].boardval[49] == 325) ||
    (brd[0].boardval[49] == 300) || (brd[0].boardval[49] == 950) ||
    (brd[0].boardval[49] == 5000)){
     brd[0].movelist[ct] = 42;
     brd[0].movelist[ct+1] = 49;
     ct = ct + 2;
    }
  if((brd[0].boardval[51] == 100) ||
    (brd[0].boardval[51] == 500) || (brd[0].boardval[51] == 325) ||
    (brd[0].boardval[51] == 300) || (brd[0].boardval[51] == 950) ||
    (brd[0].boardval[51] == 5000)){
     brd[0].movelist[ct] = 42;
     brd[0].movelist[ct+1] = 51;
     ct = ct + 2;
    }
}


if(brd[0].boardval[34] == 99){
brd[0].battackpos[43] = 1;
brd[0].battackpos[41] = 1;
 if(brd[0].boardval[42] == 0) {
    brd[0].movelist[ct] = 34;
    brd[0].movelist[ct+1] = 42;
    ct = ct + 2;
 }
 if((brd[0].boardval[43] == 100) ||
    (brd[0].boardval[43] == 500) || (brd[0].boardval[43] == 325) ||
    (brd[0].boardval[43] == 300) || (brd[0].boardval[43] == 950) ||
    (brd[0].boardval[43] == 5000)){
     brd[0].movelist[ct] = 34;
     brd[0].movelist[ct+1] = 43;
     ct = ct + 2;
    }
  if((brd[0].boardval[41] == 100) ||
    (brd[0].boardval[41] == 500) || (brd[0].boardval[41] == 325) ||
    (brd[0].boardval[41] == 300) || (brd[0].boardval[41] == 950) ||
    (brd[0].boardval[41] == 5000)){
     brd[0].movelist[ct] = 34;
     brd[0].movelist[ct+1] = 41;
     ct = ct + 2;
    }
}


if(brd[0].boardval[26] == 99){
brd[0].battackpos[35] = 1;
brd[0].battackpos[33] = 1;
 if(brd[0].boardval[34] == 0) {
    brd[0].movelist[ct] = 26;
    brd[0].movelist[ct+1] = 34;
    ct = ct + 2;
 }
 if((brd[0].boardval[33] == 100) ||
    (brd[0].boardval[33] == 500) || (brd[0].boardval[33] == 325) ||
    (brd[0].boardval[33] == 300) || (brd[0].boardval[33] == 950) ||
    (brd[0].boardval[33] == 5000)){
     brd[0].movelist[ct] = 26;
     brd[0].movelist[ct+1] = 33;
     ct = ct + 2;
    }
  if((brd[0].boardval[35] == 100) ||
    (brd[0].boardval[35] == 500) || (brd[0].boardval[35] == 325) ||
    (brd[0].boardval[35] == 300) || (brd[0].boardval[35] == 950) ||
    (brd[0].boardval[35] == 5000)){
     brd[0].movelist[ct] = 26;
     brd[0].movelist[ct+1] = 35;
     ct = ct + 2;
    }
}


if(brd[0].boardval[18] == 99){
brd[0].battackpos[25] = 1;
brd[0].battackpos[27] = 1;
 if(brd[0].boardval[26] == 0) {
    brd[0].movelist[ct] = 18;
    brd[0].movelist[ct+1] = 26;
    ct = ct + 2;
 }
 if((brd[0].boardval[27] == 100) ||
    (brd[0].boardval[27] == 500) || (brd[0].boardval[27] == 325) ||
    (brd[0].boardval[27] == 300) || (brd[0].boardval[27] == 950) ||
    (brd[0].boardval[27] == 5000)){
     brd[0].movelist[ct] = 18;
     brd[0].movelist[ct+1] = 27;
     ct = ct + 2;
    }
  if((brd[0].boardval[25] == 100) ||
    (brd[0].boardval[25] == 500) || (brd[0].boardval[25] == 325) ||
    (brd[0].boardval[25] == 300) || (brd[0].boardval[25] == 950) ||
    (brd[0].boardval[25] == 5000)){
     brd[0].movelist[ct] = 18;
     brd[0].movelist[ct+1] = 25;
     ct = ct + 2;
    }
}



if(brd[0].boardval[10] == 99){
brd[0].battackpos[19] = 1;
brd[0].battackpos[17] = 1;
 if(brd[0].boardval[18] == 0) {
    brd[0].movelist[ct] = 10;
    brd[0].movelist[ct+1] = 18;
    ct = ct + 2;
    if(brd[0].boardval[26] == 0) {
    brd[0].movelist[ct] = 10;
    brd[0].movelist[ct+1] = 26;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[19] == 100) ||
    (brd[0].boardval[19] == 500) || (brd[0].boardval[19] == 325) ||
    (brd[0].boardval[19] == 300) || (brd[0].boardval[19] == 950) ||
    (brd[0].boardval[19] == 5000)){
     brd[0].movelist[ct] = 10;
     brd[0].movelist[ct+1] = 19;
     ct = ct + 2;
    }
  if((brd[0].boardval[17] == 100) ||
    (brd[0].boardval[17] == 500) || (brd[0].boardval[17] == 325) ||
    (brd[0].boardval[17] == 300) || (brd[0].boardval[17] == 950) ||
    (brd[0].boardval[17] == 5000)){
     brd[0].movelist[ct] = 10;
     brd[0].movelist[ct+1] = 17;
     ct = ct + 2;
    }
}


//a7-a1
if(brd[0].boardval[49] == 99){
brd[0].battackpos[58] = 1;
 if(brd[0].boardval[57] == 0) {
    brd[0].movelist[ct] = 49;
    brd[0].movelist[ct+1] = 57;
    ct = ct + 2;
 }
 if((brd[0].boardval[58] == 100) ||
    (brd[0].boardval[58] == 500) || (brd[0].boardval[58] == 325) ||
    (brd[0].boardval[58] == 300) || (brd[0].boardval[58] == 950) ||
    (brd[0].boardval[58] == 5000)){
     brd[0].movelist[ct] = 49;
     brd[0].movelist[ct+1] = 58;
     ct = ct + 2;
    }
}


if(brd[0].boardval[41] == 99){
brd[0].battackpos[50] = 1;
 if(brd[0].boardval[49] == 0) {
    brd[0].movelist[ct] = 41;
    brd[0].movelist[ct+1] = 49;
    ct = ct + 2;
 }
 if((brd[0].boardval[50] == 100) ||
    (brd[0].boardval[50] == 500) || (brd[0].boardval[50] == 325) ||
    (brd[0].boardval[50] == 300) || (brd[0].boardval[50] == 950) ||
    (brd[0].boardval[50] == 5000)){
     brd[0].movelist[ct] = 41;
     brd[0].movelist[ct+1] = 50;
     ct = ct + 2;
    }
}


if(brd[0].boardval[33] == 99){
brd[0].battackpos[42] = 1;
 if(brd[0].boardval[41] == 0) {
    brd[0].movelist[ct] = 33;
    brd[0].movelist[ct+1] = 41;
    ct = ct + 2;
 }
 if((brd[0].boardval[42] == 100) ||
    (brd[0].boardval[42] == 500) || (brd[0].boardval[42] == 325) ||
    (brd[0].boardval[42] == 300) || (brd[0].boardval[42] == 950) ||
    (brd[0].boardval[42] == 5000)){
     brd[0].movelist[ct] = 33;
     brd[0].movelist[ct+1] = 42;
     ct = ct + 2;
    }
}


if(brd[0].boardval[25] == 99){
brd[0].battackpos[34] = 1;
 if(brd[0].boardval[33] == 0) {
    brd[0].movelist[ct] = 25;
    brd[0].movelist[ct+1] = 33;
    ct = ct + 2;
 }
 if((brd[0].boardval[34] == 100) ||
    (brd[0].boardval[34] == 500) || (brd[0].boardval[34] == 325) ||
    (brd[0].boardval[34] == 300) || (brd[0].boardval[34] == 950) ||
    (brd[0].boardval[34] == 5000)){
     brd[0].movelist[ct] = 25;
     brd[0].movelist[ct+1] = 34;
     ct = ct + 2;
    }
}



if(brd[0].boardval[17] == 99){
brd[0].battackpos[26] = 1;
 if(brd[0].boardval[25] == 0) {
    brd[0].movelist[ct] = 17;
    brd[0].movelist[ct+1] = 25;
    ct = ct + 2;
 }
 if((brd[0].boardval[26] == 100) ||
    (brd[0].boardval[26] == 500) || (brd[0].boardval[26] == 325) ||
    (brd[0].boardval[26] == 300) || (brd[0].boardval[26] == 950) ||
    (brd[0].boardval[26] == 5000)){
     brd[0].movelist[ct] = 17;
     brd[0].movelist[ct+1] = 26;
     ct = ct + 2;
    }
}

/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

if(brd[0].boardval[9] == 99){
brd[0].battackpos[18] = 1;
 if(brd[0].boardval[17] == 0) {
    brd[0].movelist[ct] = 9;
    brd[0].movelist[ct+1] = 17;
    ct = ct + 2;
    if(brd[0].boardval[25] == 0) {
    brd[0].movelist[ct] = 9;
    brd[0].movelist[ct+1] = 25;
    ct = ct + 2;
    }
 }
 if((brd[0].boardval[18] == 100) ||
    (brd[0].boardval[18] == 500) || (brd[0].boardval[18] == 325) ||
    (brd[0].boardval[18] == 300) || (brd[0].boardval[18] == 950) ||
    (brd[0].boardval[18] == 5000)){
     brd[0].movelist[ct] = 9;
     brd[0].movelist[ct+1] = 18;
     ct = ct + 2;
    }
}

///////
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = rookh8[ft];
  if(tictoc == 16) tiker = rookh7[ft];
  if(tictoc == 24) tiker = rookh6[ft];
  if(tictoc == 32) tiker = rookh5[ft];
  if(tictoc == 40) tiker = rookh4[ft];
  if(tictoc == 48) tiker = rookh3[ft];
  if(tictoc == 56) tiker = rookh2[ft];
  if(tictoc == 64) tiker = rookh1[ft];

  if(tictoc == 7) tiker = rookg8[ft];
  if(tictoc == 15) tiker = rookg7[ft];
  if(tictoc == 23) tiker = rookg6[ft];
  if(tictoc == 31) tiker = rookg5[ft];
  if(tictoc == 39) tiker = rookg4[ft];
  if(tictoc == 47) tiker = rookg3[ft];
  if(tictoc == 55) tiker = rookg2[ft];
  if(tictoc == 63) tiker = rookg1[ft];

  if(tictoc == 6) tiker = rookf8[ft];
  if(tictoc == 14) tiker = rookf7[ft];
  if(tictoc == 22) tiker = rookf6[ft];
  if(tictoc == 30) tiker = rookf5[ft];
  if(tictoc == 38) tiker = rookf4[ft];
  if(tictoc == 46) tiker = rookf3[ft];
  if(tictoc == 54) tiker = rookf2[ft];
  if(tictoc == 62) tiker = rookf1[ft];

  if(tictoc == 5) tiker = rooke8[ft];
  if(tictoc == 13) tiker = rooke7[ft];
  if(tictoc == 21) tiker = rooke6[ft];
  if(tictoc == 29) tiker = rooke5[ft];
  if(tictoc == 37) tiker = rooke4[ft];
  if(tictoc == 45) tiker = rooke3[ft];
  if(tictoc == 53) tiker = rooke2[ft];
  if(tictoc == 61) tiker = rooke1[ft];

  if(tictoc == 4) tiker = rookd8[ft];
  if(tictoc == 12) tiker = rookd7[ft];
  if(tictoc == 20) tiker = rookd6[ft];
  if(tictoc == 28) tiker = rookd5[ft];
  if(tictoc == 36) tiker = rookd4[ft];
  if(tictoc == 44) tiker = rookd3[ft];
  if(tictoc == 52) tiker = rookd2[ft];
  if(tictoc == 60) tiker = rookd1[ft];

  if(tictoc == 3) tiker = rookc8[ft];
  if(tictoc == 11) tiker = rookc7[ft];
  if(tictoc == 19) tiker = rookc6[ft];
  if(tictoc == 27) tiker = rookc5[ft];
  if(tictoc == 35) tiker = rookc4[ft];
  if(tictoc == 43) tiker = rookc3[ft];
  if(tictoc == 51) tiker = rookc2[ft];
  if(tictoc == 59) tiker = rookc1[ft];

  if(tictoc == 2) tiker = rookb8[ft];
  if(tictoc == 10) tiker = rookb7[ft];
  if(tictoc == 18) tiker = rookb6[ft];
  if(tictoc == 26) tiker = rookb5[ft];
  if(tictoc == 34) tiker = rookb4[ft];
  if(tictoc == 42) tiker = rookb3[ft];
  if(tictoc == 50) tiker = rookb2[ft];
  if(tictoc == 58) tiker = rookb1[ft];

  if(tictoc == 1) tiker = rooka8[ft];
  if(tictoc == 9) tiker = rooka7[ft];
  if(tictoc == 17) tiker = rooka6[ft];
  if(tictoc == 57) tiker = rooka1[ft];
  if(tictoc == 49) tiker = rooka2[ft];
  if(tictoc == 41) tiker = rooka3[ft];
  if(tictoc == 33) tiker = rooka4[ft];
  if(tictoc == 25) tiker = rooka5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;

  if (brd[0].boardval[tictoc] == 499) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].battackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }
/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = bishh8[ft];
  if(tictoc == 16) tiker = bishh7[ft];
  if(tictoc == 24) tiker = bishh6[ft];
  if(tictoc == 32) tiker = bishh5[ft];
  if(tictoc == 40) tiker = bishh4[ft];
  if(tictoc == 48) tiker = bishh3[ft];
  if(tictoc == 56) tiker = bishh2[ft];
  if(tictoc == 64) tiker = bishh1[ft];

  if(tictoc == 7) tiker = bishg8[ft];
  if(tictoc == 15) tiker = bishg7[ft];
  if(tictoc == 23) tiker = bishg6[ft];
  if(tictoc == 31) tiker = bishg5[ft];
  if(tictoc == 39) tiker = bishg4[ft];
  if(tictoc == 47) tiker = bishg3[ft];
  if(tictoc == 55) tiker = bishg2[ft];
  if(tictoc == 63) tiker = bishg1[ft];

  if(tictoc == 6) tiker = bishf8[ft];
  if(tictoc == 14) tiker = bishf7[ft];
  if(tictoc == 22) tiker = bishf6[ft];
  if(tictoc == 30) tiker = bishf5[ft];
  if(tictoc == 38) tiker = bishf4[ft];
  if(tictoc == 46) tiker = bishf3[ft];
  if(tictoc == 54) tiker = bishf2[ft];
  if(tictoc == 62) tiker = bishf1[ft];

  if(tictoc == 5) tiker = bishe8[ft];
  if(tictoc == 13) tiker = bishe7[ft];
  if(tictoc == 21) tiker = bishe6[ft];
  if(tictoc == 29) tiker = bishe5[ft];
  if(tictoc == 37) tiker = bishe4[ft];
  if(tictoc == 45) tiker = bishe3[ft];
  if(tictoc == 53) tiker = bishe2[ft];
  if(tictoc == 61) tiker = bishe1[ft];

  if(tictoc == 4) tiker = bishd8[ft];
  if(tictoc == 12) tiker = bishd7[ft];
  if(tictoc == 20) tiker = bishd6[ft];
  if(tictoc == 28) tiker = bishd5[ft];
  if(tictoc == 36) tiker = bishd4[ft];
  if(tictoc == 44) tiker = bishd3[ft];
  if(tictoc == 52) tiker = bishd2[ft];
  if(tictoc == 60) tiker = bishd1[ft];

  if(tictoc == 3) tiker = bishc8[ft];
  if(tictoc == 11) tiker = bishc7[ft];
  if(tictoc == 19) tiker = bishc6[ft];
  if(tictoc == 27) tiker = bishc5[ft];
  if(tictoc == 35) tiker = bishc4[ft];
  if(tictoc == 43) tiker = bishc3[ft];
  if(tictoc == 51) tiker = bishc2[ft];
  if(tictoc == 59) tiker = bishc1[ft];

  if(tictoc == 2) tiker = bishb8[ft];
  if(tictoc == 10) tiker = bishb7[ft];
  if(tictoc == 18) tiker = bishb6[ft];
  if(tictoc == 26) tiker = bishb5[ft];
  if(tictoc == 34) tiker = bishb4[ft];
  if(tictoc == 42) tiker = bishb3[ft];
  if(tictoc == 50) tiker = bishb2[ft];
  if(tictoc == 58) tiker = bishb1[ft];

  if(tictoc == 1) tiker = bisha8[ft];
  if(tictoc == 9) tiker = bisha7[ft];
  if(tictoc == 17) tiker = bisha6[ft];
  if(tictoc == 57) tiker = bisha1[ft];
  if(tictoc == 49) tiker = bisha2[ft];
  if(tictoc == 41) tiker = bisha3[ft];
  if(tictoc == 33) tiker = bisha4[ft];
  if(tictoc == 25) tiker = bisha5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;


  if (brd[0].boardval[tictoc] == 324) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].battackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }
   /*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = niteh8[ft];
  if(tictoc == 16) tiker = niteh7[ft];
  if(tictoc == 24) tiker = niteh6[ft];
  if(tictoc == 32) tiker = niteh5[ft];
  if(tictoc == 40) tiker = niteh4[ft];
  if(tictoc == 48) tiker = niteh3[ft];
  if(tictoc == 56) tiker = niteh2[ft];
  if(tictoc == 64) tiker = niteh1[ft];

  if(tictoc == 7) tiker = niteg8[ft];
  if(tictoc == 15) tiker = niteg7[ft];
  if(tictoc == 23) tiker = niteg6[ft];
  if(tictoc == 31) tiker = niteg5[ft];
  if(tictoc == 39) tiker = niteg4[ft];
  if(tictoc == 47) tiker = niteg3[ft];
  if(tictoc == 55) tiker = niteg2[ft];
  if(tictoc == 63) tiker = niteg1[ft];

  if(tictoc == 6) tiker = nitef8[ft];
  if(tictoc == 14) tiker = nitef7[ft];
  if(tictoc == 22) tiker = nitef6[ft];
  if(tictoc == 30) tiker = nitef5[ft];
  if(tictoc == 38) tiker = nitef4[ft];
  if(tictoc == 46) tiker = nitef3[ft];
  if(tictoc == 54) tiker = nitef2[ft];
  if(tictoc == 62) tiker = nitef1[ft];

  if(tictoc == 5) tiker = nitee8[ft];
  if(tictoc == 13) tiker = nitee7[ft];
  if(tictoc == 21) tiker = nitee6[ft];
  if(tictoc == 29) tiker = nitee5[ft];
  if(tictoc == 37) tiker = nitee4[ft];
  if(tictoc == 45) tiker = nitee3[ft];
  if(tictoc == 53) tiker = nitee2[ft];
  if(tictoc == 61) tiker = nitee1[ft];

  if(tictoc == 4) tiker = nited8[ft];
  if(tictoc == 12) tiker = nited7[ft];
  if(tictoc == 20) tiker = nited6[ft];
  if(tictoc == 28) tiker = nited5[ft];
  if(tictoc == 36) tiker = nited4[ft];
  if(tictoc == 44) tiker = nited3[ft];
  if(tictoc == 52) tiker = nited2[ft];
  if(tictoc == 60) tiker = nited1[ft];

  if(tictoc == 3) tiker = nitec8[ft];
  if(tictoc == 11) tiker = nitec7[ft];
  if(tictoc == 19) tiker = nitec6[ft];
  if(tictoc == 27) tiker = nitec5[ft];
  if(tictoc == 35) tiker = nitec4[ft];
  if(tictoc == 43) tiker = nitec3[ft];
  if(tictoc == 51) tiker = nitec2[ft];
  if(tictoc == 59) tiker = nitec1[ft];

  if(tictoc == 2) tiker = niteb8[ft];
  if(tictoc == 10) tiker = niteb7[ft];
  if(tictoc == 18) tiker = niteb6[ft];
  if(tictoc == 26) tiker = niteb5[ft];
  if(tictoc == 34) tiker = niteb4[ft];
  if(tictoc == 42) tiker = niteb3[ft];
  if(tictoc == 50) tiker = niteb2[ft];
  if(tictoc == 58) tiker = niteb1[ft];

  if(tictoc == 1) tiker = nitea8[ft];
  if(tictoc == 9) tiker = nitea7[ft];
  if(tictoc == 17) tiker = nitea6[ft];
  if(tictoc == 57) tiker = nitea1[ft];
  if(tictoc == 49) tiker = nitea2[ft];
  if(tictoc == 41) tiker = nitea3[ft];
  if(tictoc == 33) tiker = nitea4[ft];
  if(tictoc == 25) tiker = nitea5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;


  if (brd[0].boardval[tictoc] == 299) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].battackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }
       /*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/
  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {
 if(tictoc == 8) tiker = bishh8[ft];
  if(tictoc == 16) tiker = bishh7[ft];
  if(tictoc == 24) tiker = bishh6[ft];
  if(tictoc == 32) tiker = bishh5[ft];
  if(tictoc == 40) tiker = bishh4[ft];
  if(tictoc == 48) tiker = bishh3[ft];
  if(tictoc == 56) tiker = bishh2[ft];
  if(tictoc == 64) tiker = bishh1[ft];

  if(tictoc == 7) tiker = bishg8[ft];
  if(tictoc == 15) tiker = bishg7[ft];
  if(tictoc == 23) tiker = bishg6[ft];
  if(tictoc == 31) tiker = bishg5[ft];
  if(tictoc == 39) tiker = bishg4[ft];
  if(tictoc == 47) tiker = bishg3[ft];
  if(tictoc == 55) tiker = bishg2[ft];
  if(tictoc == 63) tiker = bishg1[ft];

  if(tictoc == 6) tiker = bishf8[ft];
  if(tictoc == 14) tiker = bishf7[ft];
  if(tictoc == 22) tiker = bishf6[ft];
  if(tictoc == 30) tiker = bishf5[ft];
  if(tictoc == 38) tiker = bishf4[ft];
  if(tictoc == 46) tiker = bishf3[ft];
  if(tictoc == 54) tiker = bishf2[ft];
  if(tictoc == 62) tiker = bishf1[ft];

  if(tictoc == 5) tiker = bishe8[ft];
  if(tictoc == 13) tiker = bishe7[ft];
  if(tictoc == 21) tiker = bishe6[ft];
  if(tictoc == 29) tiker = bishe5[ft];
  if(tictoc == 37) tiker = bishe4[ft];
  if(tictoc == 45) tiker = bishe3[ft];
  if(tictoc == 53) tiker = bishe2[ft];
  if(tictoc == 61) tiker = bishe1[ft];

  if(tictoc == 4) tiker = bishd8[ft];
  if(tictoc == 12) tiker = bishd7[ft];
  if(tictoc == 20) tiker = bishd6[ft];
  if(tictoc == 28) tiker = bishd5[ft];
  if(tictoc == 36) tiker = bishd4[ft];
  if(tictoc == 44) tiker = bishd3[ft];
  if(tictoc == 52) tiker = bishd2[ft];
  if(tictoc == 60) tiker = bishd1[ft];

  if(tictoc == 3) tiker = bishc8[ft];
  if(tictoc == 11) tiker = bishc7[ft];
  if(tictoc == 19) tiker = bishc6[ft];
  if(tictoc == 27) tiker = bishc5[ft];
  if(tictoc == 35) tiker = bishc4[ft];
  if(tictoc == 43) tiker = bishc3[ft];
  if(tictoc == 51) tiker = bishc2[ft];
  if(tictoc == 59) tiker = bishc1[ft];

  if(tictoc == 2) tiker = bishb8[ft];
  if(tictoc == 10) tiker = bishb7[ft];
  if(tictoc == 18) tiker = bishb6[ft];
  if(tictoc == 26) tiker = bishb5[ft];
  if(tictoc == 34) tiker = bishb4[ft];
  if(tictoc == 42) tiker = bishb3[ft];
  if(tictoc == 50) tiker = bishb2[ft];
  if(tictoc == 58) tiker = bishb1[ft];

  if(tictoc == 1) tiker = bisha8[ft];
  if(tictoc == 9) tiker = bisha7[ft];
  if(tictoc == 17) tiker = bisha6[ft];
  if(tictoc == 57) tiker = bisha1[ft];
  if(tictoc == 49) tiker = bisha2[ft];
  if(tictoc == 41) tiker = bisha3[ft];
  if(tictoc == 33) tiker = bisha4[ft];
  if(tictoc == 25) tiker = bisha5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;



  if (brd[0].boardval[tictoc] == 949) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].battackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }

/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = rookh8[ft];
  if(tictoc == 16) tiker = rookh7[ft];
  if(tictoc == 24) tiker = rookh6[ft];
  if(tictoc == 32) tiker = rookh5[ft];
  if(tictoc == 40) tiker = rookh4[ft];
  if(tictoc == 48) tiker = rookh3[ft];
  if(tictoc == 56) tiker = rookh2[ft];
  if(tictoc == 64) tiker = rookh1[ft];

  if(tictoc == 7) tiker = rookg8[ft];
  if(tictoc == 15) tiker = rookg7[ft];
  if(tictoc == 23) tiker = rookg6[ft];
  if(tictoc == 31) tiker = rookg5[ft];
  if(tictoc == 39) tiker = rookg4[ft];
  if(tictoc == 47) tiker = rookg3[ft];
  if(tictoc == 55) tiker = rookg2[ft];
  if(tictoc == 63) tiker = rookg1[ft];

  if(tictoc == 6) tiker = rookf8[ft];
  if(tictoc == 14) tiker = rookf7[ft];
  if(tictoc == 22) tiker = rookf6[ft];
  if(tictoc == 30) tiker = rookf5[ft];
  if(tictoc == 38) tiker = rookf4[ft];
  if(tictoc == 46) tiker = rookf3[ft];
  if(tictoc == 54) tiker = rookf2[ft];
  if(tictoc == 62) tiker = rookf1[ft];

  if(tictoc == 5) tiker = rooke8[ft];
  if(tictoc == 13) tiker = rooke7[ft];
  if(tictoc == 21) tiker = rooke6[ft];
  if(tictoc == 29) tiker = rooke5[ft];
  if(tictoc == 37) tiker = rooke4[ft];
  if(tictoc == 45) tiker = rooke3[ft];
  if(tictoc == 53) tiker = rooke2[ft];
  if(tictoc == 61) tiker = rooke1[ft];

  if(tictoc == 4) tiker = rookd8[ft];
  if(tictoc == 12) tiker = rookd7[ft];
  if(tictoc == 20) tiker = rookd6[ft];
  if(tictoc == 28) tiker = rookd5[ft];
  if(tictoc == 36) tiker = rookd4[ft];
  if(tictoc == 44) tiker = rookd3[ft];
  if(tictoc == 52) tiker = rookd2[ft];
  if(tictoc == 60) tiker = rookd1[ft];

  if(tictoc == 3) tiker = rookc8[ft];
  if(tictoc == 11) tiker = rookc7[ft];
  if(tictoc == 19) tiker = rookc6[ft];
  if(tictoc == 27) tiker = rookc5[ft];
  if(tictoc == 35) tiker = rookc4[ft];
  if(tictoc == 43) tiker = rookc3[ft];
  if(tictoc == 51) tiker = rookc2[ft];
  if(tictoc == 59) tiker = rookc1[ft];

  if(tictoc == 2) tiker = rookb8[ft];
  if(tictoc == 10) tiker = rookb7[ft];
  if(tictoc == 18) tiker = rookb6[ft];
  if(tictoc == 26) tiker = rookb5[ft];
  if(tictoc == 34) tiker = rookb4[ft];
  if(tictoc == 42) tiker = rookb3[ft];
  if(tictoc == 50) tiker = rookb2[ft];
  if(tictoc == 58) tiker = rookb1[ft];

  if(tictoc == 1) tiker = rooka8[ft];
  if(tictoc == 9) tiker = rooka7[ft];
  if(tictoc == 17) tiker = rooka6[ft];
  if(tictoc == 57) tiker = rooka1[ft];
  if(tictoc == 49) tiker = rooka2[ft];
  if(tictoc == 41) tiker = rooka3[ft];
  if(tictoc == 33) tiker = rooka4[ft];
  if(tictoc == 25) tiker = rooka5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;

  if (brd[0].boardval[tictoc] == 949) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].battackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }

/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

  for (int tictoc = 1;tictoc < 66;tictoc++){
  stop = 0;
  for (int ft = 0;ft < 18;ft++) {

  if(tictoc == 8) tiker = kingh8[ft];
  if(tictoc == 16) tiker = kingh7[ft];
  if(tictoc == 24) tiker = kingh6[ft];
  if(tictoc == 32) tiker = kingh5[ft];
  if(tictoc == 40) tiker = kingh4[ft];
  if(tictoc == 48) tiker = kingh3[ft];
  if(tictoc == 56) tiker = kingh2[ft];
  if(tictoc == 64) tiker = kingh1[ft];

  if(tictoc == 7) tiker = kingg8[ft];
  if(tictoc == 15) tiker = kingg7[ft];
  if(tictoc == 23) tiker = kingg6[ft];
  if(tictoc == 31) tiker = kingg5[ft];
  if(tictoc == 39) tiker = kingg4[ft];
  if(tictoc == 47) tiker = kingg3[ft];
  if(tictoc == 55) tiker = kingg2[ft];
  if(tictoc == 63) tiker = kingg1[ft];

  if(tictoc == 6) tiker = kingf8[ft];
  if(tictoc == 14) tiker = kingf7[ft];
  if(tictoc == 22) tiker = kingf6[ft];
  if(tictoc == 30) tiker = kingf5[ft];
  if(tictoc == 38) tiker = kingf4[ft];
  if(tictoc == 46) tiker = kingf3[ft];
  if(tictoc == 54) tiker = kingf2[ft];
  if(tictoc == 62) tiker = kingf1[ft];

  if(tictoc == 5) tiker = kinge8[ft];
  if(tictoc == 13) tiker = kinge7[ft];
  if(tictoc == 21) tiker = kinge6[ft];
  if(tictoc == 29) tiker = kinge5[ft];
  if(tictoc == 37) tiker = kinge4[ft];
  if(tictoc == 45) tiker = kinge3[ft];
  if(tictoc == 53) tiker = kinge2[ft];
  if(tictoc == 61) tiker = kinge1[ft];

  if(tictoc == 4) tiker = kingd8[ft];
  if(tictoc == 12) tiker = kingd7[ft];
  if(tictoc == 20) tiker = kingd6[ft];
  if(tictoc == 28) tiker = kingd5[ft];
  if(tictoc == 36) tiker = kingd4[ft];
  if(tictoc == 44) tiker = kingd3[ft];
  if(tictoc == 52) tiker = kingd2[ft];
  if(tictoc == 60) tiker = kingd1[ft];

  if(tictoc == 3) tiker = kingc8[ft];
  if(tictoc == 11) tiker = kingc7[ft];
  if(tictoc == 19) tiker = kingc6[ft];
  if(tictoc == 27) tiker = kingc5[ft];
  if(tictoc == 35) tiker = kingc4[ft];
  if(tictoc == 43) tiker = kingc3[ft];
  if(tictoc == 51) tiker = kingc2[ft];
  if(tictoc == 59) tiker = kingc1[ft];

  if(tictoc == 2) tiker = kingb8[ft];
  if(tictoc == 10) tiker = kingb7[ft];
  if(tictoc == 18) tiker = kingb6[ft];
  if(tictoc == 26) tiker = kingb5[ft];
  if(tictoc == 34) tiker = kingb4[ft];
  if(tictoc == 42) tiker = kingb3[ft];
  if(tictoc == 50) tiker = kingb2[ft];
  if(tictoc == 58) tiker = kingb1[ft];

  if(tictoc == 1) tiker = kinga8[ft];
  if(tictoc == 9) tiker = kinga7[ft];
  if(tictoc == 17) tiker = kinga6[ft];
  if(tictoc == 57) tiker = kinga1[ft];
  if(tictoc == 49) tiker = kinga2[ft];
  if(tictoc == 41) tiker = kinga3[ft];
  if(tictoc == 33) tiker = kinga4[ft];
  if(tictoc == 25) tiker = kinga5[ft];
  
  if (tiker == 90) ft = 18;
  if (tiker == 90) tiker = 0;



  if (brd[0].boardval[tictoc] == 4999) {
  if(tiker == 0) stop = 0;

   if((tiker > 0) & (brd[0].boardval[tiker] == 0) & (stop == 0)){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].battackpos[tiker] = 1;
                       }
   if(((tiker > 0) & (stop == 0)) & ((brd[0].boardval[tiker] == 100) ||
    (brd[0].boardval[tiker] == 500) || (brd[0].boardval[tiker] == 325) ||
    (brd[0].boardval[tiker] == 300) || (brd[0].boardval[tiker] == 950) ||
    (brd[0].boardval[tiker] == 5000))){
    brd[0].movelist[ct] = tictoc;
    brd[0].movelist[ct+1] = tiker;
    ct = ct + 2;
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }
    if(((tiker > 0) & (stop == 0)) &((brd[0].boardval[tiker] == 99) ||
    (brd[0].boardval[tiker] == 499) || (brd[0].boardval[tiker] == 324) ||
    (brd[0].boardval[tiker] == 299) || (brd[0].boardval[tiker] == 949) ||
    (brd[0].boardval[tiker] == 4999))){
    brd[0].battackpos[tiker] = 1;
    stop = 1;
                       }






                                  }
                             }
                         }

/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

// castleing

if(brd[0].castlerule[2] == 1) {
  if(brd[0].boardval[5] == 4999) {
    if(brd[0].boardval[8] == 499)  {
      if(brd[0].boardval[7] == 0)     {
         if(brd[0].boardval[6] == 0)     {
         if(brd[0].attackpos[5] == 0)   {
         if(brd[0].attackpos[6] == 0)   {
         if(brd[0].attackpos[7] == 0)   {
           brd[0].movelist[ct] = 5;
           brd[0].movelist[ct+1] = 7;
           ct = ct + 2;
}}}}}}}}

if(brd[0].castlerule[3] == 1) {
  if(brd[0].boardval[5] == 4999) {
    if(brd[0].boardval[1] == 499)  {
      if(brd[0].boardval[4] == 0)     {
         if(brd[0].boardval[3] == 0)     {
            if(brd[0].boardval[2] == 0)     {
         if(brd[0].attackpos[5] == 0)   {
         if(brd[0].attackpos[4] == 0)   {
         if(brd[0].attackpos[3] == 0)   {
           brd[0].movelist[ct] = 5;
           brd[0].movelist[ct+1] = 3;
           ct = ct + 2;
}}}}}}}}}
// castleing



// null end move list
//brd[0].movelist[kt] = 0;
//brd[0].movelist[kt+1] = 0;
//brd[0].movelist[kt+2] = 0;
brd[0].movelist[ct] = 0;
brd[0].movelist[ct+1] = 0;
//brd[0].movelist[ct+2] = 0;
}

int totup(bord brd[1],int sd[1],int bw){
 int black = 0,n=0,n2=0,nblack = 0;
 for(int f=1;f<66;f++){
  if (brd[0].battackpos[f] == 1) nblack = nblack + 5;
  if (brd[0].attackpos[f] == 1) black = black + 5;
  if (brd[0].boardval[f] == 99) nblack = nblack + 100;
  if (brd[0].boardval[f] == 100) black = black + 100;
  if (brd[0].boardval[f] == 324) nblack = nblack + 325;
  if (brd[0].boardval[f] == 325) black = black + 325;
  if (brd[0].boardval[f] == 299) nblack = nblack + 300;
  if (brd[0].boardval[f] == 300) black = black + 300;
  if (brd[0].boardval[f] == 499) nblack = nblack + 500;
  if (brd[0].boardval[f] == 500) black = black + 500;
  if (brd[0].boardval[f] == 949) nblack = nblack + 950;
  if (brd[0].boardval[f] == 950) black = black + 950;
  if (brd[0].boardval[f] == 4999) nblack = nblack + 5000;
  if (brd[0].boardval[f] == 5000) black = black + 5000;
  if (brd[0].boardval[f] == 4999) n = n + 1;
  if (brd[0].boardval[f] == 5000) n2 = n2 + 1;
 }
 if(bw==1){
 int fs = 0;
 if(sd[0] == 1) {
 fs = fs + nblack;
 fs = fs - black;
 if (n == 0) fs =-30000;
 if (n2 == 0) fs = 30000;
 return fs;
                 }
 fs = 0;
 if(sd[0] == 0) {
 fs = fs + black;
 fs = fs - nblack;
 if (n == 0) fs = 30000;
 if (n2 == 0) fs = -30000;
 return -fs;
                 }
           }
 if(bw==0){
 int fs = 0;
 if(sd[0] == 1) {
 fs = fs + nblack;
 fs = fs - black;
 if (n == 0) fs =  30000;
 if (n2 == 0) fs = -30000;
 return -fs;
                 }
 fs = 0;
 if(sd[0] == 0) {
 fs = fs + black;
 fs = fs - nblack;
 if (n == 0) fs = 30000;
 if (n2 == 0) fs = -30000;
 return fs;
                 }
           }
}
////////////////////////////////////////////////////////////////////////////////
//   ALPHA BETA
////////////////////////////////////////////////////////////////////////////////
/*
double alphabeta(int depth, double alpha, double beta)
{
    if (depth <= 0 || game is over) return evaluation();
    generate and sort list of moves available in the position
    for (each move m) {
        make move m;
        double val = -alphabeta(depth - 1, -beta, -alpha);
        unmake move m;
        if (val >= beta) return val;
        if (val > alpha) alpha = val;
    }
    return alpha;
}
*/
////////////////////////////////////////////////////////////////////////////////
int evaluate2(bord brd[1],int sd[1],int bw,int cnt){

unsigned char yuppy[8];
//////////////////////////////////////////////////////////////////////////////
int king[64] = {       2  , 11,  8, 0,  0, 5, 11, 2,
                        3,  3, 5,5, 5,5, 3,3,
                        5,  5, 8,8, 8,8, 5, 5,
                        8,  8,13,13,13,13,8,8,
                        13,13,21,21,21,21,13,13,
                        20,21,36,36,36,36,20,20,
                        36,36,54,54,54,54,36,36,
                        54,54,90,90,90,90,54,54};
                        //////////////////////////////////
int Bking[64] = {        54,54,90,90,90,90,54,54,
                        36,36,54,54,54,54,36,36,
                        20,20,36,36,36,36,20,20,
                        13,13,20,20,20,20,13,13,
                        8, 8, 13,13,13,13, 8, 8,
                        5, 5,  8,8,  8, 8, 5,5,
                        3, 3,  5,5,  5, 5, 3,3,
                        2,  11,   8, 0,   0,  5,  11, 2};
                        /////////////////////////////////
int bishop[64] = {      0,0,0,0,0,0,0,0,
                        0,12, 5,12,12, 5,12,0,
                        0, 6, 4,14,14, 4, 6,0,
                        0, 4,14, 4, 4,14, 4,0,
                        0, 4,14, 4, 4,14, 4,0,
                        0, 4, 4,14,14, 4, 6,0,
                        0,12, 5,12,12, 5,12,0,
                        0,0,0,0,0,0,0,0};
                        /////////////////////////////////
                        /////////////////////////////////
int wrook[64] = {        30,30,30,30,30,30,30,30,
                        16,16, 16,16,16, 16,16,16,
                        -6, -6, -4,-14,-14, -4, -6,-6,
                        -6, -4,-14, -4, -4,-14, -4,-6,
                        -6, -4,-14, -4, -4,-14, -4,-6,
                        -6, -4, -4,-14,-14, -4, -6,-6,
                        6,6, 6,6,16, 6,6,6,
                        20,20,20,20,27,20,20,20};
                        /////////////////////////////////
                        /////////////////////////////////

                        /////////////////////////////////
int knight[64] = {     0,0,0,0,0,0,0,0,
                        0 , 0, 0, 0, 0, 0, 0,0,
                         0 , 2, 6, 6, 6, 6, 2, 0,
                        0 , 1, 3,8 , 8, 3, 1,0,
                        0 , 1, 3,8 , 8, 3, 1,0,
                         0 , 2, 6, 6, 6, 6, 2,  0,
                        0 , 0, 0, 0, 0, 0, 0,0,
                        0,0,0,0,0,0,0,0};
                        ///////////////////////////////////
int Bpawn[64] = {        0,0,0,0,0,0,0,0,
                         1, 1, 1,0,0, 1, 1, 1,
                         1, 2, 3, 4, 4, 3, 2, 1,
                         2, 4, 6, 9, 9, 6, 4, 2,
                         3, 6, 9,12,12, 9, 6, 3,
                         4, 8,12,16,16,12, 8, 4,
                         116,118,116,121,121,116,111, 116,
                         0, 0, 0, 0, 0, 0, 0, 0};
                         //////////////////////////////
int pawn[64] = {            0, 0, 0, 0, 0, 0, 0, 0,
                            116, 116,116,121,121,116,110,116,
                            4, 8, 12,16,16,12, 8,4,
                            3, 6,  9,12,12, 9, 6,3,
                            2, 4,  6, 9, 9, 6, 4,2,
                            1, 2,  3, 4, 4, 3, 2,1,
                            1, 1,  1,0,0, 1, 1,1,
                            0,0,0,0,0,0,0,0};
                            ///////////////////////////////
int endgameking[64] = { 0,4,2, 1, 1,2,4,0,
                        0, 5, 5, 5, 5, 5, 5,3,
                        1, 6, 10,10,10,10,6,1,
                         0, 6, 10,17,17,10,6, 0,
                         0, 6, 10,17,17,10,6, 0,
                        1, 5, 10,10,10,10,5,1,
                        3, 5,  5, 5, 5, 5,5,3,
                        0,4, 2, 1, 1,2,4,0};
  ////////////////////////////////////////////////////////////////////////////
 int         rook[64] = { 3,3,3, 3, 3,3,3,3,
                        3, 3, 3, 3, 3, 3, 3,3,
                        3, 3, 3,3,3,3,3,3,
                         3, 3, 3,4,4,3,3, 3,
                         3, 3, 3,4,4,3,3, 3,
                        3, 3, 3,3,3,3,3,3,
                        5, 5,  5, 5, 5, 5,5,5,
                        10,10,10, 10, 10,10,10,10};


                          //////////////////////////////
 int         brook[64] = { 10,10,10, 10, 10,10,10,10,

                        5, 5, 5, 5, 5, 5, 5,5,
                        3, 3, 3,3,3,3,3,3,
                         3, 3, 3,4,4,3,3, 3,
                         3, 3, 3,4,4,3,3, 3,
                        3, 3, 3,3,3,3,3,3,
                        3, 3,  3, 3, 3, 3,3,3,
                        3,3,3, 3, 3,3,3,3};


                          //////////////////////////////


 // fill attack board


int wat[64] = {      0,0,0,0,0,0,0,0,
                     0,0,0,0,0,0,0,0,
                     0,0,0,0,0,0,0,0,
                     0,0,0,0,0,0,0,0,
                     0,0,0,0,0,0,0,0,
                     0,0,0,0,0,0,0,0,
                     0,0,0,0,0,0,0,0,
                     0,0,0,0,0,0,0,0};
/////////////////////////////////
int bat[64] = {      0,0,0,0,0,0,0,0,
                     0,0,0,0,0,0,0,0,
                     0,0,0,0,0,0,0,0,
                     0,0,0,0,0,0,0,0,
                     0,0,0,0,0,0,0,0,
                     0,0,0,0,0,0,0,0,
                     0,0,0,0,0,0,0,0,
                     0,0,0,0,0,0,0,0};

/////////////////////////////////

  // first lets add up material

  int mking = 5000;
  int mqueen = 950;
  int mrook = 500;
  int mknight = 300;
  int mbishop = 325;
  int mpawn = 100;
  int wmaterial =0;
  int bmaterial =0;
  int attack =4 ;

       char piece[] = {"rnbqkpRNBQKP "};
       int row = 0, rank =0,wk=0,bk=0;
       unsigned char adder=0,n=0,n2=0;
       char board64[64];
       for (int i =0;i<64;i++) board64[i] = piece[12];

        for (int i =0;i<64;i++) {
          if(brd[0].attackpos[i+1] == 1) wat[i] = 1;
          if(brd[0].battackpos[i+1] == 1) bat[i] = 1;

        }
        for(int t = 0;t<64;t++){
        if(brd[0].boardval[t+1] == 499) {
         board64[t] = piece[0];
        }
        if(brd[0].boardval[t+1] == 299) {
         board64[t] = piece[1];
        }
        if(brd[0].boardval[t+1] == 324) {
         board64[t] = piece[2];
        }
        if(brd[0].boardval[t+1] == 949) {
         board64[t] = piece[3];
        }
        if(brd[0].boardval[t+1] == 4999) {
         board64[t] = piece[4];
         n = n + 1;
        }
        if(brd[0].boardval[t+1] == 99) {
         board64[t] = piece[5];
        }
        if(brd[0].boardval[t+1] == 500) {
         board64[t] = piece[6];
        }
        if(brd[0].boardval[t+1] == 300) {
         board64[t] = piece[7];
        }
        if(brd[0].boardval[t+1] == 325) {
         board64[t] = piece[8];
        }
        if(brd[0].boardval[t+1] == 950) {
         board64[t] = piece[9];
        }
        if(brd[0].boardval[t+1] == 5000) {
         board64[t] = piece[10];
           n2 = n2 + 1;
        }
        if(brd[0].boardval[t+1] == 100) {
         board64[t] = piece[11];
        }

        }


              // closed or open position bonus
              int bnadd = 0;
              if (cnt > 30) {

              for (int i =0;i<64;i++) {
                     if(board64[i] == piece[12]) bnadd = bnadd + 1;
                     }
              if (bnadd > 19) {
                     mbishop = mbishop + 0;
              }
              if (bnadd < 20) {
                     mknight = mknight + 0;
              }
              }

              // char piece[13] = {"rnbqkpRNBQKP "};
              for (int i =0;i<64;i++)  {
                   if (board64[i] == piece[0]){
                   bmaterial = bmaterial + brook[i];
                   bmaterial = bmaterial + mrook;   }
                   if (board64[i] == piece[1]){
                   bmaterial = bmaterial + knight[i];
                   bmaterial = bmaterial + mknight;  }
                   if (board64[i] == piece[2]){
                   bmaterial = bmaterial + bishop[i];
                   bmaterial = bmaterial + mbishop; }
                   if (board64[i] == piece[3]){
                   bmaterial = bmaterial + bishop[i];
                   bmaterial = bmaterial + mqueen;  }
                   if (board64[i] == piece[4]){
                   bk = i;
                   bmaterial = bmaterial + Bking[i];
                   bmaterial = bmaterial + mking;  }
                   if (board64[i] == piece[5]){
                   bmaterial = bmaterial + Bpawn[i];
                   bmaterial = bmaterial + mpawn;    }

                   if (board64[i] == piece[6]){
                   wmaterial = wmaterial + rook[i];
                   wmaterial = wmaterial + mrook;   }
                   if (board64[i] == piece[7]){
                   wmaterial = wmaterial + knight[i];
                   wmaterial = wmaterial + mknight;  }
                   if (board64[i] == piece[8]){
                   wmaterial = wmaterial + bishop[i];
                   wmaterial = wmaterial + mbishop; }
                   if (board64[i] == piece[9]){
                   wmaterial = wmaterial + bishop[i];
                   wmaterial = wmaterial + mqueen; }
                   if (board64[i] == piece[10]){
                   wk = i;
                   wmaterial = wmaterial + king[i];
                   wmaterial = wmaterial + mking; }
                   if (board64[i] == piece[11]){
                   wmaterial = wmaterial + pawn[i];
                   wmaterial = wmaterial + mpawn;}
                    }
              //endgame rook bonus

                   bnadd = 0;
                   if (wmaterial < 6750) {
                     for (int i =0;i<64;i++) {
                     if(board64[i] == piece[6]) wmaterial = wmaterial + 125;
                     }
                     }
                   bnadd = 0;
                   if (bmaterial < 6750) {
                     for (int i =0;i<64;i++) {
                     if(board64[i] == piece[0]) bmaterial = bmaterial + 125;
                     }
                     }
                    if (wmaterial < 6650) {
                     for (int i =0;i<64;i++) {
                     if(board64[i] == piece[10]) wmaterial = wmaterial + endgameking[i];
                     }
                     }
                    if (bmaterial < 6650) {
                     for (int i =0;i<64;i++) {
                     if(board64[i] == piece[4]) bmaterial = bmaterial + endgameking[i];
                     }
                     }



// knight attacked bonus

for (int i =0;i<64;i++) {
 if (board64[i] == piece[7]) {
  if (bat[i] == 1) bmaterial = bmaterial + 7;
 }
 if (board64[i] == piece[1]) {
  if (wat[i] == 1) wmaterial = wmaterial + 7;
 }
  if (board64[i] == piece[9]) {
  if (bat[i] == 1) bmaterial = bmaterial + 33;
 }
 if (board64[i] == piece[3]) {
  if (wat[i] == 1) wmaterial = wmaterial + 33;
 }
}

// castleing

if (cnt < 14) {
if (board64[62] == piece[10]) {
if (board64[61] == piece[6]) {
wmaterial = wmaterial + 50;
}}
if (board64[58] == piece[10]) {
if (board64[59] == piece[6]) {
wmaterial = wmaterial + 50;
}}

if (board64[6] == piece[4]) {
if (board64[5] == piece[0]) {
bmaterial = bmaterial + 50;
}}
if (board64[3] == piece[4]) {
if (board64[2] == piece[0]) {
bmaterial = bmaterial + 50;
}}
             }
// end castleing
// king shield
if (board64[62] == piece[10]) {
if ((board64[53] == piece[6]) || (board64[53] == piece[7]) ||
    (board64[53] == piece[8]) || (board64[53] == piece[9]) ||
    (board64[53] == piece[11]))
{
wmaterial = wmaterial + 20;
}}
if (board64[62] == piece[10]) {
if ((board64[54] == piece[6]) || (board64[54] == piece[7]) ||
    (board64[54] == piece[8]) || (board64[54] == piece[9]) ||
    (board64[54] == piece[11]))
{
wmaterial = wmaterial + 20;
}}
if (board64[62] == piece[10]) {
if ((board64[55] == piece[6]) || (board64[55] == piece[7]) ||
    (board64[55] == piece[8]) || (board64[55] == piece[9]) ||
    (board64[55] == piece[11]))
{
wmaterial = wmaterial + 20;
}}
if ((board64[58] == piece[10]) || (board64[57] == piece[10])){
if ((board64[48] == piece[6]) || (board64[48] == piece[7]) ||
    (board64[48] == piece[8]) || (board64[48] == piece[9]) ||
    (board64[48] == piece[11]))
{
wmaterial = wmaterial + 20;
}}
if (board64[58] == piece[10]) {
if ((board64[49] == piece[6]) || (board64[49] == piece[7]) ||
    (board64[49] == piece[8]) || (board64[49] == piece[9]) ||
    (board64[49] == piece[11]))
{
wmaterial = wmaterial + 20;
}}
if (board64[58] == piece[10]) {
if ((board64[50] == piece[6]) || (board64[50] == piece[7]) ||
    (board64[50] == piece[8]) || (board64[50] == piece[9]) ||
    (board64[50] == piece[11]))
{
wmaterial = wmaterial + 20;
}}
///// black
if (board64[6] == piece[4]) {
if ((board64[13] == piece[6]) || (board64[13] == piece[7]) ||
    (board64[13] == piece[8]) || (board64[13] == piece[9]) ||
    (board64[13] == piece[11]))
{
bmaterial = bmaterial + 20;
}}
if (board64[6] == piece[4]) {
if ((board64[14] == piece[6]) || (board64[14] == piece[7]) ||
    (board64[14] == piece[8]) || (board64[14] == piece[9]) ||
    (board64[14] == piece[11]))
{
bmaterial = bmaterial + 20;
}}
if (board64[6] == piece[4]) {
if ((board64[15] == piece[6]) || (board64[15] == piece[7]) ||
    (board64[15] == piece[8]) || (board64[15] == piece[9]) ||
    (board64[15] == piece[11]))
{
bmaterial = bmaterial + 20;
}}
if ((board64[2] == piece[4]) || (board64[1] == piece[4])){
if ((board64[8] == piece[6]) || (board64[8] == piece[7]) ||
    (board64[8] == piece[8]) || (board64[8] == piece[9]) ||
    (board64[8] == piece[11]))
{
bmaterial = bmaterial + 20;
}}
if ((board64[2] == piece[4]) || (board64[1] == piece[4])){
if ((board64[9] == piece[6]) || (board64[9] == piece[7]) ||
    (board64[9] == piece[8]) || (board64[9] == piece[9]) ||
    (board64[9] == piece[11]))
{
bmaterial = bmaterial + 20;
}}
if ((board64[2] == piece[4]) || (board64[1] == piece[4])){
if ((board64[10] == piece[6]) || (board64[10] == piece[7]) ||
    (board64[10] == piece[8]) || (board64[10] == piece[9]) ||
    (board64[10] == piece[11]))
{
bmaterial = bmaterial + 20;
}}
// end king shield

// attack king



int bkp =90,bkm=90,dbk=90,dbkp=90,dbkm=90,ubk=90,ubkp=90,ubkm=90;
if (((bk < 7) & (bk > -1))  || ((bk < 15) & (bk > 7))  ||
    ((bk < 23) & (bk > 15)) || ((bk < 31) & (bk > 23)) ||
    ((bk < 39) & (bk > 31)) || ((bk < 47) & (bk > 39)) ||
    ((bk < 55) & (bk > 47)) ||  ((bk < 63) & (bk > 55)))
         bkp = bk +1;
if (((bk < 8) & (bk >0)) || ((bk <16) & (bk > 8))    ||
    ((bk <24) & (bk > 16)) || ((bk <32) & (bk > 24)) ||
    ((bk <40) & (bk > 32)) ||  ((bk <48) & (bk > 40)) ||
    ((bk <56) & (bk > 48)) ||  ((bk <64) & (bk > 57)))
bkm = bk -1;

if (bk < 56) {
dbkp = bkp +8;
dbk= bk+8;
dbkm=bkm+8;
}
if (bk > 7) {
ubkp = bkp - 8;
ubk= bk - 8;
ubkm=bkm - 8;
}
int wkp =90,wkm=90,dwk=90,dwkp=90,dwkm=90,uwk=90,uwkp=90,uwkm=90;
if (((wk < 7) & (wk > -1))  || ((wk < 15) & (wk > 7))  ||
    ((wk < 23) & (wk > 15)) || ((wk < 31) & (wk > 23)) ||
    ((wk < 39) & (wk > 31)) || ((wk < 47) & (wk > 39)) ||
    ((wk < 55) & (wk > 47)) ||  ((wk < 63) & (wk > 55)))
         wkp = wk +1;
if (((wk < 8) & (wk >0)) || ((wk <16) & (wk > 8))    ||
    ((wk <24) & (wk > 16)) || ((wk <32) & (wk > 24)) ||
    ((wk <40) & (wk > 32)) ||  ((wk <48) & (wk > 40)) ||
    ((wk <56) & (wk > 48)) ||  ((wk <64) & (wk > 57)))
wkm = wk -1;

if (wk < 56) {
dwkp = wkp +8;
dwk= wk+8;
dwkm=wkm+8;
}
if (wk > 7) {
uwkp = wkp - 8;
uwk= wk - 8;
uwkm=wkm - 8;
}
if (cnt > 10) {
 if((wk < 90) & (bat[wk] == 1)) bmaterial = bmaterial + 51;
  if((wkp < 90) & (bat[wkp] == 1)) bmaterial = bmaterial + 25;
    if((wkm < 90) & (bat[wkm] == 1)) bmaterial = bmaterial + 25;
  if((dwk < 90) & (bat[dwk] == 1)) bmaterial = bmaterial + 25;
  if((dwkp< 90) & (bat[dwkp] == 1)) bmaterial = bmaterial + 25;
    if((dwkm <90) & (bat[dwkm] == 1)) bmaterial = bmaterial + 25;
   if((uwk < 90) & (bat[uwk] == 1)) bmaterial = bmaterial + 25;
  if((uwkp<90) & (bat[uwkp] == 1)) bmaterial = bmaterial + 25;
    if((uwkm<90) & (bat[uwkm] == 1)) bmaterial = bmaterial + 25;

  if((bk < 90) & (wat[bk] == 1)) wmaterial = wmaterial + 51;
  if((bkp > 90) & (wat[bkp] == 1)) wmaterial = wmaterial + 25;
    if((bkm < 90) & (wat[bkm] == 1)) wmaterial = wmaterial + 25;
  if((dbk<90) & (wat[dbk] == 1)) wmaterial = wmaterial + 25;
  if((dbkp <90) & (wat[dbkp] == 1)) wmaterial = wmaterial + 25;
    if((dbkm <90) & (wat[dbkm] == 1)) wmaterial = wmaterial + 25;
   if((ubk <90) & (wat[ubk] == 1)) wmaterial = wmaterial + 25;
  if((ubkp < 90) & (wat[ubkp] == 1)) wmaterial = wmaterial + 25;
    if((ubkm <90) & (wat[ubkm] == 1)) wmaterial = wmaterial + 25;
           }
if (wmaterial < 5400) {
 if((wk < 90) & (bat[wk] == 1)) bmaterial = bmaterial + 65;
       }
  if(bmaterial < 5400){
  if((bk < 90) & (wat[bk] == 1)) wmaterial = wmaterial + 65;

  }


 for (int f=0;f<64;f++) {
  if(wat[f] == 1) wmaterial = wmaterial + attack;
  if(bat[f] == 1) bmaterial = bmaterial + attack;

 }

// end attack king

// development bonus
if (cnt < 10) {
if (board64[3] == piece[3]) bmaterial = bmaterial + 15;
if (board64[59] == piece[9]) wmaterial = wmaterial + 15;

if (board64[1] == piece[1]) wmaterial = wmaterial + 15;
if (board64[6] == piece[1]) wmaterial = wmaterial + 15;
if (board64[2] == piece[2]) wmaterial = wmaterial + 15;
if (board64[5] == piece[2]) wmaterial = wmaterial + 15;


if (board64[57] == piece[7]) bmaterial = bmaterial + 17;
if (board64[62] == piece[7]) bmaterial = bmaterial + 17;
if (board64[58] == piece[8]) bmaterial = bmaterial + 17;
if (board64[61] == piece[8]) bmaterial = bmaterial + 17;
}

if (cnt < 14) {
if (board64[51] == piece[11]) bmaterial = bmaterial + 32;
if (board64[52] == piece[11]) bmaterial = bmaterial + 32;

if (board64[11] == piece[5]) wmaterial = wmaterial + 33;
if (board64[12] == piece[5]) wmaterial = wmaterial + 33;


}
if (board64[53] == piece[11]) wmaterial = wmaterial + 3;
if (board64[54] == piece[11]) wmaterial = wmaterial + 3;
if (board64[55] == piece[11]) wmaterial = wmaterial + 3;
if (board64[48] == piece[11]) wmaterial = wmaterial + 3;
if (board64[49] == piece[11]) wmaterial = wmaterial + 3;
if (board64[50] == piece[11]) wmaterial = wmaterial + 3;

if (board64[8] == piece[5]) bmaterial = bmaterial + 3;
if (board64[9] == piece[5]) bmaterial = bmaterial + 3;
if (board64[10] == piece[5]) bmaterial = bmaterial + 3;
if (board64[13] == piece[5]) bmaterial = bmaterial + 3;
if (board64[14] == piece[5]) bmaterial = bmaterial + 3;
if (board64[15] == piece[5]) bmaterial = bmaterial + 3;

if (cnt < 20) {
if ((board64[6] == piece[4]) & (board64[5] == piece[0]))
   bmaterial = bmaterial + 60;
if ((board64[2] == piece[4]) & (board64[3] == piece[0]))
   bmaterial = bmaterial + 60;

if ((board64[62] == piece[10]) & (board64[61] == piece[6]))
   bmaterial = bmaterial + 60;
if ((board64[58] == piece[10]) & (board64[59] == piece[6]))
   bmaterial = bmaterial + 60;



               }

// char piece[13] = {"rnbqkpRNBQKP "};
// end development bonus

// 00 01 02 03 04 05 06 07
// 08 09 10 11 12 13 14 15
// 16 17 18 19 20 21 22 23
// 24 25 26 27 28 29 30 31
// 32 33 34 35 36 37 38 39
// 40 41 42 43 44 45 46 47
// 48 49 50 51 52 53 54 55
// 56 57 58 59 60 61 62 63



int rh = 0;
int rn = 0;
for (int rb = 0; rb < 8;rb++) {
for (int re = 0; re < 8;re++) {


  if (board64[(rb*8)+re] == piece[6]) {
  if(board64[(rb*8)+0] == piece[6]) wmaterial = wmaterial + 8;
 if(board64[(rb*8)+1] == piece[6]) wmaterial = wmaterial + 8;
 if(board64[(rb*8)+2] == piece[6]) wmaterial = wmaterial + 8;
 if(board64[(rb*8)+3] == piece[6]) wmaterial = wmaterial + 8;
 if(board64[(rb*8)+4] == piece[6]) wmaterial = wmaterial + 8;
 if(board64[(rb*8)+5] == piece[6]) wmaterial = wmaterial + 8;
 if(board64[(rb*8)+6] == piece[6]) wmaterial = wmaterial + 8;
 if(board64[(rb*8)+7] == piece[6]) wmaterial = wmaterial + 8;


  }
 if (board64[(rb*8)+re] == piece[0]) {
  if(board64[(rb*8)+0] == piece[0]) bmaterial = bmaterial + 8;
 if(board64[(rb*8)+1] == piece[0]) bmaterial = bmaterial + 8;
 if(board64[(rb*8)+2] == piece[0]) bmaterial = bmaterial + 8;
 if(board64[(rb*8)+3] == piece[0]) bmaterial = bmaterial + 8;
 if(board64[(rb*8)+4] == piece[0]) bmaterial = bmaterial + 8;
 if(board64[(rb*8)+5] == piece[0]) bmaterial = bmaterial + 8;
 if(board64[(rb*8)+6] == piece[0]) bmaterial = bmaterial + 8;
 if(board64[(rb*8)+7] == piece[0]) bmaterial = bmaterial + 8;


  }
 if (board64[(rb*8)+re] == piece[0]) {
  if(board64[(rb*8)+0] == piece[12]) bmaterial = bmaterial + 2;
 if(board64[(rb*8)+1] == piece[12]) bmaterial = bmaterial + 2;
 if(board64[(rb*8)+2] == piece[12]) bmaterial = bmaterial + 2;
 if(board64[(rb*8)+3] == piece[12]) bmaterial = bmaterial + 2;
 if(board64[(rb*8)+4] == piece[12]) bmaterial = bmaterial + 2;
 if(board64[(rb*8)+5] == piece[12]) bmaterial = bmaterial + 2;
 if(board64[(rb*8)+6] == piece[12]) bmaterial = bmaterial + 2;
 if(board64[(rb*8)+7] == piece[12]) bmaterial = bmaterial + 2;


  }
 if (board64[(rb*8)+re] == piece[6]) {
  if(board64[(rb*8)+0] == piece[12]) wmaterial = wmaterial + 2;
 if(board64[(rb*8)+1] == piece[12]) wmaterial = wmaterial + 2;
 if(board64[(rb*8)+2] == piece[12]) wmaterial = wmaterial + 2;
 if(board64[(rb*8)+3] == piece[12]) wmaterial = wmaterial + 2;
 if(board64[(rb*8)+4] == piece[12]) wmaterial = wmaterial + 2;
 if(board64[(rb*8)+5] == piece[12]) wmaterial = wmaterial + 2;
 if(board64[(rb*8)+6] == piece[12]) wmaterial = wmaterial + 2;
 if(board64[(rb*8)+7] == piece[12]) wmaterial = wmaterial + 2;


  }
  if (board64[(rb*8)+re] == piece[6]) {
  if((board64[(rb*8)+0] != piece[12]) || (board64[(rb*8)+0] != piece[6]) || (board64[(rb*8)+0] != piece[0]) || (board64[(rb*8)+0] != piece[1]) || (board64[(rb*8)+0] != piece[2]) || (board64[(rb*8)+0] != piece[3]) || (board64[(rb*8)+0] != piece[4]) || (board64[(rb*8)+0] != piece[5]))bmaterial = bmaterial + 6;
    if((board64[(rb*8)+1] != piece[12]) || (board64[(rb*8)+1] != piece[6]) || (board64[(rb*8)+0] != piece[0]) || (board64[(rb*8)+0] != piece[1]) || (board64[(rb*8)+0] != piece[2]) || (board64[(rb*8)+0] != piece[3]) || (board64[(rb*8)+0] != piece[4]) || (board64[(rb*8)+0] != piece[5]))bmaterial = bmaterial + 6;
  if((board64[(rb*8)+2] != piece[12]) || (board64[(rb*8)+2] != piece[6]) || (board64[(rb*8)+0] != piece[0]) || (board64[(rb*8)+0] != piece[1]) || (board64[(rb*8)+0] != piece[2]) || (board64[(rb*8)+0] != piece[3]) || (board64[(rb*8)+0] != piece[4]) || (board64[(rb*8)+0] != piece[5]))bmaterial = bmaterial + 6;
  if((board64[(rb*8)+3] != piece[12]) || (board64[(rb*8)+3] != piece[6]) || (board64[(rb*8)+0] != piece[0]) || (board64[(rb*8)+0] != piece[1]) || (board64[(rb*8)+0] != piece[2]) || (board64[(rb*8)+0] != piece[3]) || (board64[(rb*8)+0] != piece[4]) || (board64[(rb*8)+0] != piece[5]))bmaterial = bmaterial + 6;
  if((board64[(rb*8)+4] != piece[12]) || (board64[(rb*8)+4] != piece[6]) || (board64[(rb*8)+0] != piece[0]) || (board64[(rb*8)+0] != piece[1]) || (board64[(rb*8)+0] != piece[2]) || (board64[(rb*8)+0] != piece[3]) || (board64[(rb*8)+0] != piece[4]) || (board64[(rb*8)+0] != piece[5]))bmaterial = bmaterial + 6;
  if((board64[(rb*8)+5] != piece[12]) || (board64[(rb*8)+5] != piece[6]) || (board64[(rb*8)+0] != piece[0]) || (board64[(rb*8)+0] != piece[1]) || (board64[(rb*8)+0] != piece[2]) || (board64[(rb*8)+0] != piece[3]) || (board64[(rb*8)+0] != piece[4]) || (board64[(rb*8)+0] != piece[5]))bmaterial = bmaterial + 6;
  if((board64[(rb*8)+6] != piece[12]) || (board64[(rb*8)+6] != piece[6]) || (board64[(rb*8)+0] != piece[0]) || (board64[(rb*8)+0] != piece[1]) || (board64[(rb*8)+0] != piece[2]) || (board64[(rb*8)+0] != piece[3]) || (board64[(rb*8)+0] != piece[4]) || (board64[(rb*8)+0] != piece[5]))bmaterial = bmaterial + 6;
  if((board64[(rb*8)+7] != piece[12]) || (board64[(rb*8)+7] != piece[6]) || (board64[(rb*8)+0] != piece[0]) || (board64[(rb*8)+0] != piece[1]) || (board64[(rb*8)+0] != piece[2]) || (board64[(rb*8)+0] != piece[3]) || (board64[(rb*8)+0] != piece[4]) || (board64[(rb*8)+0] != piece[5]))bmaterial = bmaterial + 6;

  }
 }
}

 rh = 0;
 rn = 0;
for (int rb = 0; rb < 8;rb++) {
for (int re = 0; re < 8;re++) {


     if (board64[(rb*8)+re] == piece[6]) {
 if(board64[(rb*0)+re] == piece[6]) wmaterial = wmaterial + 8;
 if(board64[(rb*1)+re] == piece[6]) wmaterial = wmaterial + 8;
 if(board64[(rb*2)+re] == piece[6]) wmaterial = wmaterial + 8;
 if(board64[(rb*3)+re] == piece[6]) wmaterial = wmaterial + 8;
 if(board64[(rb*4)+re] == piece[6]) wmaterial = wmaterial + 8;
 if(board64[(rb*5)+re] == piece[6]) wmaterial = wmaterial + 8;
 if(board64[(rb*6)+re] == piece[6]) wmaterial = wmaterial + 8;
 if(board64[(rb*7)+re] == piece[6]) wmaterial = wmaterial + 8;
 }
 if (board64[(rb*8)+re] == piece[0]) {
  if(board64[(rb*0)+re] == piece[0]) bmaterial = bmaterial + 8;
  if(board64[(rb*1)+re] == piece[0]) bmaterial = bmaterial + 8;
  if(board64[(rb*2)+re] == piece[0]) bmaterial = bmaterial + 8;
  if(board64[(rb*3)+re] == piece[0]) bmaterial = bmaterial + 8;
  if(board64[(rb*4)+re] == piece[0]) bmaterial = bmaterial + 8;
  if(board64[(rb*5)+re] == piece[0]) bmaterial = bmaterial + 8;
  if(board64[(rb*6)+re] == piece[0]) bmaterial = bmaterial + 8;
  if(board64[(rb*7)+re] == piece[0]) bmaterial = bmaterial + 8;

  }
   if (board64[(rb*8)+re] == piece[6]) {
 if(board64[(rb*0)+re] == piece[12]) wmaterial = wmaterial + 2;
 if(board64[(rb*1)+re] == piece[12]) wmaterial = wmaterial + 2;
 if(board64[(rb*2)+re] == piece[12]) wmaterial = wmaterial + 2;
 if(board64[(rb*3)+re] == piece[12]) wmaterial = wmaterial + 2;
 if(board64[(rb*4)+re] == piece[12]) wmaterial = wmaterial + 2;
 if(board64[(rb*5)+re] == piece[12]) wmaterial = wmaterial + 2;
 if(board64[(rb*6)+re] == piece[12]) wmaterial = wmaterial + 2;
 if(board64[(rb*7)+re] == piece[12]) wmaterial = wmaterial + 2;
 }
 if (board64[(rb*8)+re] == piece[0]) {
 if(board64[(rb*0)+re] == piece[12]) bmaterial = bmaterial + 2;
 if(board64[(rb*1)+re] == piece[12]) bmaterial = bmaterial + 2;
 if(board64[(rb*2)+re] == piece[12]) bmaterial = bmaterial + 2;
 if(board64[(rb*3)+re] == piece[12]) bmaterial = bmaterial + 2;
 if(board64[(rb*4)+re] == piece[12]) bmaterial = bmaterial + 2;
 if(board64[(rb*5)+re] == piece[12]) bmaterial = bmaterial + 2;
 if(board64[(rb*6)+re] == piece[12]) bmaterial = bmaterial + 2;
 if(board64[(rb*7)+re] == piece[12]) bmaterial = bmaterial + 2;
 }
 if (board64[(rb*8)+re] == piece[0]) {
 if((board64[(rb*0)+0] != piece[12]) || (board64[(rb*0)+0] != piece[0]) || (board64[(rb*8)+0] != piece[6]) || (board64[(rb*8)+0] != piece[7]) || (board64[(rb*8)+0] != piece[8]) || (board64[(rb*8)+0] != piece[9]) || (board64[(rb*8)+0] != piece[10]) || (board64[(rb*8)+0] != piece[11])) wmaterial = wmaterial + 6;
  if((board64[(rb*1)+0] != piece[12]) || (board64[(rb*1)+0] != piece[0]) || (board64[(rb*8)+0] != piece[6]) || (board64[(rb*8)+0] != piece[7]) || (board64[(rb*8)+0] != piece[8]) || (board64[(rb*8)+0] != piece[9]) || (board64[(rb*8)+0] != piece[10]) || (board64[(rb*8)+0] != piece[11])) wmaterial = wmaterial + 6;
 if((board64[(rb*2)+0] != piece[12]) || (board64[(rb*2)+0] != piece[0]) || (board64[(rb*8)+0] != piece[6]) || (board64[(rb*8)+0] != piece[7]) || (board64[(rb*8)+0] != piece[8]) || (board64[(rb*8)+0] != piece[9]) || (board64[(rb*8)+0] != piece[10]) || (board64[(rb*8)+0] != piece[11])) wmaterial = wmaterial + 6;
 if((board64[(rb*3)+0] != piece[12]) || (board64[(rb*3)+0] != piece[0]) || (board64[(rb*8)+0] != piece[6]) || (board64[(rb*8)+0] != piece[7]) || (board64[(rb*8)+0] != piece[8]) || (board64[(rb*8)+0] != piece[9]) || (board64[(rb*8)+0] != piece[10]) || (board64[(rb*8)+0] != piece[11])) wmaterial = wmaterial + 6;
 if((board64[(rb*4)+0] != piece[12]) || (board64[(rb*4)+0] != piece[0]) || (board64[(rb*8)+0] != piece[6]) || (board64[(rb*8)+0] != piece[7]) || (board64[(rb*8)+0] != piece[8]) || (board64[(rb*8)+0] != piece[9]) || (board64[(rb*8)+0] != piece[10]) || (board64[(rb*8)+0] != piece[11])) wmaterial = wmaterial + 6;
 if((board64[(rb*5)+0] != piece[12]) || (board64[(rb*5)+0] != piece[0]) || (board64[(rb*8)+0] != piece[6]) || (board64[(rb*8)+0] != piece[7]) || (board64[(rb*8)+0] != piece[8]) || (board64[(rb*8)+0] != piece[9]) || (board64[(rb*8)+0] != piece[10]) || (board64[(rb*8)+0] != piece[11])) wmaterial = wmaterial + 6;
 if((board64[(rb*6)+0] != piece[12]) || (board64[(rb*6)+0] != piece[0]) || (board64[(rb*8)+0] != piece[6]) || (board64[(rb*8)+0] != piece[7]) || (board64[(rb*8)+0] != piece[8]) || (board64[(rb*8)+0] != piece[9]) || (board64[(rb*8)+0] != piece[10]) || (board64[(rb*8)+0] != piece[11])) wmaterial = wmaterial + 6;
 if((board64[(rb*7)+0] != piece[12]) || (board64[(rb*7)+0] != piece[0]) || (board64[(rb*8)+0] != piece[6]) || (board64[(rb*8)+0] != piece[7]) || (board64[(rb*8)+0] != piece[8]) || (board64[(rb*8)+0] != piece[9]) || (board64[(rb*8)+0] != piece[10]) || (board64[(rb*8)+0] != piece[11])) wmaterial = wmaterial + 6;

  }
 }
}



     //randomize();
     //int fc = rand() % 40;
     //wmaterial = wmaterial + fc;
     //bmaterial = bmaterial + fc;

 int fs = 0;
 if(bw==1){
 fs = 0;
 if(sd[0] == 1) {
 fs = fs + bmaterial;
 fs = fs - wmaterial;
// if (n2 == 0) fs = 30000;
// if (n == 0) fs =-30000;
 return fs;
                 }
 fs = 0;
 if(sd[0] == 0) {
 fs = fs + wmaterial;
 fs = fs - bmaterial;
// if (n == 0) fs = 30000;
// if (n2 == 0) fs = -30000;
 return -fs;
                 }
           }
 if(bw==0){
 fs = 0;
 if(sd[0] == 1) {
 fs = fs + bmaterial;
 fs = fs - wmaterial;
// if (n2 == 0) fs = -30000;
//  if (n == 0) fs =  30000;
 return -fs;
                 }
 fs = 0;
 if(sd[0] == 0) {
 fs = fs + wmaterial;
 fs = fs - bmaterial;
// if (n == 0) fs = 30000;
// if (n2 == 0) fs = -30000;
 return fs;
                 }
           }



// end eval()
}


int evaluate(bord brd[1],int sd[1],int bw, int cnt) {

  int mking = 15000;
  int mqueen = 950;
  int mrook = 500;
  int mknight = 300;
  int mbishop = 325;
  int mpawn = 100;
  int wmaterial =0;
  int bmaterial =0;
  int attack =4 ;

  int wk=90,wku=90,wkd=90,wkp=90,wkm=90,wkup=90,wkum=90,wkdp=90,wkdm=90;
  int bk=90,bku=90,bkd=90,bkp=90,bkm=90,bkup=90,bkum=90,bkdp=90,bkdm=90;

   int n=0,n2=0;

  for(int f=1;f<66;f++){
  if (brd[0].battackpos[f] == 1) bmaterial = bmaterial + attack;
  if (brd[0].attackpos[f] == 1) wmaterial = wmaterial + attack;
  if (brd[0].boardval[f] == 99) bmaterial = bmaterial + mpawn;
  if (brd[0].boardval[f] == 100) wmaterial = wmaterial + mpawn;
  if (brd[0].boardval[f] == 324) bmaterial = bmaterial + mbishop;
  if (brd[0].boardval[f] == 325) wmaterial = wmaterial + mbishop;
  if (brd[0].boardval[f] == 299) bmaterial = bmaterial + mknight;
  if (brd[0].boardval[f] == 300) wmaterial = wmaterial + mknight;
  if (brd[0].boardval[f] == 499) bmaterial = bmaterial + mrook;
  if (brd[0].boardval[f] == 500) wmaterial = wmaterial + mrook;
  if (brd[0].boardval[f] == 949) bmaterial = bmaterial + mqueen;
  if (brd[0].boardval[f] == 950) wmaterial = wmaterial + mqueen;
    if (brd[0].boardval[f] == 4999) bmaterial = bmaterial + mking;
    if (brd[0].boardval[f] == 5000) wmaterial = wmaterial + mking;
  if (brd[0].boardval[f] == 4999) bk = f;
  if (brd[0].boardval[f] == 5000) wk = f;
  if (brd[0].boardval[f] == 4999) n = n + 1;
  if (brd[0].boardval[f] == 5000) n2 = n2 + 1;
 }
/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/

  if ((bk != 8) & (bk != 16) & (bk != 24) & (bk != 32) & (bk != 40)
     & (bk != 48) & (bk != 56) & (bk != 64)) bkp = bk + 1;
  if ((bk != 1) & (bk != 9) & (bk != 17) & (bk != 25) & (bk != 33)
     & (bk != 41) & (bk != 49) & (bk != 57)) bkm = bk - 1;
  if ((bk != 1) & (bk != 2) & (bk != 3) & (bk != 4) & (bk != 5)
     & (bk != 6) & (bk != 7) & (bk != 8)) bku = bk - 8;
  if ((bk != 57) & (bk != 58) & (bk != 59) & (bk != 60) & (bk != 61)
     & (bk != 62) & (bk != 63) & (bk != 64)) bkd = bk + 8;

  if ((bku != 8) & (bku != 16) & (bku != 24) & (bku != 32) & (bku != 40)
     & (bku != 48) & (bku != 56) & (bku != 64)) bkup = bku + 1;
  if ((bku != 1) & (bku != 9) & (bku != 17) & (bku != 25) & (bku != 33)
     & (bku != 41) & (bku != 49) & (bku != 57)) bkum = bku - 1;
  if ((bkd != 8) & (bkd != 16) & (bkd != 24) & (bkd != 32) & (bkd != 40)
     & (bkd != 48) & (bkd != 56) & (bkd != 64)) bkdp = bkd + 1;
  if ((bkd != 1) & (bkd != 9) & (bkd != 17) & (bkd != 25) & (bkd != 33)
     & (bkd != 41) & (bkd != 49) & (bkd != 57)) bkdm = bkd - 1;

     if ((wk != 8) & (wk != 16) & (wk != 24) & (wk != 32) & (wk != 40)
     & (wk != 48) & (wk != 56) & (wk != 64)) wkp = wk + 1;
  if ((wk != 1) & (wk != 9) & (wk != 17) & (wk != 25) & (wk != 33)
     & (wk != 41) & (wk != 49) & (wk != 57)) wkm = wk - 1;
  if ((wk != 1) & (wk != 2) & (wk != 3) & (wk != 4) & (wk != 5)
     & (wk != 6) & (wk != 7) & (wk != 8)) wku = wk - 8;
  if ((wk != 57) & (wk != 58) & (wk != 59) & (wk != 60) & (wk != 61)
     & (wk != 62) & (wk != 63) & (wk != 64)) wkd = wk + 8;

  if ((wku != 8) & (wku != 16) & (wku != 24) & (wku != 32) & (wku != 40)
     & (wku != 48) & (wku != 56) & (wku != 64)) wkup = wku + 1;
  if ((wku != 1) & (wku != 9) & (wku != 17) & (wku != 25) & (wku != 33)
     & (wku != 41) & (wku != 49) & (wku != 57)) wkum = wku - 1;
  if ((wkd != 8) & (wkd != 16) & (wkd != 24) & (wkd != 32) & (wkd != 40)
     & (wkd != 48) & (wkd != 56) & (wkd != 64)) wkdp = wkd + 1;
  if ((wkd != 1) & (wkd != 9) & (wkd != 17) & (wkd != 25) & (wkd != 33)
     & (wkd != 41) & (wkd != 49) & (wkd != 57)) wkdm = wkd - 1;

  if (cnt > 10) {
 if((wk < 90) & (brd[0].battackpos[wk] == 1)) bmaterial = bmaterial + 51;
  if((wkp < 90) & (brd[0].battackpos[wkp] == 1)) bmaterial = bmaterial + 25;
    if((wkm < 90) & (brd[0].battackpos[wkm] == 1)) bmaterial = bmaterial + 25;
  if((wkd < 90) & (brd[0].battackpos[wkd] == 1)) bmaterial = bmaterial + 25;
  if((wkdp< 90) & (brd[0].battackpos[wkdp] == 1)) bmaterial = bmaterial + 25;
    if((wkdm <90) & (brd[0].battackpos[wkdm] == 1)) bmaterial = bmaterial + 25;
   if((wku < 90) & (brd[0].battackpos[wku] == 1)) bmaterial = bmaterial + 25;
  if((wkup<90) & (brd[0].battackpos[wkup] == 1)) bmaterial = bmaterial + 25;
    if((wkum<90) & (brd[0].battackpos[wkum] == 1)) bmaterial = bmaterial + 25;

  if((bk < 90) & (brd[0].attackpos[bk] == 1)) wmaterial = wmaterial + 51;
  if((bkp > 90) & (brd[0].attackpos[bkp] == 1)) wmaterial = wmaterial + 25;
    if((bkm < 90) & (brd[0].attackpos[bkm] == 1)) wmaterial = wmaterial + 25;
  if((bkd<90) & (brd[0].attackpos[bkd] == 1)) wmaterial = wmaterial + 25;
  if((bkdp <90) & (brd[0].attackpos[bkdp] == 1)) wmaterial = wmaterial + 25;
    if((bkdm <90) & (brd[0].attackpos[bkdm] == 1)) wmaterial = wmaterial + 25;
   if((bku <90) & (brd[0].attackpos[bku] == 1)) wmaterial = wmaterial + 25;
  if((bkup < 90) & (brd[0].attackpos[bkup] == 1)) wmaterial = wmaterial + 25;
    if((bkum <90) & (brd[0].attackpos[bkum] == 1)) wmaterial = wmaterial + 25;
           }

    if((brd[0].boardval[bkdm] == 99) || (brd[0].boardval[bkd] == 99) ||
    (brd[0].boardval[bkdp] == 99)) bmaterial = bmaterial + 8;
    if((brd[0].boardval[wkum] == 100) || (brd[0].boardval[wku] == 100) ||
    (brd[0].boardval[wkup] == 100)) wmaterial = wmaterial + 8;
    if((brd[0].boardval[bkdm] == 299) || (brd[0].boardval[bkd] == 299) ||
    (brd[0].boardval[bkdp] == 299)) bmaterial = bmaterial + 4;
    if((brd[0].boardval[wkum] == 300) || (brd[0].boardval[wku] == 300) ||
    (brd[0].boardval[wkup] == 300)) wmaterial = wmaterial + 4;
    if((brd[0].boardval[bkdm] == 324) || (brd[0].boardval[bkd] == 324) ||
    (brd[0].boardval[bkdp] == 324)) bmaterial = bmaterial + 4;
    if((brd[0].boardval[wkum] == 325) || (brd[0].boardval[wku] == 325) ||
    (brd[0].boardval[wkup] == 325)) wmaterial = wmaterial + 4;

    for(int f = 1;f< 66;f++){
    if((brd[0].boardval[f] == 300) & (brd[0].battackpos[f] == 1)) bmaterial = bmaterial + 10;
    if((brd[0].boardval[f] == 299) & (brd[0].attackpos[f] == 1)) wmaterial = wmaterial + 10;

                            }
if ((cnt < 20) & ( brd[0].boardval[60] != 950))  bmaterial = bmaterial + 60;
if ((cnt < 20) & ( brd[0].boardval[4] != 949))  wmaterial = wmaterial + 60;
if ((cnt < 20) & ( brd[0].boardval[63] == 5000)& ( brd[0].boardval[62] == 500))wmaterial = wmaterial + 60;
if ((cnt < 20) & ( brd[0].boardval[7] == 4999)& ( brd[0].boardval[6] == 499))bmaterial = bmaterial + 60;
if ((cnt < 20) & ( brd[0].boardval[59] == 5000)& ( brd[0].boardval[60] == 500))wmaterial = wmaterial + 60;
if ((cnt < 20) & ( brd[0].boardval[3] == 4999)& ( brd[0].boardval[4] == 499))bmaterial = bmaterial + 60;

   /*
 int fs = 0;
 if(bw==1){
 fs = 0;
 if(sd[0] == 1) {
 fs = fs + bmaterial;
 fs = fs - wmaterial;
 if (n2 == 0) fs = 30000;
 if (n == 0) fs =-30000;
 return fs;
                 }
 fs = 0;
 if(sd[0] == 0) {
 fs = fs + wmaterial;
 fs = fs - bmaterial;
 if (n == 0) fs = 30000;
 if (n2 == 0) fs = -30000;
 return -fs;
                 }
           }
 if(bw==0){
 fs = 0;
 if(sd[0] == 1) {
 fs = fs + bmaterial;
 fs = fs - wmaterial;
 if (n2 == 0) fs = -30000;
  if (n == 0) fs =  30000;
 return -fs;
                 }
 fs = 0;
 if(sd[0] == 0) {
 fs = fs + wmaterial;
 fs = fs - bmaterial;
 if (n == 0) fs = 30000;
 if (n2 == 0) fs = -30000;
 return fs;
                 }
           }

*/


 int fs = 0;
 if(bw==1){
 fs = 0;
 fs = fs + bmaterial;
 fs = fs - wmaterial;

                 }

 if(bw==0){
 fs = 0;
 fs = fs + wmaterial;
 fs = fs - bmaterial;

                 }
  int rr = 0;
  int min = 2;
  int max = 20;
  rr = min + (rand() % static_cast<int>(max - min + 1)) ;             
  return fs+rr;

}

////////////////////////////////////////////////////////////////////////////////
int alphabeta4(int depth, int alpha, int beta, bord brd[1],int bw,int mfr[2],int mto[2],int sd[1],int cnt){
           int vnct = 0,count =0,nomove = 0,itmoved = 0,from=0,tooo = 0,side = 0;
           int bw0=0,bw1=0;
           int moves[250];
           bord temp[1];
           push(brd,temp);

           if(bw ==0) {
           if((depth == 5) || (depth == 3) || (depth == 1)) side = 0;
           if((depth == 6) || (depth == 4) || (depth == 2)) side = 1;
                    }
           if(bw ==1) {
           if((depth == 5) || (depth == 3) || (depth == 1)) side = 1;
           if((depth == 6) || (depth == 4) || (depth == 2)) side = 0;
                   }
           sd[0] = sd[0] + 1;
           if(sd[0] == 2) sd[0] == 0;


           if((depth == 1) & (side == 1)) sd[0] = 1;
           if((depth == 1) & (side == 0)) sd[0] = 0;



           if(side == 0) {wmovegen(0,temp);}
           if(side == 1) {bmovegen(0,temp);}


           moves[0] = 0;
           moves[1] = 0;
           int move = 0;
           int move2 = 0;
           int move3=0;
           int move4=0;
           int t = 0,z=0,v=0;

           for(int u=0;u<124;u++){
           v=v+2;
           if( brd[0].movelist[v] == 0) break;
           if( brd[0].movelist[v] > 0) {

             move = brd[0].boardval[v];
             move2 = brd[0].boardval[v+1];
             
             if(((move2 == 99) || (move2 ==100) 
               &
              ((move == 99) || (move ==100) ||
              (move == 299) || (move ==300) ||
              (move == 324) || (move ==325) ||
              (move == 949) || (move ==950) ||
              (move == 4999) || (move ==5000)))) {
              brd[0].movelist[t] = brd[0].movelist[v];
              brd[0].movelist[t+1] = brd[0].movelist[v+1];
              t = t + 2;}
             
             
             if(((move2 == 950) || (move2 ==949) 
              &
              ((move == 99) || (move ==100) ||
              (move == 499) || (move ==500) ||
              (move == 299) || (move ==300) ||
              (move == 324) || (move ==325) ||
              (move == 949) || (move ==950) ||
              (move == 4999) || (move ==5000)))) {
              brd[0].movelist[t] = brd[0].movelist[v];
              brd[0].movelist[t+1] = brd[0].movelist[v+1];
              t = t + 2;}
             
             if(((move2 == 500) || (move2 ==499) 
              &
              ((move == 99) || (move ==100) ||
              (move == 499) || (move ==500) ||
              (move == 299) || (move ==300) ||
              (move == 324) || (move ==325) ||
              (move == 949) || (move ==950) ||
              (move == 4999) || (move ==5000)))) {
              brd[0].movelist[t] = brd[0].movelist[v];
              brd[0].movelist[t+1] = brd[0].movelist[v+1];
              t = t + 2;}
             
              if(((move2 == 325) || (move2 ==324) 
              &
              ((move == 99) || (move ==100) ||
              (move == 499) || (move ==500) ||
              (move == 299) || (move ==300) ||
              (move == 324) || (move ==325) ||
              (move == 949) || (move ==950) ||
              (move == 4999) || (move ==5000)))) {
              brd[0].movelist[t] = brd[0].movelist[v];
              brd[0].movelist[t+1] = brd[0].movelist[v+1];
              t = t + 2;}
             
              if(((move2 == 300) || (move2 ==299) 
              &
              ((move == 99) || (move ==100) ||
              (move == 499) || (move ==500) ||
              (move == 299) || (move ==300) ||
              (move == 324) || (move ==325) ||
              (move == 949) || (move ==950) ||
              (move == 4999) || (move ==5000)))) {
              brd[0].movelist[t] = brd[0].movelist[v];
              brd[0].movelist[t+1] = brd[0].movelist[v+1];
              t = t + 2;}
              
              if(((move2 == 5000) || (move2 ==4999) 
              &
              ((move == 99) || (move ==100) ||
              (move == 499) || (move ==500) ||
              (move == 299) || (move ==300) ||
              (move == 324) || (move ==325) ||
              (move == 949) || (move ==950) ||
              (move == 4999) || (move ==5000)))) {
              brd[0].movelist[t] = brd[0].movelist[v];
              brd[0].movelist[t+1] = brd[0].movelist[v+1];
              t = t + 2;}
              
             
//////////////////////////

            if(((move == 99) || (move ==100) 
              &
              ((move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0)))) {
               moves[z] = brd[0].movelist[v];
               moves[z+1] = brd[0].movelist[v+1];
               moves[z+2] = 0;
               moves[z+3] = 0;
               z=z+2; }
if(((move == 299) || (move ==300) 
              &
              ((move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0)))) {
               moves[z] = brd[0].movelist[v];
               moves[z+1] = brd[0].movelist[v+1];
               moves[z+2] = 0;
               moves[z+3] = 0;
               z=z+2; }

if(((move == 324) || (move ==325) 
              &
              ((move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0)))) {
               moves[z] = brd[0].movelist[v];
               moves[z+1] = brd[0].movelist[v+1];
               moves[z+2] = 0;
               moves[z+3] = 0;
               z=z+2; }

if(((move == 949) || (move ==950) 
              &
              ((move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0)))) {
               moves[z] = brd[0].movelist[v];
               moves[z+1] = brd[0].movelist[v+1];
               moves[z+2] = 0;
               moves[z+3] = 0;
               z=z+2; }


if(((move == 499) || (move ==500) 
              &
              ((move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0)))) {
               moves[z] = brd[0].movelist[v];
               moves[z+1] = brd[0].movelist[v+1];
               moves[z+2] = 0;
               moves[z+3] = 0;
               z=z+2; }


              if((
              
              (move == 4999) || (move ==5000)&
              ((move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0) ||
              (move2 ==0 ) || (move2 ==0)))) {
               moves[z] = brd[0].movelist[v];
               moves[z+1] = brd[0].movelist[v+1];
               moves[z+2] = 0;
               moves[z+3] = 0;
               z=z+2; }

               }}
               v=0;
             //  brd[0].movelist[t-2] = 0;
               brd[0].movelist[t-1] = 0;
               for(int u=0;u<124;u++){
               v=v+2;
               if(moves[v] == 0) break;
                 if(moves[v] > 0){
                   brd[0].movelist[t-2] = moves[v];
                   brd[0].movelist[t-1] = moves[v+1];
                   t=t+2;
                 }
               }
             // brd[0].movelist[t-2] = 0;
              brd[0].movelist[t-1] = 0;

/*
           if (depth <= 1) {
           long sd0=0;
           if (bw == 1) {
               sd0 = qtotup(temp,sd,bw);
           return sd0;  }

           if (bw == 0) {
               sd0 = qtotup(temp,sd,bw);
           return sd0;  }
                }

*/


           if (depth <= 1) {
           long sd0=0;
           if (bw == 1) {
               int over = 0;
                 int bover = 0;
                 for(int h =1;h<65;h++){
                 if(brd[0].boardval[h] == 5000) over= 1;
                 if(brd[0].boardval[h] == 4999) bover =1;
                 }
                 if (over == 0) return 32000;
                 if (bover == 0) return -32000;
                 sd0 = evaluate(temp,sd,bw,cnt);
                 return sd0;  }

           if (bw == 0) {
                 int over = 0;
                 int bover = 0;
                 for(int h =1;h<65;h++){
                 if(brd[0].boardval[h] == 5000) over= 1;
                 if(brd[0].boardval[h] == 4999) bover =1;
                 }
                 if (bover == 0) return 32000;
                 if (over == 0) return -32000;
                 sd0 = evaluate(temp,sd,bw,cnt);
                 return sd0;  }
                          }



           while(1){
           if(side == 0) {
               nomove = 0;

               if(brd[0].movelist[count]==0) {
               nomove = 1;

                 }

               if(nomove == 0) { moveit(brd[0].movelist[count],brd[0].movelist[count+1],brd);
               if (depth == 4){
               bw0 = brd[0].movelist[count];
               bw1 = brd[0].movelist[count+1]; }
               count = count + 2;}
               if(nomove==1) break;}
            if(side == 1) {
               nomove = 0;

               if(brd[0].movelist[count]==0) {
               nomove = 1;
               //printf("side 1 mfr =%d mto=%d",mfr[0],mto[0]);
               }
               if(nomove == 0) { moveit(brd[0].movelist[count],brd[0].movelist[count+1],brd);
               if (depth == 4){
               bw0 = brd[0].movelist[count];
               bw1 = brd[0].movelist[count+1];}
               count = count + 2;}
               if(nomove==1) break; }

               int val = -alphabeta4(depth - 1, -beta, -alpha,brd,bw,mfr,mto,sd,cnt);
               //if(depth == 4) printf(" val = %d  ");
               push(temp,brd);
               //printf("IMPORTANT mfr =%d mto=%d",mfr[1],mto[1]);

               //if (depth > 0) printf("depth %d  ",depth);
               if ((depth == 4) & (val > alpha) & (val > -32000)) {
               //printf("  winning =%d ",val);

                 mfr[1] = bw0;
                 mto[1] = bw1;
               }

               if (val >= beta) return val;
               if (val > alpha) alpha = val;

               }
    return alpha;


}
////////////////////////////////////////////////////////////////////////////////
/*
int input() {

unsigned long dw;
int pipe;
HANDLE hstdin;

hstdin = GetStdHandle(STD_INPUT_HANDLE);
pipe = !GetConsoleMode(hstdin, &dw);
	

	if (stdin->_cnt > 0) return 1;

	if (pipe) {
		if (!PeekNamedPipe(hstdin, 0, 0, 0, &dw, 0)) return 1;
		return dw;
	} else {
		//if (task == TASK_NOTHING) return 1;
		GetNumberOfConsoleInputEvents(hstdin, &dw);
		//if (dw > 1) task = TASK_NOTHING;
	}

	return 0;
}
*/



bool moveok(int from,int tooo,bord brd[1],int bw)
{
bord brdt[1];	

for(int v=0;v<65;v++){
  brdt[0].boardval[v] = brd[0].boardval[v];
}
for(int v=0;v<4;v++){
  brdt[0].castlerule[v] = brd[0].castlerule[v];
}
for(int v=0;v<9;v++){
  brdt[0].enpassrule[v] = brd[0].enpassrule[v];
}
for(int v=0;v<250;v++){
  brdt[0].movelist[v] = brd[0].movelist[v];
}
for(int v=0;v<65;v++){
  brdt[0].attackpos[v] = brd[0].attackpos[v];
}
for(int v=0;v<65;v++){
  brdt[0].battackpos[v] = brd[0].battackpos[v];
}
 int moves[250];
 
moves[0] = 0;
           moves[1] = 0;
           int move = 0;
           int move2 = 0;
           int rt = 0;
          int t = 0,z=0,v=0; 
          //bw = 0;
if(bw == 0) wmovegen(0,brdt);
if(bw == 1) bmovegen(0,brdt);


           
           

           for(int u=0;u<124;u++){
           v=v+2;
           if( brdt[0].movelist[v] == 0) break;
           if( brdt[0].movelist[v] > 0) {

             move = brdt[0].movelist[v];
             move2 = brdt[0].movelist[v+1];
             
             if((move2 == tooo)  & (move == from) ) rt = 1;
}

}




if (rt == 0)return 0;
if (rt == 1)return 1;
}
//--------
//---------------------------------------------------------------------------
#pragma argsused
int main(int argc, char **argv)
{
//setbuf(stdout, NULL);
//setbuf(stdin, NULL);
setvbuf(stdin,NULL,_IONBF,0);
setvbuf(stdout,NULL,_IONBF,0);


srand (time(NULL));
int endit[1] = {0};
/*
int square = 41;
tool2board(kingh8,square);
all error checked, all chess moves
*/
bord brd[1];

int value1 = 0;
donewboard(value1,brd);
//tooldisptxtboard(value1,brd);
//bmovegen(value1,brd);
//tooldisptxtboard(value1,brd);
//printf("\nmove = %d move1 = %d",brd[0].movelist[2],brd[0].movelist[3]);
printf("type help Or A move EG:e2e4\n");
fflush(stdout);
int bw=0;
int from = 0,tooo =0;

//brd[0].boardval[30] = 300;
char strg[800];      //  array of chars to store commands stdin
        	char cmd[800];       //  command array is where we look for commands
            char newline[] ={"\n"}; // this is very important its an escape
                                 // charector for a newline in the stdin
                                 // cmd and strg have to be the same size
                                 // for sscanff() to use

              int y=0, yu=0,ok = 0;
              unsigned char zero[1];
              char one[]={"1"},two[]={"2"},three[]={"3"},
              four[]={"4"},five[]={"5"},six[]={"6"},
              severn[]={"7"},eight[]={"8"};
              char a[]={"A"},b[]={"B"},c[]={"C"},d[]={"D"},
              e[]={"E"},f[]={"F"},g[]={"G"},h[]={"H"};
              char aa[]={"a"},bb[]={"b"},cc[]={"c"},dd[]={"d"},
              ee[]={"e"},ff[]={"f"},gg[]={"g"},hh[]={"h"},
              o[]={"O"},oo[]={"o"},l[]={"L"},ll[]={"l"},
              k[]={"K"},kk[]={"k"},
              w[]={"W"},ww[]={"w"},
              i[]={"I"},ii[]={"i"},
              t[]={"T"},tt[]={"t"},
              r[]={"R"},rr[]={"r"},
              n[]={"N"},nn[]={"n"},
              q[]={"Q"},qq[]={"q"},
              mpiece[]={" "},space[]={" "};
int auu = 0;
int aut = 0;
int aut2 = 0;
              int cnt=0;
              int row = 0, rank =0,row2=0;
                 int state[1];
                 state[0] = 1;
                 int stoped =1;
                 int gtmp = 1;
                 unsigned char adder=0,adder2=0,adder3=0;
                 printf("\n");
			   printf("\n");
			   printf("\n");
			    printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			    printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			    printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			    printf("\n");
			   printf("\n");
			   printf("\n");		
                printf("\n   ** * **  ****  *  *  *  ****  *     *  ****  ****  *****   *  *  *   *");	
               	printf("\n   *  *  *  *  *  *  ** *  *     *     *  *  *  *  *    *     *  *  *   *");
               	printf("\n   *     *  ****  *  * **  ****  *  *  *  *  *  ****    *     ****  *****");
               	printf("\n   *     *  *  *  *  *  *     *  * * * *  *  *  *  *    *     *  *      *");	
               	printf("\n   *     *  *  *  *  *  *  ****   ** **   ****  *   *   *     *  *  *****");
               	printf("\n");
               	printf("\n       Mainsworthy Terminal Chess\n");	
               	printf("         \n");
               	printf("       By Mark Ainsworth ref 210665. version 114.0");
               	printf("\n");	
               	
               	
               	
               printf("\n\nMainsworthy Terminal chess Engine! by Mark Ainsworth 210665...........\n");
               printf("\n");
               printf("first created 10thOct2010 continued 30thOct2018...........................\n");
               printf("Type 'text' to play in textmode, just displays board every move...........\n");
               printf("Type 'help' to display this screen........................................\n");
               printf("Type 'show' to display board..............................................\n");
               printf("Type 'quit' or 'exit' to exit.............................................\n");
               printf("Type 'new'  for a new game, or type move eg: d2d4.........................\n");
               printf("Type 'go'   to switch sides...............................................\n");
               //printf("if you type 'go' mid game you will get errors in winboard\n");
               printf("type 'auto' to let computer play itself mode!copy Paste output to database\n");
               printf("\n");
while(endit[0] == 0)  {
                 if(ok != 9) ok = 0;
                 if(ok==9) ok = 6;

                 fflush(stdin);
                 

                 if (aut == 0)fgets( strg, 800, stdin );
                 if (aut == 1)strcpy(strg, "auto");
                 if (aut2 == 1){
				 strcpy(strg, "new");
				 aut2 = 0;
			}
                 sscanf( strg, "%s", cmd );
                 //if (aut == 1) strcpy(cmd,"auto");
                 if( strg[0]==newline[0] ) {
                 strcpy(cmd, ""); continue; }
                 if( !strlen(cmd) ) continue;
                 
			   
			    //if (aut == 1)continue;
			   
			   
			   
                 if( !strcmp("menu", cmd) ){
     	        	printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			    printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			    printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			    printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			    printf("\n");
			   printf("\n");
			   printf("\n");		
                printf("\n   ** * **  ****  *  *  *  ****  *     *  ****  ****  *****   *  *  *   *");	
               	printf("\n   *  *  *  *  *  *  ** *  *     *     *  *  *  *  *    *     *  *  *   *");
               	printf("\n   *     *  ****  *  * **  ****  *  *  *  *  *  ****    *     ****  *****");
               	printf("\n   *     *  *  *  *  *  *     *  * * * *  *  *  *  *    *     *  *      *");	
               	printf("\n   *     *  *  *  *  *  *  ****   ** **   ****  *   *   *     *  *  *****");
               	printf("\n");
               	printf("\n       Mainsworthy Terminal Chess\n");	
               	printf("         \n");
               	printf("       By Mark Ainsworth ref 210665. version 114.0");
               	printf("\n");	
               	
               	
               	
               printf("\n\nMainsworthy Terminal chess Engine! by Mark Ainsworth 210665...........\n");
               printf("\n");
               printf("first created 10thOct2010 continued 30thOct2018...........................\n");
               printf("Type 'text' to play in textmode, just displays board every move...........\n");
               printf("Type 'help' to display this screen........................................\n");
               printf("Type 'show' to display board..............................................\n");
               printf("Type 'quit' or 'exit' to exit.............................................\n");
               printf("Type 'new'  for a new game, or type move eg: d2d4.........................\n");
               printf("Type 'go'   to switch sides...............................................\n");
               //printf("if you type 'go' mid game you will get errors in winboard\n");
               printf("type 'auto' to let computer play itself mode!copy Paste output to database\n");
               printf("\n");
//			   printf("\n");
//			   printf("\n");

                    }
              if( !strcmp("quit", cmd) ){
                    endit[0]=1;
     	        	break;
                    }
             if( !strcmp("exit", cmd) ){
                    endit[0]=1;
     	        	break;
                    }
              if( !strcmp("new", cmd) ){
                stoped = 1;
                donewboard(value1,brd);
                bw=0;
                cnt = 0;
                if (ttxt == 1) tooldisptxtboard(value1,brd);
                gtmp = 1;
			   //break;
               }
               
        //}

               if(!strcmp( "go",cmd)){
			   
			                  
                 bw = gtmp; 
                if (gtmp == 0) gtmp = 3;
                if (gtmp == 1) gtmp = 0;
                if (gtmp == 3) gtmp = 1;
                ok = 6;
               strcpy(cmd, "");
                 //continue;
                }
               

               /*
               if( !strcmp("go", cmd) & ( cnt >= 0 ) & (bw==1) ){
                //stoped = 1;
                //donewboard(value1,brd);
                if(bw==0) bw = 3;
                if(bw==1) bw = 0;
                if(bw==3) bw = 1;
                ok = 6;
                strcpy(cmd, "");
                //tooldisptxtboard(value1,brd);
               //break;
               }
               if( !strcmp("go", cmd) & ( cnt >= 0 ) & (bw==0) ){
                //stoped = 1;
                //donewboard(value1,brd);
                if(bw==0) bw = 3;
                if(bw==1) bw = 0;
                if(bw==3) bw = 1;
                ok = 6;
                strcpy(cmd, "");
                //tooldisptxtboard(value1,brd);
               //break;
               }
               
               
               */
               if (!strcmp("auto", cmd) ){
                //stoped = 1;
                //donewboard(value1,brd);
                aut = 1;
                
                strcpy(cmd, "");
                //tooldisptxtboard(value1,brd);
               //break;
               }
               
               if (aut == 1){
               ok = 6;
               	if(bw==0) bw = 3;
                if(bw==1) bw = 0;
                if(bw==3) bw = 1;
			   }
               
               if( !strcmp("show", cmd) ){
               tooldisptxtboard(value1,brd);
               }
               if( !strcmp("text", cmd) ){
                ttxt = 1;
                tooldisptxtboard(value1,brd);
               }
               if( !strcmp("help", cmd) ){
               printf("\n");
			   printf("\n");
			   printf("\n");
			    printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			    printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			    printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			   printf("\n");
			    printf("\n");
			   printf("\n");
			   printf("\n");		
                printf("\n   ** * **  ****  *  *  *  ****  *     *  ****  ****  *****   *  *  *   *");	
               	printf("\n   *  *  *  *  *  *  ** *  *     *     *  *  *  *  *    *     *  *  *   *");
               	printf("\n   *     *  ****  *  * **  ****  *  *  *  *  *  ****    *     ****  *****");
               	printf("\n   *     *  *  *  *  *  *     *  * * * *  *  *  *  *    *     *  *      *");	
               	printf("\n   *     *  *  *  *  *  *  ****   ** **   ****  *   *   *     *  *  *****");
               	printf("\n");
               	printf("\n       Mainsworthy Terminal Chess\n");	
               	printf("         \n");
               	printf("       By Mark Ainsworth ref 210665. version 114.0");
               	printf("\n");	
               	
               	
               	
               printf("\n\nMainsworthy Terminal chess Engine! by Mark Ainsworth 210665...........\n");
               printf("\n");
               printf("first created 10thOct2010 continued 30thOct2018...........................\n");
               printf("Type 'text' to play in textmode, just displays board every move...........\n");
               printf("Type 'help' to display this screen........................................\n");
               printf("Type 'show' to display board..............................................\n");
               printf("Type 'quit' or 'exit' to exit.............................................\n");
               printf("Type 'new'  for a new game, or type move eg: d2d4.........................\n");
               printf("Type 'go'   to switch sides...............................................\n");
               //printf("if you type 'go' mid game you will get errors in winboard\n");
               printf("type 'auto' to let computer play itself mode!copy Paste output to database\n");
               printf("\n");
//			   printf("\n");
//			   printf("\n");



//if (gtmp == bw){
                 //ok - 6;
  //          continue;
    //    }
               }
               


                


              

                

               

                

                    
                    
               
                    

                    
                    
                    from = 0;
                    tooo=0;
                    if(ok ==0){


               if (((cmd[0] == a[0]) || (cmd[0] == aa[0])) &(cmd[1] == one[0])){
               from = a1;
               }
               if (((cmd[0] == a[0]) || (cmd[0] == aa[0])) &(cmd[1] == two[0])){
               from = a2;
               }
               if (((cmd[0] == a[0]) || (cmd[0] == aa[0])) &(cmd[1] == three[0])){
               from = a3;
               }
               if (((cmd[0] == a[0]) || (cmd[0] == aa[0])) &(cmd[1] == four[0])){
               from = a4;
               }
               if (((cmd[0] == a[0]) || (cmd[0] == aa[0])) &(cmd[1] == five[0])){
               from = a5;
               }
               if (((cmd[0] == a[0]) || (cmd[0] == aa[0])) &(cmd[1] == six[0])){
               from = a6;
               }
               if (((cmd[0] == a[0]) || (cmd[0] == aa[0])) &(cmd[1] == severn[0])){
               from = a7;
               }
               if (((cmd[0] == a[0]) || (cmd[0] == aa[0])) &(cmd[1] == eight[0])){
               from = a8;
               }
               if (((cmd[0] == b[0]) || (cmd[0] == bb[0])) &(cmd[1] == one[0])){
               from = b1;
               }
               if (((cmd[0] == b[0]) || (cmd[0] == bb[0])) &(cmd[1] == two[0])){
               from = b2;
               }
               if (((cmd[0] == b[0]) || (cmd[0] == bb[0])) &(cmd[1] == three[0])){
               from = b3;
               }
               if (((cmd[0] == b[0]) || (cmd[0] == bb[0])) &(cmd[1] == four[0])){
               from = b4;
               }
               if (((cmd[0] == b[0]) || (cmd[0] == bb[0])) &(cmd[1] == five[0])){
               from = b5;
               }
               if (((cmd[0] == b[0]) || (cmd[0] == bb[0])) &(cmd[1] == six[0])){
               from = b6;
               }
               if (((cmd[0] == b[0]) || (cmd[0] == bb[0])) &(cmd[1] == severn[0])){
               from = b7;
               }
               if (((cmd[0] == b[0]) || (cmd[0] == bb[0])) &(cmd[1] == eight[0])){
               from = b8;
               }
               if (((cmd[0] == c[0]) || (cmd[0] == cc[0])) &(cmd[1] == one[0])){
               from = c1;
               }
               if (((cmd[0] == c[0]) || (cmd[0] == cc[0])) &(cmd[1] == two[0])){
               from = c2;
               }
               if (((cmd[0] == c[0]) || (cmd[0] == cc[0])) &(cmd[1] == three[0])){
               from = c3;
               }
               if (((cmd[0] == c[0]) || (cmd[0] == cc[0])) &(cmd[1] == four[0])){
               from = c4;
               }
               if (((cmd[0] == c[0]) || (cmd[0] == cc[0])) &(cmd[1] == five[0])){
               from = c5;
               }
               if (((cmd[0] == c[0]) || (cmd[0] == cc[0])) &(cmd[1] == six[0])){
               from = c6;
               }
               if (((cmd[0] == c[0]) || (cmd[0] == cc[0])) &(cmd[1] == severn[0])){
               from = c7;
               }
               if (((cmd[0] == c[0]) || (cmd[0] == cc[0])) &(cmd[1] == eight[0])){
               from = c8;
               }
               if (((cmd[0] == d[0]) || (cmd[0] == dd[0])) &(cmd[1] == one[0])){
               from = d1;
               }
               if (((cmd[0] == d[0]) || (cmd[0] == dd[0])) &(cmd[1] == two[0])){
               from = d2;
               }
               if (((cmd[0] == d[0]) || (cmd[0] == dd[0])) &(cmd[1] == three[0])){
               from = d3;
               }
               if (((cmd[0] == d[0]) || (cmd[0] == dd[0])) &(cmd[1] == four[0])){
               from = d4;
               }
               if (((cmd[0] == d[0]) || (cmd[0] == dd[0])) &(cmd[1] == five[0])){
               from = d5;
               }
               if (((cmd[0] == d[0]) || (cmd[0] == dd[0])) &(cmd[1] == six[0])){
               from = d6;
               }
               if (((cmd[0] == d[0]) || (cmd[0] == dd[0])) &(cmd[1] == severn[0])){
               from = d7;
               }
               if (((cmd[0] == d[0]) || (cmd[0] == dd[0])) &(cmd[1] == eight[0])){
               from = d8;
               }
               if (((cmd[0] == e[0]) || (cmd[0] == ee[0])) &(cmd[1] == one[0])){
               from = e1;
               }
               if (((cmd[0] == e[0]) || (cmd[0] == ee[0])) &(cmd[1] == two[0])){
               from = e2;
               }
               if (((cmd[0] == e[0]) || (cmd[0] == ee[0])) &(cmd[1] == three[0])){
               from = e3;
               }
               if (((cmd[0] == e[0]) || (cmd[0] == ee[0])) &(cmd[1] == four[0])){
               from = e4;
               }
               if (((cmd[0] == e[0]) || (cmd[0] == ee[0])) &(cmd[1] == five[0])){
               from = e5;
               }
               if (((cmd[0] == e[0]) || (cmd[0] == ee[0])) &(cmd[1] == six[0])){
               from = e6;
               }
               if (((cmd[0] == e[0]) || (cmd[0] == ee[0])) &(cmd[1] == severn[0])){
               from = e7;
               }
               if (((cmd[0] == e[0]) || (cmd[0] == ee[0])) &(cmd[1] == eight[0])){
               from = e8;
               }
               if (((cmd[0] == f[0]) || (cmd[0] == ff[0])) &(cmd[1] == one[0])){
               from = f1;
               }
               if (((cmd[0] == f[0]) || (cmd[0] == ff[0])) &(cmd[1] == two[0])){
               from = f2;
               }
               if (((cmd[0] == f[0]) || (cmd[0] == ff[0])) &(cmd[1] == three[0])){
               from = f3;
               }
               if (((cmd[0] == f[0]) || (cmd[0] == ff[0])) &(cmd[1] == four[0])){
               from = f4;
               }
               if (((cmd[0] == f[0]) || (cmd[0] == ff[0])) &(cmd[1] == five[0])){
               from = f5;
               }
               if (((cmd[0] == f[0]) || (cmd[0] == ff[0])) &(cmd[1] == six[0])){
               from = f6;
               }
               if (((cmd[0] == f[0]) || (cmd[0] == ff[0])) &(cmd[1] == severn[0])){
               from = f7;
               }
               if (((cmd[0] == f[0]) || (cmd[0] == ff[0])) &(cmd[1] == eight[0])){
               from = f8;
               }
               if (((cmd[0] == g[0]) || (cmd[0] == gg[0])) &(cmd[1] == one[0])){
               from = g1;
               }
               if (((cmd[0] == g[0]) || (cmd[0] == gg[0])) &(cmd[1] == two[0])){
               from = g2;
               }
               if (((cmd[0] == g[0]) || (cmd[0] == gg[0])) &(cmd[1] == three[0])){
               from = g3;
               }
               if (((cmd[0] == g[0]) || (cmd[0] == gg[0])) &(cmd[1] == four[0])){
               from = g4;
               }
               if (((cmd[0] == g[0]) || (cmd[0] == gg[0])) &(cmd[1] == five[0])){
               from = g5;
               }
               if (((cmd[0] == g[0]) || (cmd[0] == gg[0])) &(cmd[1] == six[0])){
               from = g6;
               }
               if (((cmd[0] == g[0]) || (cmd[0] == gg[0])) &(cmd[1] == severn[0])){
               from = g7;
               }
               if (((cmd[0] == g[0]) || (cmd[0] == gg[0])) &(cmd[1] == eight[0])){
               from = g8;
               }
               if (((cmd[0] == h[0]) || (cmd[0] == hh[0])) &(cmd[1] == one[0])){
               from = h1;
               }
               if (((cmd[0] == h[0]) || (cmd[0] == hh[0])) &(cmd[1] == two[0])){
               from = h2;
               }
               if (((cmd[0] == h[0]) || (cmd[0] == hh[0])) &(cmd[1] == three[0])){
               from = h3;
               }
               if (((cmd[0] == h[0]) || (cmd[0] == hh[0])) &(cmd[1] == four[0])){
               from = h4;
               }
               if (((cmd[0] == h[0]) || (cmd[0] == hh[0])) &(cmd[1] == five[0])){
               from = h5;
               }
               if (((cmd[0] == h[0]) || (cmd[0] == hh[0])) &(cmd[1] == six[0])){
               from = h6;
               }
               if (((cmd[0] == h[0]) || (cmd[0] == hh[0])) &(cmd[1] == severn[0])){
               from = h7;
               }
               if (((cmd[0] == h[0]) || (cmd[0] == hh[0])) &(cmd[1] == eight[0])){
               from = h8;
               }



               if (((cmd[2] == a[0]) || (cmd[2] == aa[0])) &(cmd[3] == one[0])){
               tooo = a1;
               }
               if (((cmd[2] == a[0]) || (cmd[2] == aa[0])) &(cmd[3] == two[0])){
               tooo = a2;
               }
               if (((cmd[2] == a[0]) || (cmd[2] == aa[0])) &(cmd[3] == three[0])){
               tooo = a3;
               }
               if (((cmd[2] == a[0]) || (cmd[2] == aa[0])) &(cmd[3] == four[0])){
               tooo = a4;
               }
               if (((cmd[2] == a[0]) || (cmd[2] == aa[0])) &(cmd[3] == five[0])){
               tooo = a5;
               }
               if (((cmd[2] == a[0]) || (cmd[2] == aa[0])) &(cmd[3] == six[0])){
               tooo = a6;
               }
               if (((cmd[2] == a[0]) || (cmd[2] == aa[0])) &(cmd[3] == severn[0])){
               tooo = a7;
               }
               if (((cmd[2] == a[0]) || (cmd[2] == aa[0])) &(cmd[3] == eight[0])){
               tooo = a8;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0])) &(cmd[3] == one[0])){
               tooo = b1;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0])) &(cmd[3] == two[0])){
               tooo = b2;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0])) &(cmd[3] == three[0])){
               tooo = b3;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0])) &(cmd[3] == four[0])){
               tooo = b4;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0])) &(cmd[3] == five[0])){
               tooo = b5;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0])) &(cmd[3] == six[0])){
               tooo = b6;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0])) &(cmd[3] == severn[0])){
               tooo = b7;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0])) &(cmd[3] == eight[0])){
               tooo = b8;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0])) &(cmd[3] == one[0])){
               tooo = c1;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0])) &(cmd[3] == two[0])){
               tooo = c2;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0])) &(cmd[3] == three[0])){
               tooo = c3;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0])) &(cmd[3] == four[0])){
               tooo = c4;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0])) &(cmd[3] == five[0])){
               tooo = c5;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0])) &(cmd[3] == six[0])){
               tooo = c6;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0])) &(cmd[3] == severn[0])){
               tooo = c7;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0])) &(cmd[3] == eight[0])){
               tooo = c8;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0])) &(cmd[3] == one[0])){
               tooo = d1;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0])) &(cmd[3] == two[0])){
               tooo = d2;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0])) &(cmd[3] == three[0])){
               tooo = d3;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0])) &(cmd[3] == four[0])){
               tooo = d4;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0])) &(cmd[3] == five[0])){
               tooo = d5;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0])) &(cmd[3] == six[0])){
               tooo = d6;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0])) &(cmd[3] == severn[0])){
               tooo = d7;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0])) &(cmd[3] == eight[0])){
               tooo = d8;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0])) &(cmd[3] == one[0])){
               tooo = e1;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0])) &(cmd[3] == two[0])){
               tooo = e2;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0])) &(cmd[3] == three[0])){
               tooo = e3;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0])) &(cmd[3] == four[0])){
               tooo = e4;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0])) &(cmd[3] == five[0])){
               tooo = e5;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0])) &(cmd[3] == six[0])){
               tooo = e6;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0])) &(cmd[3] == severn[0])){
               tooo = e7;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0])) &(cmd[3] == eight[0])){
               tooo = e8;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0])) &(cmd[3] == one[0])){
               tooo = f1;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0])) &(cmd[3] == two[0])){
               tooo = f2;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0])) &(cmd[3] == three[0])){
               tooo = f3;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0])) &(cmd[3] == four[0])){
               tooo = f4;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0])) &(cmd[3] == five[0])){
               tooo = f5;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0])) &(cmd[3] == six[0])){
               tooo = f6;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0])) &(cmd[3] == severn[0])){
               tooo = f7;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0])) &(cmd[3] == eight[0])){
               tooo = f8;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0])) &(cmd[3] == one[0])){
               tooo = g1;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0])) &(cmd[3] == two[0])){
               tooo = g2;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0])) &(cmd[3] == three[0])){
               tooo = g3;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0])) &(cmd[3] == four[0])){
               tooo = g4;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0])) &(cmd[3] == five[0])){
               tooo = g5;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0])) &(cmd[3] == six[0])){
               tooo = g6;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0])) &(cmd[3] == severn[0])){
               tooo = g7;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0])) &(cmd[3] == eight[0])){
               tooo = g8;
               }
               if (((cmd[2] == h[0]) || (cmd[2] == hh[0])) &(cmd[3] == one[0])){
               tooo = h1;
               }
               if (((cmd[2] == h[0]) || (cmd[2] == hh[0])) &(cmd[3] == two[0])){
               tooo = h2;
               }
               if (((cmd[2] == h[0]) || (cmd[2] == hh[0])) &(cmd[3] == three[0])){
               tooo = h3;
               }
               if (((cmd[2] == h[0]) || (cmd[2] == hh[0])) &(cmd[3] == four[0])){
               tooo = h4;
               }
               if (((cmd[2] == h[0]) || (cmd[2] == hh[0])) &(cmd[3] == five[0])){
               tooo = h5;
               }
               if (((cmd[2] == h[0]) || (cmd[2] == hh[0])) &(cmd[3] == six[0])){
               tooo = h6;
               }
               if (((cmd[2] == h[0]) || (cmd[2] == hh[0])) &(cmd[3] == severn[0])){
               tooo = h7;
               }
               if (((cmd[2] == h[0]) || (cmd[2] == hh[0])) &(cmd[3] == eight[0])){
               tooo = h8;
               }
               if ((from > 0) & (tooo > 0)) ok = 4;
               
                if ((from > 0) & (tooo > 0)) if (!moveok(from,tooo,brd,bw)){
			     printf("illeagle move\n") 	;
				
				 ok = 0;
			}
			
               }
               if(ok ==4) {

               if (((cmd[2] == h[0]) || (cmd[2] == hh[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 500;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 500;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 500;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 500;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 500;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 500;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 500;
               }
               if (((cmd[2] == a[0]) || (cmd[2] == aa[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 500;
               }

               if (((cmd[2] == h[0]) || (cmd[2] == hh[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 300;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 300;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 300;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 300;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 300;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 300;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 300;
               }
               if (((cmd[2] == a[0]) || (cmd[2] == aa[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 300;
               }

               if (((cmd[2] == h[0]) || (cmd[2] == hh[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 325;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 325;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 325;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 325;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 325;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 325;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 325;
               }
               if (((cmd[2] == a[0]) || (cmd[2] == aa[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 325;
               }

               if (((cmd[2] == h[0]) || (cmd[2] == hh[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 950;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 950;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 950;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 950;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 950;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 950;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 950;
               }
               if (((cmd[2] == a[0]) || (cmd[2] == aa[0]) ) &(cmd[3] == eight[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 950;
               }

               if (((cmd[2] == h[0]) || (cmd[2] == hh[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 499;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 499;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 499;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 499;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 499;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 499;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 499;
               }
               if (((cmd[2] == a[0]) || (cmd[2] == aa[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == r[0]) || (cmd[5] == rr[0]))
                 brd[0].boardval[from] = 499;
               }

               if (((cmd[2] == h[0]) || (cmd[2] == hh[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 299;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 299;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 299;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 299;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 299;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 299;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 299;
               }
               if (((cmd[2] == a[0]) || (cmd[2] == aa[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == n[0]) || (cmd[5] == nn[0]))
                 brd[0].boardval[from] = 299;
               }

               if (((cmd[2] == h[0]) || (cmd[2] == hh[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 324;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 324;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 324;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 324;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 324;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 324;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 324;
               }
               if (((cmd[2] == a[0]) || (cmd[2] == aa[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == b[0]) || (cmd[5] == bb[0]))
                 brd[0].boardval[from] = 324;
               }

               if (((cmd[2] == h[0]) || (cmd[2] == hh[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 949;
               }
               if (((cmd[2] == g[0]) || (cmd[2] == gg[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 949;
               }
               if (((cmd[2] == f[0]) || (cmd[2] == ff[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 949;
               }
               if (((cmd[2] == e[0]) || (cmd[2] == ee[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 949;
               }
               if (((cmd[2] == d[0]) || (cmd[2] == dd[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 949;
               }
               if (((cmd[2] == c[0]) || (cmd[2] == cc[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 949;
               }
               if (((cmd[2] == b[0]) || (cmd[2] == bb[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 949;
               }
               if (((cmd[2] == a[0]) || (cmd[2] == aa[0]) ) &(cmd[3] == one[0])){
                 if ((cmd[5] == q[0]) || (cmd[5] == qq[0]))
                 brd[0].boardval[from] = 949;
               }






               moveit(from,tooo,brd);
/*            {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
*/


               
               ok = 6;
               // do enpassant and castle
               }
               if(ok == 6) {
               state[0] = 0;
               int valy = 0;
               //check book cnt ++ state[0] = 0 if book move
               // do computer move
               if(state[0] == 0){
               int depth = 3;
               double alpha =10000;
               double beta = 10000;
               int mfr[2];
               int mto[2];
               mfr[0] = 0;
               mto[0]= 0;
               mfr[1] = 0;
               mto[1]= 0;
               int sd[1];
               sd[0]=0;
               if(bw==1) wmovegen(0,brd);
               if(bw==0) bmovegen(0,brd);
               int val = alphabeta4(4,-32000,32000,brd,bw,mfr,mto,sd,cnt);
               
               if ((val >= -32000) & (bw==0))  moveit(mfr[1],mto[1],brd);
               if ((val >= -32000) & (bw==1)) moveit(mfr[1],mto[1],brd);
			   int from = mfr[1];
               int tooo = mto[1];
               unsigned char output[] ={"    "};
       //from = from - 1;
       //tooo = tooo - 1;


       if(from > 56) output[1] = one[0];
       if((from <57) & (from >48)) output[1] = two[0];
       if((from <49) & (from >40)) output[1] = three[0];
       if((from <41) & (from >32)) output[1] = four[0];
       if((from <33) & (from >24)) output[1] = five[0];
       if((from <25) & (from >16)) output[1] = six[0];
       if((from <17) & (from >8)) output[1] = severn[0];
       if((from <9) & (from >0)) output[1] = eight[0];

       if(tooo > 56) output[3] = one[0];
       if((tooo <57) & (tooo >48)) output[3] = two[0];
       if((tooo <49) & (tooo >40)) output[3] = three[0];
       if((tooo <41) & (tooo >32)) output[3] = four[0];
       if((tooo <33) & (tooo >24)) output[3] = five[0];
       if((tooo <25) & (tooo >16)) output[3] = six[0];
       if((tooo <17) & (tooo >8)) output[3] = severn[0];
       if((tooo <9) & (tooo >0)) output[3] = eight[0];

       /*     {0 , 1, 2, 3, 4, 5, 6, 7, 8,
                   9 ,10,11,12,13,14,15,16,
                   17,18,19,20,21,22,23,24,
                   25,26,27,28,29,30,31,32,
                   33,34,35,36,37,38,39,40,
                   41,42,43,44,45,46,47,48,
                   49,50,51,52,53,54,55,56,
                   57,58,59,60,61,62,63,64};
       */


       int tick=0,col=0,ro=0;
       col = from-1;
       ro = tooo-1;

       for(int ddg=0;ddg < 8;ddg++) {
        if(col >= 8) col = col - 8;
        if(ro >= 8 ) ro = ro - 8;
                                     }



       //printf("from %d  tooo %d", from , tooo);

       if(col == 7) output[0]= hh[0];
       if(col == 6) output[0]= gg[0];
       if(col == 5) output[0]= ff[0];
       if(col == 4) output[0]= ee[0];
       if(col == 3) output[0]= dd[0];
       if(col == 2) output[0]= cc[0];
       if(col == 1) output[0]= bb[0];
       if(col == 0) output[0]= aa[0];

       if(ro == 7) output[2]= hh[0];
       if(ro == 6) output[2]= gg[0];
       if(ro == 5) output[2]= ff[0];
       if(ro == 4) output[2]= ee[0];
       if(ro == 3) output[2]= dd[0];
       if(ro == 2) output[2]= cc[0];
       if(ro == 1) output[2]= bb[0];
       if(ro == 0) output[2]= aa[0];




     if((from > 0) & (tooo > 0) & (val > -32000) & (aut == 0))printf("move %c%c%c%c\n",output[0],output[1],output[2],output[3]);
     if((from > 0) & (tooo > 0) & (val > -32000) & (aut == 1) & (ttxt == 0))printf("%c%c%c%c ",output[0],output[1],output[2],output[3]);
     if((from > 0) & (tooo > 0) & (val > -32000) & (aut == 1) & (ttxt == 1))printf("%c%c%c%c\n",output[0],output[1],output[2],output[3]);
     if(val == -32000) printf("gameover\n");
     if(val == 32000) printf("gameover\n");
     //if(val == -32000) aut2 = 0;
     //if(val == 32000) aut2 = 0;
     if(val == -32000) aut2 = 1;
     if(val == 32000) aut2 = 1;
      fflush(stdout);
      
if (ttxt == 1) tooldisptxtboard(value1,brd);
//               printf("!!!!!!!!!!!!!!!!!!!!");
               //moveit(44,45,brd);
               //printf("mfr =%d mto=%d",mfr[0],mto[0]);
               cnt ++;
               ok = 0;
               } // computer move
               } // coomand loop
               } // endit loop
        return 0;
        
}


